{"title":"2 - Comandos básicos do R","markdown":{"yaml":{"title":"2 - Comandos básicos do R","format":"html","toc":true,"number-sections":true,"lang":"pt"},"headingText":"Uma visão da interface *RStudio*","containsRefs":false,"markdown":"\n\n\n<div class = \"reminder-objetivos\">\nObjetivos:\\\n  1. Entender para que servem as janelas e abas do RStudio\\\n  2. Compreender a lógica de comandos e atributos do R\\\n  3. Utilizar comandos por script\n  \n</div>\n\n\n\n|       O `R` é um programa que opera por linha de comando. Isso é um pouco chato, como já visto, porque qualquer erro na digitação de um comando resulta na interrupção da leitura do código. Mas, por outro lado, e também como já visto, *linhas de comando encadeadas e comentadas permitem a reprodução e modificação de trechos de códigos convergentes a um produto* qualquer, no caso, objetos didáticos ao ensino médio, e *sem a necessidade de se memorizar cliques de mouse e operações técnicas*.\n\n|       Diferente do *Jmol*, contudo, o `R` é bem chatinho na sintaxe, não sendo possível mesclar fonte maiúsculas ou minúsculas, bem como singular ou plural. Para que o código funcione, é necessário sua correta digitação. Mas *pode-se tranquilamente aumentar ou reduzir o espaço entre comandos*, o que não faz diferença pro compilador do `R`.\n\n|       Algumas operações são realizadas alternativamente por *mouse*, *linha de comando*, ou ambos, dependendo da ação. A seguir serão apresentadas algumas funcionalidades básicas para a reprodução de códigos para objetos didáticos, sem descrições detalhadas da operação própria do *R & RStudio*, para simplificar e tornar mais objetivo este trabalho. \n\n|       Se você desejar saber mais a respeito de ambos os programas, versão instalada ou em nuvem, sugerimos os inúmeros sites e tutoriais disponíveis na internet, bem como centenas de livros já escritos no assunto, e cursos *on-line* em várias plataformas de ensino.\n\n\\\n\n\n\\\n    | O *Rstudio* nada mais faz do que permitir uma *interace gráfica para o usuário* do `R` (ou *GUI*, do inglês, *Graphic User Interface*), esse um programa executado por linguagem própria de códigos, assim como o *Jmol*.  Diversas operações também são realizadas alternativamente sem comandos ou códigos, como abrir e salvar um arquivo, ou visualizar e salvar um gráfico, por exemplo. Vejamos a divisão da janela principal do *Rstudio*.\n\n![Janela básica do RStudio. A - área de digitação de comandos (*prompt*); B - área de abas de trabalho (diretório, gráficos, pacotes, etc); C - arquivos que aparecem na aba homônima; D - área de abas de administração (ambiente, história de comandos, etc).](rstudioWindows2.png)\n\n|       Para nosso trabalho, contudo, será interessante uma área adicional, a *área de scripts*, a qual se acessa como segue:\n\n\n\n```{r, eval=FALSE}\nFile --> New File --> RScript\n\n... ou por atalho:Ctrl + Shift + N\n\n```\n\n\\\n\n![](rstudioScript.png)\n\\\n\n|       Veja que agora a janela principal se dividiu em mais uma parte, a que incluiu a aba nova para *scripts*.\n\\\n\n![Janela principal do *RStudio* contendo a aba para elaboração e execução de *scripts*.](rstudioScriptAberta.png)\n\\\n\n\n## Como funcionam os comandos no `R`\n\n|       Todos os comandos do `R` são compostos por um *nome* seguido de *argumentos*, esses entre parênteses. Seguem exemplos\n\n```{r, eval=FALSE}\ncomando(argumento 1, argumento 2, argumento 3, ...)\n\nExemplos:\n  plot(x,y)\n  mean(z)\n  read.csv(file = \"meus.dados.csv\")\n```\n\\\n\n\n## Elaborando um *script* no `R`\n\n|       Para se produzir um *script* no `R`, a melhor forma é redigir as linhas de comando de modo similar ao que foi realizado com o visualizador molecular 3D *Jmol* em seu *Console*, separando-os por linhas individuais. Veja um exemplo de cálculo simples:\n\n```{r}\nx = 5\nx^2 +7\n```\n\\\n\n|      E para executar o *script* acima, basta copiá-lo e colá-lo na área de *script* aberta. E aí vai uma **dica de ouro**. Veja que no canto superior direito do *script* existe um *ícone de colagem* do texto do *script*. Basta clicar nesse ícone que o texto estará copiado.\n\n|       Agora é só colar na aba do *script* aberto (em nuvem, por exemplo) e executá-lo como segue.\n\n\\\n\n## Executando um *script* no `R`\n\n|       Existem algumas formas de se executar um *script*, como no exemplo acima, no `R`. Seguem as mais comuns:\n\n```{r, eval=FALSE}\n1. Se deseja executar algumas linhas de um *script*, pode-se selecionar as linhas e clicar Ctrl + Enter ;\n\n2. Se desejar executar todo o *script*, seleciona-se todo o texto (Ctrl + A) seguido da ação acima, Ctrl + Enter ;\n   Opcionalmente, pode-se clicar no ícone \"-->Source\" ;\n   \n3. Se desejar executar apenas uma linha, basta clicar na linha seguido de Ctrl + Enter ;\n   Opcionalmente, pode-se clicar no ícone \"-->Run\" ;\n\n```\n\n\\\n\n<div class=\"reminder-markdown\">\n\n**Agora é com você:**\n\n  A partir do script rodado, e transcrito abaixo:\\\nx = 5 \\\nx^2 +7 \\\n\nModifique a segunda linha de comando para o cálculo em \"x\" utilizando outras operações. Sugetões: \\\n  sqrt(x)  ; raiz quadrada \\\n  log10(x) ; logaritmo de base 10 \\\n  sin(x)   ; seno \n\n</div>\n\n\n## Algumas recomendações sobre a digitação num *script* do `R`:\n\n|       Existem algumas premissas básicas pra que um *script* do `R` seja lido de forma clara por seu elaborador, bem como compilado corretamente pelo programa:\n\n1.  *Digitação*: sempre que houver um erro no *script* no *Rstudio*, surgirá uma cruz vermelha ao lado esquerdo da linha de comando; contornado o erro, o sinal desaparece;\n2.  *Comentários*: para que o *script* seja lido também por *\"um ser humano\"*, é aconselhável tecer comentários nas linhas de comando (iniciados por *\\#* ) - umas das bases do *Ensino Reprodutível*;\n3.  *Identação*: permita \"identação\" quando a linha estiver um pouco longa, clicando na tecla *Enter* após uma separação de argumentos por *\"vírgula\"*. Dessa forma, a linha continua logo abaixo, mas com um pequeno deslocamento à direita. Isso facilita a legibilidade do código.\n4.  *Nomes*: os comandos do `R` são em língua inglesa. Dessa forma, deve-se evitar o uso de variáveis e nomes de arquivos com acentuação ou sinais gráficos em Português (ex: *ç*, *~*). Além disso, o `R`é um compilador de códigos. Se você definir um nome composto para um arquivo ou variável, ou seja, com espaço entre os termos (como é normal no cotidiano. ex: meu arquivo), o `R` tentará executar os termos separadamente (ex: \"meu\", e depois, \"arquivo\"), o que incorrerá na interrupção de leitura e numa mensagem de erro. Assim, para nomes de variáveis e arquivos, dê preferência a um dos 3 tipos de **convenções comuns usadas em programação**, a saber:\n\n* separação por *underline, \" \\_ \"* ou hífen; ex: minha_variável, minha-variável\n* separação por maiúscula; ex: minhaVariável\n* separação por pontos; ex: minha.variável\n\n\n","srcMarkdownNoYaml":"\n\n\n<div class = \"reminder-objetivos\">\nObjetivos:\\\n  1. Entender para que servem as janelas e abas do RStudio\\\n  2. Compreender a lógica de comandos e atributos do R\\\n  3. Utilizar comandos por script\n  \n</div>\n\n\n\n|       O `R` é um programa que opera por linha de comando. Isso é um pouco chato, como já visto, porque qualquer erro na digitação de um comando resulta na interrupção da leitura do código. Mas, por outro lado, e também como já visto, *linhas de comando encadeadas e comentadas permitem a reprodução e modificação de trechos de códigos convergentes a um produto* qualquer, no caso, objetos didáticos ao ensino médio, e *sem a necessidade de se memorizar cliques de mouse e operações técnicas*.\n\n|       Diferente do *Jmol*, contudo, o `R` é bem chatinho na sintaxe, não sendo possível mesclar fonte maiúsculas ou minúsculas, bem como singular ou plural. Para que o código funcione, é necessário sua correta digitação. Mas *pode-se tranquilamente aumentar ou reduzir o espaço entre comandos*, o que não faz diferença pro compilador do `R`.\n\n|       Algumas operações são realizadas alternativamente por *mouse*, *linha de comando*, ou ambos, dependendo da ação. A seguir serão apresentadas algumas funcionalidades básicas para a reprodução de códigos para objetos didáticos, sem descrições detalhadas da operação própria do *R & RStudio*, para simplificar e tornar mais objetivo este trabalho. \n\n|       Se você desejar saber mais a respeito de ambos os programas, versão instalada ou em nuvem, sugerimos os inúmeros sites e tutoriais disponíveis na internet, bem como centenas de livros já escritos no assunto, e cursos *on-line* em várias plataformas de ensino.\n\n\\\n\n## Uma visão da interface *RStudio* \n\n\\\n    | O *Rstudio* nada mais faz do que permitir uma *interace gráfica para o usuário* do `R` (ou *GUI*, do inglês, *Graphic User Interface*), esse um programa executado por linguagem própria de códigos, assim como o *Jmol*.  Diversas operações também são realizadas alternativamente sem comandos ou códigos, como abrir e salvar um arquivo, ou visualizar e salvar um gráfico, por exemplo. Vejamos a divisão da janela principal do *Rstudio*.\n\n![Janela básica do RStudio. A - área de digitação de comandos (*prompt*); B - área de abas de trabalho (diretório, gráficos, pacotes, etc); C - arquivos que aparecem na aba homônima; D - área de abas de administração (ambiente, história de comandos, etc).](rstudioWindows2.png)\n\n|       Para nosso trabalho, contudo, será interessante uma área adicional, a *área de scripts*, a qual se acessa como segue:\n\n\n\n```{r, eval=FALSE}\nFile --> New File --> RScript\n\n... ou por atalho:Ctrl + Shift + N\n\n```\n\n\\\n\n![](rstudioScript.png)\n\\\n\n|       Veja que agora a janela principal se dividiu em mais uma parte, a que incluiu a aba nova para *scripts*.\n\\\n\n![Janela principal do *RStudio* contendo a aba para elaboração e execução de *scripts*.](rstudioScriptAberta.png)\n\\\n\n\n## Como funcionam os comandos no `R`\n\n|       Todos os comandos do `R` são compostos por um *nome* seguido de *argumentos*, esses entre parênteses. Seguem exemplos\n\n```{r, eval=FALSE}\ncomando(argumento 1, argumento 2, argumento 3, ...)\n\nExemplos:\n  plot(x,y)\n  mean(z)\n  read.csv(file = \"meus.dados.csv\")\n```\n\\\n\n\n## Elaborando um *script* no `R`\n\n|       Para se produzir um *script* no `R`, a melhor forma é redigir as linhas de comando de modo similar ao que foi realizado com o visualizador molecular 3D *Jmol* em seu *Console*, separando-os por linhas individuais. Veja um exemplo de cálculo simples:\n\n```{r}\nx = 5\nx^2 +7\n```\n\\\n\n|      E para executar o *script* acima, basta copiá-lo e colá-lo na área de *script* aberta. E aí vai uma **dica de ouro**. Veja que no canto superior direito do *script* existe um *ícone de colagem* do texto do *script*. Basta clicar nesse ícone que o texto estará copiado.\n\n|       Agora é só colar na aba do *script* aberto (em nuvem, por exemplo) e executá-lo como segue.\n\n\\\n\n## Executando um *script* no `R`\n\n|       Existem algumas formas de se executar um *script*, como no exemplo acima, no `R`. Seguem as mais comuns:\n\n```{r, eval=FALSE}\n1. Se deseja executar algumas linhas de um *script*, pode-se selecionar as linhas e clicar Ctrl + Enter ;\n\n2. Se desejar executar todo o *script*, seleciona-se todo o texto (Ctrl + A) seguido da ação acima, Ctrl + Enter ;\n   Opcionalmente, pode-se clicar no ícone \"-->Source\" ;\n   \n3. Se desejar executar apenas uma linha, basta clicar na linha seguido de Ctrl + Enter ;\n   Opcionalmente, pode-se clicar no ícone \"-->Run\" ;\n\n```\n\n\\\n\n<div class=\"reminder-markdown\">\n\n**Agora é com você:**\n\n  A partir do script rodado, e transcrito abaixo:\\\nx = 5 \\\nx^2 +7 \\\n\nModifique a segunda linha de comando para o cálculo em \"x\" utilizando outras operações. Sugetões: \\\n  sqrt(x)  ; raiz quadrada \\\n  log10(x) ; logaritmo de base 10 \\\n  sin(x)   ; seno \n\n</div>\n\n\n## Algumas recomendações sobre a digitação num *script* do `R`:\n\n|       Existem algumas premissas básicas pra que um *script* do `R` seja lido de forma clara por seu elaborador, bem como compilado corretamente pelo programa:\n\n1.  *Digitação*: sempre que houver um erro no *script* no *Rstudio*, surgirá uma cruz vermelha ao lado esquerdo da linha de comando; contornado o erro, o sinal desaparece;\n2.  *Comentários*: para que o *script* seja lido também por *\"um ser humano\"*, é aconselhável tecer comentários nas linhas de comando (iniciados por *\\#* ) - umas das bases do *Ensino Reprodutível*;\n3.  *Identação*: permita \"identação\" quando a linha estiver um pouco longa, clicando na tecla *Enter* após uma separação de argumentos por *\"vírgula\"*. Dessa forma, a linha continua logo abaixo, mas com um pequeno deslocamento à direita. Isso facilita a legibilidade do código.\n4.  *Nomes*: os comandos do `R` são em língua inglesa. Dessa forma, deve-se evitar o uso de variáveis e nomes de arquivos com acentuação ou sinais gráficos em Português (ex: *ç*, *~*). Além disso, o `R`é um compilador de códigos. Se você definir um nome composto para um arquivo ou variável, ou seja, com espaço entre os termos (como é normal no cotidiano. ex: meu arquivo), o `R` tentará executar os termos separadamente (ex: \"meu\", e depois, \"arquivo\"), o que incorrerá na interrupção de leitura e numa mensagem de erro. Assim, para nomes de variáveis e arquivos, dê preferência a um dos 3 tipos de **convenções comuns usadas em programação**, a saber:\n\n* separação por *underline, \" \\_ \"* ou hífen; ex: minha_variável, minha-variável\n* separação por maiúscula; ex: minhaVariável\n* separação por pontos; ex: minha.variável\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"number-sections":true,"output-file":"r_comandos.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Ligações de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno do Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Descarregar código fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de Palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.7.32","theme":{"light":"flatly"},"title":"2 - Comandos básicos do R"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}