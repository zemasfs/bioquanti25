{"title":"Simulações Interativas Para Biofísico-química com JSPlotly & GSPlotly","markdown":{"yaml":{"title":"Simulações Interativas Para Biofísico-química com JSPlotly & GSPlotly","format":"html","toc":true,"toc-depth":2,"number-sections":true,"lang":"pt"},"headingText":"Instruções","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n|   Para ilustrar o potencial de uso do *JSPlotly* para Bioquímica e áreas correlatas, seguem alguns exemplos de **simulações e análise de dados**, e cujos gráficos são frequentemente encontrados em livros-texto e conteúdos afins. Para um melhor aproveitamento de cada tema, experimente seguir as sugestões para *manipulação paramétrica* dos códigos em cada tema. \n\\\n\n\n\n```{r, eval=FALSE}\n\n1. Escolha um tema;\n2. Clique no gráfico correspondente;\n3. Clique em \"Add Plot\";\n4. Use o mouse para interatividade e/ou edite o código. \n\nLembrete: o editor usa desfazer/refazer infinitos no código (Ctrl+Z / Shift+Ctrl+Z) !\n```\n\n\n## Equilíbrio ácido-básico e sistema tampão\n\n#### Contexto: {.unnumbered}\n\n|   O exemplo ilustra a adição de base num sistema contendo um ácido fraco e sua base conjugada. A equação de titulação refere-se a um *ácido triprótico*, o ácido fosfórico do tampão homônimo, mas serviria igualmente para outros tantos, como os presentes no ciclo de Krebs (citrato, isocitrato). \n\n\n#### Equação: {.unnumbered}\n\n$$\nfa= \\frac{1}{1 + 10^{pKa1 - pH}} + \\frac{1}{1 + 10^{pKa2 - pH}} + \\frac{1}{1 + 10^{pKa3 - pH}}\n$$\n*Onde*,\nfa = fração de ácido (grupos protonáveis)\n\\\n\n[![](Eq/tit_acbase.png)](Eq/jsp_acbase.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n\"A. Convertendo a curva de tampão fosfato (triprótico) para tampão bicarbonato (diprótico)\"\n\n1. Altere os valores de pKa para o tampão bicarbonato: pKa1 =      6.1, e pKa2 = 10.3;\n2. Coloque um valor muito grande para pKa3 (ex:1e20). \n3. Clique em \"add plot\".\n\nExplicação: pKa é um termo que representa o logaritmo de uma constante de dissociação (-log[Ka]). Com um valor extremo, o denominador torna-se igualmente imenso, anulando o termo que leva pKa3. Em JavaScript e outras linguagens, \"e\" representa a notação para potência de 10.\n\n\"B. Convertendo a curva de tampão bicarbonato para acetato\"\n\n1. Basta repetir o procedimento acima, com pKa1 = 4.75, e eliminando-se pKa2.\n\n```\n\\\n\n## Rede de carga líquida em peptídios\n\n#### Contexto: {.unnumbered}\n\n|   O código refere-se à rede de carga líquida presente numa sequência qualquer de resíduos de aminoácidos. Aqui é ilustrada a *angiotensina II*, importante peptídio para regulação da pressão arterial e equilíbrio eletrolítico, e cuja enzima conversora está associada ao mecanismo de invasibilidade celular por SARS-CoV-2.\n\n\n#### Equação: {.unnumbered}\n\n|   Para essa simulação não há uma equação direta, já que o algoritmo precisa decidir a carga em função da natureza básica ou ácido do resíduo em determinado valor de pH (observe o *script*). Assim:\n\n$$\nq =\n\\begin{cases}\n-\\dfrac{1}{1 + 10^{pK_a - pH}} & \\text{(grupo ácido)} \\\\\\\\\n\\dfrac{1}{1 + 10^{pH - pK_a}} & \\text{(grupo básico)}\n\\end{cases}\n$$\n\\\n\n*Onde*,\n\n- pKa = valor do antilogarítmo de base 10 para a constante de equilíbrio de dissociação do ácido, Ka (ou log[Ka]).\n\n\n[![](Eq/cargaAA.png)](Eq/jsp_cargaAA.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n1. Selecione a sequência peptídica abaixo, e observe a distribuição de cargas:\n  \n\"Ala,Lys,Arg,Leu,Phe,Glu,Cys,Asp,His\"\n\n2. Simule a condição de pH do estômago (\"const pH = 1.5\"), e verifique a alteração de cargas no peptídio. \n\n3. Selecione um peptídio fisiológico (oxitocina, por ex), observe sua carga no sangue (pH 7.5), e reflita sobre seu potencial de interação eletrostática com componentes celulares.\n\n\"Cys,Tyr,Ile,Gln,Asn,Cys,Pro,Leu,Gly\"  - oxitocina\n```\n\\\n\n\n## Interação de oxigênio com mioglobina e hemoglobina\n\n#### Contexto: {.unnumbered}\n\n|   A molécula de oxigênio pode combinar-se ao grupo *heme* de mioglobina e hemoglobina de forma distinta, em função da cooperatividade exibida nesta última frente à sua estrutura quaternária. O modelo que segue exemplica essa interação, por uso da *equação de Hill*. \n\n\n#### Equação: {.unnumbered}\n\n\n$$\nY= \\frac{pO_2^{nH}}{p_{50}^{nH} + pO_2^{nH}}\n$$\n\\\n\n*Onde*\n\n- Y = grau de saturação de oxigênio na proteína;\n- pO$_{2}$ = pressão de oxigênio;\n- p$_{50}$ = pressão de oxigênio a 50% de saturação;\n- nH = coeficiente de Hill para a interação;\n\\\n\n\n[![](Eq/O2.png)](Eq/jsp_O2.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n1. Rode o aplicativo (\"add plot\"). Veja que o valor de \"nH\" da constante de Hill é \"1\", ou seja, sem efeito de cooperatividade.\n\n2. Agora substitua o valor de \"nH\" pelo coeficiente de Hill para a hemoglobina, 2.8, e rode novamente !\n```\n\\\n\n\n## Efeito de Bohr em hemoglobina (pH)\n\n\n#### Contexto: {.unnumbered}\n\n|   Algumas condições fisiológicas ou patológicas podem alterar a afinidade de ligação do oxigênio com a hemoglobina, tais como a temperatura, alguns metabólitos (2,3-BPG), e o teor hidrogeneiônico da solução.\n\n#### Equação: {.unnumbered}\n\n$$\nY(pO_2) = \\frac{{pO_2^n}}{{P_{50}^n + pO_2^n}}, \\quad \\text{com } P_{50} = P_{50,\\text{ref}} + \\alpha (pH_{\\text{ref}} - pH)\n$$\n\\\n*Onde*,\n\n- Y =  saturação da hemoglobina,\n- pO$_{2}$ =  pressão parcial de oxigênio (em mmHg),\n- P$_{50}$ = pressão de O$_{2}$ na qual a hemoglobina está 50% saturada,\n- P$_{50,ref}$ = 26 mmHg (valor padrão),\n- $\\alpha$ = 50 (intensidade do efeito de Bohr),\n- pH$_{ref}$ = 7,4,\n- n = 2,8 = coeficiente de Hill para a hemoglobina.\n\n\n\n[![](Eq/jspl_bohr.png)](Eq/jspl_bohr.html)\n\n\n\n## Ponto Isoelétrico em Proteínas \n\n\n#### Contexto: {.unnumbered}\n\n|   O *script* para esta simulação baseia-se na distribuição da rede de cargas para um polieletrólito, e a identificação do valor de pH em que essa rede é nula, ou seja o *ponto isoelétrico (ou isoiônico), pI*. O exemplo utiliza a sequência primária da lisozima, hidrolase que atua no rompimento da parede microbiana. \n\n#### Equação: {.unnumbered}\n\n\n$$\nq_{\\text{net}}(pH) = \\sum_{i=1}^{N} \\left[ n_i \\cdot q_{B_i} + \\frac{n_i}{1 + 10^{pH - pK_{a_i}}} \\right]\n$$\n\\\n*Onde*,\n\n- qnet = carga líquida total;\n- qB$_{i} = carga da forma básica para o resíduo i (por exemplo, +1 para Lys, 0 para Asp);\n- n$_{i}$ = número de grupos do resíduo *i*.\n\n[![](Eq/pI.png)](Eq/jsp_pI.html)\n\n\n#### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n\"Descobrindo o pI para outras proteínas\"\n\n1. Pode-se verificar a titulação de qualquer outra proteína ou sequência peptídica por simples substituição da sequência primária contida no código. Uma forma ascertiva de realizar essa substituição envolve:\n  a. Procurar a sequência \"FASTA\" da proteína no NCBI (\"https://www.ncbi.nlm.nih.gov/protein/\") - ex: \"papain\";\n  b. Clicar em \"FASTA\" e copiar a sequência 1a. obtida;\n  c. Colar a sequência num site para quantificação de resíduos (ex: \"https://www.protpi.ch/Calculator/ProteinTool\");\n4. Substituir a sequência no código. \n```\n\\\n\n\n## Catálise e inibição enzimática\n\n### Contexto: {.unnumbered}\n\n|   A simulação visa oferecer uma equação geral para estudos de inibição enzimática, que contemple os *modelos competitivo, incompetitivo e competitivo (puro ou misto)*, também permitindo o estudo de catálise enzimática na ausência de inibidor. \n\n#### Equação: {.unnumbered}\n\n\n$$\nv=\\frac{Vm*S}{Km(1+\\frac{I}{Kic})+S(1+\\frac{I}{Kiu})}\n$$\n\\\n*Onde*\n\n- S = teor de substrato para reação;\n- Vm = velocidade limite da reação (nos livros, velocidade máxima);\n- Km = constante de Michaelis-Mentem;\n- Kic = constante de equilíbrio de dissociação de inibidor para modelo competitivo; \n- Kiu = constante de equilíbrio de dissociação de inibidor para modelo incompetitivo\n\\\n\n\n[![](Eq/kin_inib.png)](Eq/jsp_kin_inib.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n\"A. Catálise enzimática na ausência de inibidor.\"\n1. Basta rodar o aplicativo com a equação geral. Veja que os valores para Kic e Kiu estão elevados (1e20). Dessa forma, com \"constantes de dissociação\" alta, a interação do inibidor com a enzima é irrelevante, retornando o modelo à equação clássica de Michaelis-Mentem.\n2. Experimente alterar os valores de Vm e Km, comparando gráficos.\n3. Use o recurso de coordenadas geográficas da barra de ícones (\"Toggle Spike Lines\"), para consolidar o significado matemático de Km, bem como observar o efeito de valores distintos desse sobre a visualização do gráfico.\n\n\"B. Modelo de inibição competitiva.\"\n1. Para observar ou comparar o modelo michaeliano com o de inibição competitiva, basta substituir o valor de Kic para um número consistente (ex: Kic= 3).\n\n\"C. Modelo de inibição incompetitiva.\"\n1. A mesma sugestão acima serve para o modelo incompetitivo, desta vez substituindo o valor para Kiu.\n \n\"D. Modelo de inibição não competitiva pura.\"\n1. Neste modelo, a simulação dá-se por valores iguais para Kic e Kiu.\n\n\"E. Modelo de inibição não competitiva mista.\"\n1. Para este modelo, basta alocar valores distintos para Kic e Kiu.\n```\n\\\n\n## Estabilidade termodinâmica de ácidos nucleicos\n\n### Contexto: {.unnumbered}\n\n|   Diversos fatores contribuem para a estabilidade termodinâmica de biopolímeros, estabilizantes ou desestabilizantes. Esta simulação trata de uma curva de desnaturação térmica para DNA na presença ou não de alguns desses compostos: trealose (osmólito estabilizante), e cloreto de guanidina (desestabilizante).\n\n\n### Equação: {.unnumbered}\n\n$$\ny(T) = \\frac{1}{1 + e^{-\\frac{T - T_m}{\\beta}}}\n$$\n\n\n*Onde*,\n\n- y(T): fração de DNA desnaturado a uma dada temperatura T;\n- Tm: temperatura de transição (*melting*, temperatura para 50% das moléculas em fita dupla, e 50% em fita simples);\n- $\\beta$: parâmetro que ajusta a inclinação da curva (afetado por trehalose e guanidina).\n\n\n*Obs:* \n\n1. Trehalose como estabilizante (reduz $\\beta$);\n2. Guanidina como desnaturante (aumenta $\\beta$);\n\n\n[![](Eq/denat_DNA.png)](Eq/jsp_denat_DNA_no_osmol.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente testar várias condições envolvidas na simulação, como:\n  a) variação de Tm;\n  b) variação do parâmetro $\\beta$;\n  c) variação do teor de trealose;\n  d) variação do teor de cloreto de guanidina.\n```\n\n\n## Equação de van der Waals para gases ideais\n\n\n### Contexto: {.unnumbered}\n\n|   Uma adaptação que relaciona as quantidades termodinâmicas de pressão, volume e temperatura para gases ideais, é a *equação de van der Waals*. Nessa são computados coeficientes que estimam a existência de um volume e de interações inter-partículas. Dessa forma, a equação de van der Waals corrije a de gases ideais considerando um termo para compensação de forças intermoleculares (a/V$^{2}$) e o volume disponível, esse descontando o volume ocupado pelas próprias moléculas do gás.\n\n\n|   Na simulação é oferecida uma interatividade adicional pela presença de *sliders* (controles deslizantes) para temperatura, e para os coeficientes de volume finito (*b*) e interação entre partículas (*a*).\n\n### Equação: {.unnumbered}\n\n\n$$\nP = \\frac{RT}{V - b} - \\frac{a}{V^2}\n$$\n\n- P = pressão do gás (atm);\n- V = volume molar (L);\n- T = temperatura (K);\n- R = 0,0821 = constante dos gases ideais (L·atm/mol·K);\n- a = constante de atração intermolecular (L$^{2}$·atm/mol$^{2})\n- b = constante de volume excluído (L/mol)\n\n\n\n[![](Eq/vanderWaals.png)](Eq/jsp_vanderWaals.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n\n1. Experimente variar os parâmetros da equação por meio do \"slider\" para temperatura, bem como para os coeficientes \"a e b\".\n2. Discorra sobre qual dos coeficientes possui maior efeito no perfil da curva, e a razão para isso.\n\n```\n\\\n\n## Equilíbrio de produção de ATP a partir de reagentes, temperatura, e pH\n\n### Contexto: {.unnumbered}\n\n|   A produção de ATP intracelular envolve a relação clássica de equilíbrio químico entre reagentes e produtos em função da temperatura de reação, e ajustada para determinado valor de pH. Variando-se um e/ou outro teor de reagente, ou parâmetro físico-químico, é possível quantificar o produto pela reação termodinâmica que segue:\n\n\n### Equação: {.unnumbered}\n\n$$\n\\Delta G = \\Delta G^{\\circ'} + RT \\ln\\left(\\frac{[\\text{ADP}] \\cdot [\\text{P}_i]}{[\\text{ATP}]}\\right) + 2{,}303 \\cdot RT \\cdot n_H \\cdot \\text{pH}\n$$\n\n*Onde*,\n\n- $\\Delta$G = energia de Gibbs da reação (positivo para síntese espontaneamente desfavorável, kJ/mol);\n- $\\Delta$G$^{o'}$ = 30,5 kJ/mol energia de Gibbs padrão biológica para a síntese de ATP;\n- R = 8,314 J/mol/K (constante geral dos gases);\n- T=310 K (temperatura fisiológica);\n- nH$^{+}$ = 1 (número de prótons envolvidos na reação);\n- [ADP], [Pi], [ATP] = concentrações molares de reagentes e produto\n\n\n[![](Eq/ATP.png)](Eq/jsp_ATP.html){target=\"_blank\"}\n\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Altere as quantidades envolvidas na expressão, e compare com visualizações precedentes. Exemplificando, temperatura, pH, e teores de ADP e Pi.\n```\n\n\n## Variação da energia de Gibbs com a temperatura\n\n\n### Contexto: {.unnumbered}\n\n|   A relação de Gibbs-Helmholtz prevê que a energia de Gibbs varia de modo não linear com a temperatura, nas reações que envolvem mudança na capacidade calorífica do sistema ($\\Delta$Cp). Essa forma expandida da equação de Gibbs para capacidade calorífica variável é apresentada em diversos fenômenos bioquímicos, tais como na transição de fases da estrutura de biomembranas submetidas à um desafio de compostos, ou na mudança conformacional que acompanha a estrutura proteica sob aquecimento. \\\n\n### Equação: {.unnumbered}\n\n$$\n\\Delta G(T) = \\Delta H^\\circ - T\\,\\Delta S^\\circ + \\Delta C_p \\left(T - T_0 - T \\ln\\left(\\frac{T}{T_0}\\right)\\right)\n$$\n\n*Onde*,\n\n- $\\Delta$G(T) = energia de Gibbs da reação em cada valor de temperatura, kJ/mol);\n- $\\Delta$H$^{o}$ = entalpia padrão da reação a T$_{0}$, normalmente 298 K (J/mol);\n- $\\Delta$S$^{o}$ = entropia padrão da reação a T$_{0}$;\n- $\\Delta$Cp = variação da capacidade calorífica da reação (J/mol·K), assumida constante com a temperatura;\n- T = temperatura de interesse (K);\n- T$_{0}$ = temperatura de referência, geralmente 298 K. \n- R = 8,314 J/mol/K (constante geral dos gases);\n\n\n[![](Eq/gibbs.png)](Eq/jsp_gibbs.html){target=\"_blank\"}\n\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente variar um ou mais parâmetros da expressão;\n2. Teste o comportamento da curva de Gibbs em uma temperatura de referência elevada (simulação para organismo extremófilo);\n3. Simule a situação onde a variação da capacidade calorífica é nula\n```\n\n\n## Espectroscopia de impedância eletroquímica (EIS)\n\n### Contexto: {.unnumbered}\n\n|       A espectroscopia de impedância eletroquímica (EIS) é uma técnica analítica que mede a resposta de um sistema eletroquímico a uma perturbação senoidal de pequena amplitude (ex: 5-10 mV), aplicada em uma ampla faixa de frequências (ex: 100 kHz-1mHz). A EIS permite obter-se informações sobre processos interfaciais, como transferência de carga, difusão de íons e formação de filmes passivos, por meio da análise da impedância complexa do sistema. Trata-se de uma técnica não destrutiva, amplamente utilizada em áreas como corrosão, baterias, células a combustível, biossensores e revestimentos protetores. \n\n### Equação: {.unnumbered}\n\n\n|       Um modelo eletroquímico de impedância (EIS) com componentes típicos de circuitos equivalentes constitui o de Randles modificado: resistor série *Rs*, um resistor *Rp* em paralelo com um *CPE* (Elemento de Fase Constante), e um elemento *Warburg*. Uma representação comum para EIS é o gráfico de *Nyquist*, em que o eixo real representa resistência (Zre) e o eixo imaginário a reatância negativa (−Zim).  O formalismo envolvido está na equação abaixo:\n\n\n$$\nZ_{\\text{total}}(\\omega) = R_s + \\left[ \\left( \\frac{1}{R_p} + Q (j\\omega)^n \\right)^{-1} \\right] + \\frac{\\sigma}{\\sqrt{\\omega}} (1 - j)\n$$\n\n*Onde:*\n\n- Z$_{total}$ = impedância total em determinada frequência ;\n- $\\omega$ = Frequência angular (rad/s), $\\omega$=2πf ou $\\omega$=2πf;\n- R$_{p}$ = Resistência ôhmica (resistência da solução eletrolítica, fios, contatos etc.) ;\n- R$_{p}$ = Resistência de polarização (associada a processos de transferência de carga, como reações eletroquímicas);\n- *Q* = Constante associada ao elemento de fase constante (CPE), substitui um capacitor ideal para representar comportamentos não ideais ;\n- *n* = Expoente do CPE, entre 0 e 1; define o grau de idealidade do comportamento capacitivo (n = 1: capacitor ideal; n < 1: dispersão);\n- $\\sigma$ = Coeficiente de Warburg, associado à difusão de íons no sistema eletroquímico ;\n- *j* = Unidade imaginária, j$^{2}$ = −1;\n\n\n|       Um modelo eletroquímico de impedância (EIS) com componentes típicos de circuitos equivalentes constitui o de Randles modificado: resistor série *Rs*, um resistor *Rp* em paralelo com um *CPE* (Elemento de Fase Constante), e um elemento *Warburg*. Uma representação comum para EIS é o gráfico de *Nyquist*, em que o eixo real representa resistência (Zre) e o eixo imaginário a reatância negativa (−Zim). \n\n\n[![](Eq/EIS.png)](Eq/jsp_EIS.html){target=\"_blank\"}\n\n### Sugestão {.unnumbered}\n\n```{r, eval=FALSE}\n\n1. Verifique o efeito de Rs no gráfico, anulando o seu valor (resistência da solução);\n2. Observe a deformação do semicírculo variando os valores do elemento de fase constante (ex: Q = 1e-3; n = 0.6 - dispersão do comportamento capacitivo); \n2.  Experimente combinar outros valores dos parâmetros do cabeçalho do código, para evidenciar situações correntes em eletroanálise: Rs, Rp, Q, n, e sigma;\n3. Reduza o modelo de Warburg com elemento de fase constante a um modelo de Randles simples, e formado apenas por 2 resistores em série, o segundo em paralelo com um capacitor ideal, e sem difusão de Warburg (sigma = 0; n = 1).\n```\n\n\n## Voltametria cíclica\n\n### Contexto: {.unnumbered}\n\n|   A voltametria cíclica (VC) é uma técnica eletroanalítica para caracterização de processos redox interfaciais (eletrodo-solução). Quando utilizado um analito padrão em equilíbrio quantitativo entre as formas oxidada e reduzida, o gráfico resultante adquire um perfil incomum, e denominado *duck shape*, ou forma de pato. Isso decorre do formato peculiar frente a uma varredura potenciométrica bidirecional sobre um conjunto de eletrodos por um *potenciostato*, e resultando em ciclos de oxidação e posterior redução (aplicação de potenciais positivos seguido de negativos). A forma, o valor e a distância entre os picos resultantes permitem identificar e caracterizar o analito, bem como seus processos redox envolvidos no experimento. \n\n### Equação: {.unnumbered}\n\n|   Embora o formalismo para voltametria cíclica seja complexo e envolva a solução de *equações diferenciais ordinárias* (bem como as técnicas eletroanalíticas, de modo geral), estando distante do objetivo deste material, pode-se resumir o fluxo de corrente resultante pela *equação de Buttler-Volmer* que segue:\n\n$$\nj = j_0 \\left[ \\exp\\left(\\frac{\\alpha n F (E - E^0)}{RT}\\right) - \\exp\\left(\\frac{-(1 - \\alpha) n F (E - E^0)}{RT}\\right) \\right]\n$$\n*Onde:*\n\n- j = densidade de corrente;\n- j$_{0}$ = corrente de troca;\n- $\\alpha$ = coeficiente de transferência de carga;\n- E = potencial aplicado ao eletrodo;\n- E$^{0}$ = potencial padrão do eletrodo;\n- n = número de elétrons;\n- F = constante de Faraday (96485 C·mol⁻¹)\n- R = constante geral dos gases (8.314 J·mol⁻¹·K⁻¹);\n- T = temperatura\n\\\n\n|   Para um modelo de difusão de eletroanalito e acúmulo na superfície eletródica, a equação geral para a condição de contorno onde a taxa de conversão redox é proporcional à corrente de difusão, pode ser representada pela *equação da 2a. Lei de Fick * para transporte de massa: \n\n$$\n\\frac{\\partial C(x,t)}{\\partial t} = D \\frac{\\partial^2 C(x,t)}{\\partial x^2}\n$$\n\n*Onde:*\n\n- C(x,t) = concentração da espécie eletroanalítica (mol/cm³), em função da posição *x* e do tempo *t*;\n- D = coeficiente de difusão da espécie (cm²/s);\n- t = tempo (s);\n- x = distância da superfície do eletrodo (cm);\n- $\\delta$ = notação para derivada parcial.\n\\\n\n\n|    O equilíbrio químico da reação redox é dado pela razão entre as concentrações da forma oxidada e reduzida na interface eletrodo/solução quando o sistema está em equilíbrio (ou quase-equilíbrio), conforme a *equação de Nernst*: \n\n$$\nE = E^0 + \\frac{RT}{nF} \\ln \\left( \\frac{[\\text{Ox}]}{[\\text{Red}]} \\right)\n$$\n\n\n|   A corrente resultante é obtida pela *Lei de Faraday*:\n\n$$\ni(t) = n F A D \\left. \\frac{\\partial C(x,t)}{\\partial x} \\right|_{x=0}\n$$\n*Onde:*\n\n- A = área de superfície eletródica (cm²);\n- i(t) = corrente no tempo *t* (A, Àmpere).\n\n\n### Simulador de Voltametria Cíclica {.unnumbered}\n\n\n|   Para ilustrar o potencial da plataforma *JSPlotly/GSPlotly* para o desenvolvimento de *experimentos virtuais* complexos, segue um *simulador de voltametria cíclica* resultante dos procedimentos acima (bem como de algumas horas de engenharia de prompt!!). \n\n|   O exemplo ilustra um comportamento típico em voltametria cíclica (e o curioso *duck shape*), e contempla uma modelagem de difusão e acúmulo de espécies eletroativas próximo à superfície do eletrodo. O código utiliza uma *solução numérica* para obter a densidade de corrente ao longo do tempo, considerando os efeitos da varredura cíclica do potencial aplicado, o transporte de massa, e a cinética da reação.\n\n|   Em suma, resolve numericamente a equação de Fick com condição de contorno dinâmica, aplica a equação de Nernst na fronteira (superfície do eletrodo) para determinar a conversão entre espécies, usa o método das diferenças finitas ou esquema explícito para avançar no tempo, e obtém a corrente aplicando a Lei de Faraday, pela derivada do fluxo na interface.\n\n|   Achou complexo ? Então que tal: o código une Fick (transporte) e Nernst (equilíbrio redox local) para modelar com precisão a forma do voltamograma, obtendo-se uma simulação física com realismo significativo para voltametria cíclica.\n\\\n\n\n\n[![](Eq/cv.png)](Eq/jsp_cv.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Observe o quantidade de valores ao início do código, tangíveis a uma \"manipulação paramétrica\". Procure saber o que representam, e busque variar seus valores de modo consciente, objetivando agregar valor ao aprendizado da simulação. Essa é a alma da \"manipulação paramétrica\" que envolve o \"ensino reprodutível\" !!\n```\n\n\n\n## Diagramas e fluxogramas\n\n### Contexto: Diagrama {.unnumbered}\n\n\n|       Pela natureza da biblioteca *Plotly.js*, também é possível a geração de códigos no *JSPlotly* sem o envolvimento de uma equação, tal como para representação de diagramas e fluxogramas, entre outros. O exemplo abaixo ilustra uma representação do ciclo de Krebs, e o seguinte um fluxograma experimental.\n\n\n[![](Eq/krebs.png)](Eq/jsp_krebs.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente reposicionar melhor enzimas e metabólitos, apenas clicando e arrastando os termos;\n2. Experimente substituir os nomes que estão no código para a produção de outro ciclo metabólico, como o ciclo da ureia.\n```\n\n\n### Contexto: Fluxograma {.unnumbered}\n\n\n[![](Eq/fluxograma.png)](Eq/jsp_fluxograma.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Reposicione termos e conectores com arraste de mouse;\n2. Para um fluxograma diferente no conteúdo, modifique os termos no código;\n2. Para um fluxograma diferente no formato, altere as características de fonte e conectores na constante \"annotations\".\n\n\n```\n\\\n<\\br>\n\n## **Análise de Dados** {.unnumbered}\n\n\n## Inserção de dados do usuário\n\n\n### Contexto {.unnumbered}\n\n|   Por vezes é interessante trabalhar-se com os próprios dados discretos, buscando-se uma relação de tendência, matemática ou simplesmente visual, para a relação de variáveis. Segue um exemplo de gráfico interativo com dados do usuário.\n\\\n\n[![](Eq/dados.png)](Eq/jsp_dados.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente alterar os dados inseridos, sobrepondo ou não o gráfico;\n2. Experimente alterar a representação de dados em \"mode\" e \"type\", para pontos, linhas, pontos+linhas, barras.\n```\n\n\\\n\n## Carregamento de arquivo para análise\n\n### Contexto - Arquivo CSV {.unnumbered}\n\n|   Por vezes, há necessidade de se analisar resultados referentes a um conjunto de dados presente numa planilha. Para essa situação, o exemplo a seguir ilustra o carregamento de dois vetores de dados a partir de um arquivo *CSV* (*comma separated value*), formato comumente utilizado em exportação/importação em planilhas eletrônicas, e seu gráfico resultante.  \n\n[![](Eq/csv.png)](Eq/jsp_csv.html){target=\"_blank\"}\n\n**Instruções:**\n\n- 1 Clique em *add plot* e selecione um arquivo CSV no botão *browse* superior que é apresentado. Nota: variável *X* na 1a. coluna do arquivo, e variável *Y* na 2a. coluna;\n- 2. Clique em *add plot* novamente para a visualização do gráfico resultante.\n\n```{r, eval=FALSE}\n1. Experimente outros arquivos CSV;\n2. Varie os aspectos do gráfico, como tipo, cor, tamanho do marcador, etc.\n```\n\n\n\n## Ajuste linear de dados\n\n### Contexto: {.unnumbered}\n\n|   Em diversas situações da pesquisa experimental, faz-se necessário correlacionar os dados de uma variável dependente com uma variável preditora frente à equação que segue.\n\n\n### Equação: {.unnumbered}\n\n\n$$\ny = \\alpha x + \\beta + \\varepsilon\n$$\n*Onde:*\n\n- y = variável dependente; \n- x = variável independente; \n- $\\alpha$ = inclinação da reta ajustada (*slope*); \n- $\\beta$ = intercepto da reta ajustada;\n- $\\epsilon$ = erro da medida.\n\n\n|   Pode-se obter os parâmetros de *inclinação e intercepto* por alguns procedimentos, como *mínimos quadrados*, *álgebra matricial*, ou por *somatórias* simples. Nesse último caso, o cálculo de parâmetros e de erro pode ser computado como segue:\n\n$$\n\\alpha = \\frac{n \\sum x_i y_i - \\sum x_i \\sum y_i}{n \\sum x_i^2 - \\left( \\sum x_i \\right)^2}\n$$\n\n$$\n\\beta = \\frac{\\sum y_i - \\alpha \\sum x_i}{n}\n$$\n\n$$\n\\hat{y}_i = \\alpha x_i + \\beta\n$$\n\n$$\n\\varepsilon_i = \\left| y_i - \\hat{y}_i \\right|\n$$\n\n\n\n|   Uma representação para ajuste linear com dados arbitrários é fornecida abaixo:\n\\\n\n[![](Eq/ajLin.png)](Eq/jsp_ajLin.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Apresente os pontos sobrepostos ou não à reta do ajuste. Para a sobreposição, escolha \"mostrarPontos = true\" e \"mostrarReta = true\";\n2. Altere os dados e realize novo ajuste, para obtenção de outros parâmetros da reta.\n```\n\n\n## Regressão polinomial\n\n### Contexto: {.unnumbered}\n\n|   Em algumas situações, o ajuste linear não confere uma tendência adequada para modelagem de dados experimentais, o que suscita o emprego de outros modelos, tais como *exponencial, hiperbólico, logarítmico, de potência, e polinomial*. Tendências polinomiais são comuns em fenômenos naturais, com o tratamento matemático dos dados ocorrendo por diferentes métodos, como somatórias simples, mínimos quadrados, ou álgebra linear. Segue um exemplo de regressão polinomial com graus ajustáveis no código.\n\n### Equação\n\n|   A minimização de erros para a curva polinomial é obtida por uma *regressão por mínimos quadrados* generalizada, e aplicação de *matriz de Vandermonde*, como segue.\n\n|   Seja os vetores x=[x$_{1}$,x$_{2}$,…,x$_{n}$] e y=[y$_{1}$,y$_{2}$,…,y${_n}$], deseja-se ajustar o polinômio:\n\n$$\ny = \\beta_0 + \\beta_1 x + \\beta_2 x^2 + \\cdots + \\beta_g x^g\n$$\n|   Dessa forma, elabora-se a matriz de Vandermonde como:\n\n$$\nX =\n\\begin{bmatrix}\n1 & x_1 & x_1^2 & \\cdots & x_1^g \\\\\\\\\n1 & x_2 & x_2^2 & \\cdots & x_2^g \\\\\\\\\n\\vdots & \\vdots & \\vdots & & \\vdots \\\\\\\\\n1 & x_n & x_n^2 & \\cdots & x_n^g\n\\end{bmatrix}\n$$\n\n\n|   Para encontrar os *coeficientes $\\beta$* que minimizem o erro quadrático, soluciona-se o sistema linear em sequência:\n\n$$\n\\boldsymbol{\\beta} = (X^T X)^{-1} X^T \\mathbf{y}\n$$\n\\\n\n*Onde:*\n\n- *T* representa a matriz transposta\n\\\n\n\n\n[![](Eq/polinomial.png)](Eq/jsp_polinomial.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente o grau 1 para o polinômio, ou seja, uma redução do tratamento ao ajuste linear;\n2. Altere a formatação de rótulos, cores, tamanhos, etc, no código;\n3. Sobreponha alguns ajustes, edite e reposicione a legenda;\n4. Teste o código com outro vetor de dados.\n```\n\n\n## Regressão multilinear\n\n### Contexto: {.unnumbered}\n\n|   Ajuste linear múltiplo é de grande utilidade quando se deseja prever um comportamento em função de duas ou mais variáveis preditoras. O procedimento envolve uma *matriz de projeto* (ou *operador de projeção*) similar à *matriz de Vandermonde*.\n\n\n### Equação: {.unnumbered}\n\n|   A solução analítica para a matriz de projetos envolve resolver uma matriz de coeficientes $\\beta$ para um conjunto de valores preditores do vetor de resposta *y*, como segue:\n\n$$\ny_i = \\beta_0 + \\beta_1 x_{1i} + \\beta_2 x_{2i} + \\cdots + \\beta_p x_{pi} + \\varepsilon_i\n$$\n\n$$\n\\mathbf{y} = \\mathbf{X} \\boldsymbol{\\beta} + \\boldsymbol{\\varepsilon}\n$$\n\n$$\n\\hat{\\boldsymbol{\\beta}} = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\n$$\n\n*Onde:*\n- $\\beta$ = vetor de coeficientes;\n- *y* = vetor de respostas;\n- *X* = matriz de projeto;\n- $\\epsilon$ = ruído aleatório\n\n\n|   Dessa forma, valores preditos e erro associado são obtidos por:\n\n$$\n\\hat{\\mathbf{y}} = \\mathbf{X} \\hat{\\boldsymbol{\\beta}}\n$$\n$$\n\\mathbf{e} = \\mathbf{y} - \\hat{\\mathbf{y}}\n$$\n\n\n|   Por óbvio, a representação gráfica para um ajuste multilinear está limitada a duas variáveis independentes, *x1* e *x2*, além da variável resposta (*gráfico 3D*), embora o cálculo matricial permita diversas variáveis preditoras (espaço hiperdimensional). Tangente à primeira situação, segue um exemplo.\n\n**Instruções**\n- 1. Observer que há um flag booleano (*mostrarAjuste*) ao início do código: *false* para dados somente, e *true* para o ajuste.\n- 2. Pode-se clicar em *add plot* para visualizar os dados com o flag em *false*, seguido de outro *add plot* com o flag em *true*.\n\\\n\n[![](Eq/multilinear.png)](Eq/jsp_multilinear.html){target=\"_blank\"}\n\\\n\n|   Rotacione o gráfico e observe a superfície em torno dos pontos. Diferente de um ajuste linear, os pontos estão distribuídos de forma não contínua no espaço.\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Resultados de QSAR (\"Quantitative Structure-Activity Relationship\") utilizam análise por ajuste multilinear para identificar a força das variáveis preditoras. Experimente na internet um conjunto de dados que possua 2 variáveis (ex: concentração, pH, composto A, B, etc.)\n2. Para mais variáveis preditoras, veja o código que segue !!\n```\n\n\n### Contexto: Ajuste linear múltiplo com 3 ou mais variáveis preditoras\n\n|   Embora o *JSPlotly* tenha sido concebido para a produção de gráficos e mapas interativos com uso da biblioteca *Plotly.js* sobre os ombros da linguagem *JavaScript*, essa extende as possibilidades de aplicação além das representações gráficas. Um exemplo disso permeia o código que segue, para um *ajuste multilinear* para uma situação com 4 variáveis preditoras.\n\n\n[![](Eq/multilin4Var.png)](Eq/jsp_multilin4Var.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente variar o número de preditores (xi). Para isso:\n  a. Sem quiser reduzir, basta retirar o(s) vetor(res) desejados, e corrigir seu quantitativo na linha: \"const X = x1.map((_, i)\";\n  b. Se quiser aumentar, acrescente um novo vetor na linha correspondente, e atualize o quantitativo no mapeamento de \"const X = x1.map((_, i)\".\n```\n\n\n\n## Metodologia de Superfície de Resposta  (MSR)\n\n|   Uma variação de ajuste multilinear envolve a *metodologia de superfície de resposta*, comumente linear (plano) ou quadrática (curvilinear), aplicada em modelagem e otimização de processos experimentais com múltiplas variáveis independentes. Seu objetivo é ajustar uma equação matemática que represente a relação entre os fatores experimentais e a variável resposta, permitindo prever comportamentos e identificar condições ótimas. \n\n|   Para experimentos com dois fatores, utiliza-se comumente um modelo quadrático de segunda ordem, o qual permite representar superfícies com curvatura. A ideia central do experimento é selecionar valores e seus códigos (-1,0,1), representando, respectivamente, uma quantidade abaixo, uma quantidade média, e uma acima, para determinada variável preditora.\n\n### Equação: {.unnumbered}\n\n|   O modelo geral quadrático para 2 fatores é representado por:\n\n\n$$\ny = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\beta_{11} x_1^2 + \\beta_{22} x_2^2 + \\beta_{12} x_1 x_2 + \\varepsilon\n$$\n\n|   Com a forma matricial do modelo representada por:\n\n$$\n\\mathbf{y} = \\mathbf{X} \\boldsymbol{\\beta} + \\boldsymbol{\\varepsilon}\n$$\n\n|   E a estimativa dos coeficientes $\\beta$ por mínimos quadrados, de modo similar ao ajuste multilinear, por:\n\n\n$$\n\\hat{\\boldsymbol{\\beta}} = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\n$$\n\\\n\n\n\n\n[![](Eq/msr.png)](Eq/jsp_msr.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Como sugerido anteriormente, experimente utilizar dados da literatura ou de outra fonte cujas respostas já são conhecidas, substituindo os respectivos vetores ao início do código. Isso permite comparar a eficácia de uso da ferramenta apresentada.\n```\n\n\n\n## Suavização de dados - Spline e filtro de Savitzky-Golay \n\n|       Em pesquisa experimental a detecção de sinais ocasionalmente ocorre na presença de níveis significativos de ruído, tal como ocorre em varredura contínua espectral sob variação de comprimento de onda, ou na detecção de sinais elétricos no tempo. Nesse caso, não há uma equação analítica que descreva o comportamento do sinal, embora algumas ferramentas de processamento digital possam confiar uma curva de tendência no tratamento de dados, reduzindo significativamente o nível de ruído, tais como por *curva de spline* e *filtro de Savitzky-Golay*.    \n\n\n### Contexto - Spline cúbica {.unnumbered}\n\n|       Uma técnica de interpolação bastante comum refere-se ao uso de spline cúbica por polinômios de grau 3 interconectando janelas de dados. O tratamento consiste em aplicar as funções polinomiais em subintervalos dos pontos, promovendo uma suavização entre as janelas de dados.  Matematicamente, a spline é aplicada de tal forma que:\n\n$$\nS_i(x) = a_i + b_i(x - x_i) + c_i(x - x_i)^2 + d_i(x - x_i)^3\n$$\n\n\n*Onde:*\n\n- S$_{i}$(x) = função spline cúbica no intervalo *[xi,xi+1]*;\n- a$_{i, b$_{i}$, c$_{i}$, d$_{i}$ = coeficientes específicos para o segmento *i*;\n- x$_{i}$ = ponto inicial do intervalo;\n- *x* = variável independente.\n\n\n### Contexto - filtro de Savitzky-Golay\n\n|        Já a técnica de suavização por filtro de Savitzky-Golay aplica uma regressão polinomial local a uma janela móvel, por mínimos quadrados e grau pré-determinado, preservando sinais de picos, vales e bandas. Distinto da spline cúbica, o filtro produz uma curva contínua global, e não um conjunto de curvas interconectadas. Matematicamente:\n\n\n$$\n\\tilde{y}_i = \\sum_{j=-m}^{m} c_j \\cdot y_{i+j}\n$$\n\n*Onde:*\n\n- y$_{i}$ =  valor suavizado na posição *i*;\n- y$_{i+j}$ = valores reais da série dentro da janela;\n- c$_{i}$ = coeficientes do filtro derivados de uma regressão polinomial;\n- *m* = número de pontos de cada lado da janela central.\n\n|   Segue um exemplo de código para o *JSplotly* e que ilustra o uso dos dois métodos de interpolação.\n\n[![](Eq/splineGolay.png)](Eq/jsp_splineGolay.html){target=\"_blank\"}\n\\\n\n**Instruções:**\n\n- 1. O código possui dois *flags true/false*, um para \"usarGolay\" e outro para \"usarSpline\";\n- 2. Visualize os dados brutos adotando *false* para ambos os flags;\n- 3. Para sobrepor uma spline cúbica mude sua constante para *true*;\n- 4. Para sobrepor o filtro de Savitzky-Golay, mude sua constante para *true*;\n- 5. Para ajustar o filtro, modifique seus parâmetros nas constantes *janela* (janela móvel) e/ou *grau* (grau do polinômio).\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Compare os efeitos de suavização pelos dois tratamentos de interpolação polinomial;\n2. Aplique apenas o filtro, ajustando parâmetros de janela móvel e grau polinomial;\n3.  Experimente a interpolação com outros dados brutos no código, substituindo as constantes \"x_values\" e \"y_raw\" por vetores numéricos;\n```\n\n\n## ANAVA e teste de Tukey-HSD\n\n### Contexto: {.unnumbered}\n\n|   Em pesquisa é comum proceder a análise de um conjunto de dados comparando-se a variância entre grupos com a obtida dentro de cada grupo, ou *Análise de Variância (ANAVA)*.  Uma vez obtida a informação estatística de que há diferença entre os grupos superior à interna, procede-se um teste *pos-hoc* para comparação de médias, como o *teste de Tukey-HSD* (*Honest Significant Difference*). \n\n### Equação: {.unnumbered}\n\n|   A equação que caracteriza um teste de Tukeu-HSD é fornecida abaixo (correção para grupos desbalanceados):\n\n\n$$\n\\text{HSD}_{ij} = q_{\\alpha} \\cdot \\sqrt{\\frac{\\text{MS}_{\\text{within}}}{2} \\left( \\frac{1}{n_i} + \\frac{1}{n_j} \\right)}\n$$\n\n*Onde:*\n\n- HSD = valor mínimo da diferença entre duas médias para que ela seja considerada significativa;\n- q$_{\\alpha}$ =  valor crítico da distribuição studentizada *q* (distribuição de Tukey), dependendo do número de grupos e do nível de significância $\\alpha$;\n- MS$_{within}$ = quadrado médio dentro dos grupos (erro) obtido da ANAVA;\n- n: número de observações por grupo (*i* e *j* se houver grupos de tamanhos diferentes). \n\\\n\n\n[![](Eq/tukey.png)](Eq/jsp_tukey.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Você pode clicar e arrastar os marcadores de mínima diferença (a,b,etc) acima do gráfico, para melhor ajuste visual, bem como a tabela de ANAVA e o resultado do teste estatístico;\n2. Altere os valores dos vetores, refaça a análise e o gráfico simultâneos, e perceba a diferença nos valores obtidos. Observe que, como informado na borda inferior, é necessário atualizar a página do site para anular dados anteriores retidos em memória cache;\n3. Insira outros dados nos vetores respectivos, seus ou de outra fonte;\n4. Insira novos vetores de dados, ou delete algum, para um cálculo e gráfico personalizado.\n\n```\n\n\n\n## Ajuste não linear de dados\n\n|   Modelagem é uma área de emprego comum nas ciências naturais, quando se deseja previsão ou correlação matemática de dados experimentais. Modelos podem constituir-se lineares ou não. Quando não lineares, podem ser aplicados de forma empírica para os dados (ex: funções quadráticas, logarítmicas, exponenciais ou de potência), ou a partir de uma função matemática explanatória do modelo. \n\n|   Nesse caso são empregadas técnicas para ajuste não linear dos dados ao modelo, como *Simplex*,  *Gauss*, *Newton-Raphson*, *Levenberg-Marquadt*, ou *mínimos quadrados* por exemplo. Seja qual for o método, o ajuste não linear difere-se do linear em pressupostos e tratamento dos dados (veja uma rápida explicação [aqui](https://bioquanti.netlify.app/pt/nivel/superior/r/enzimas#ajuste-n%C3%A3o-linear). \n\n### Contexto: Interação ligante-proteína (algoritmo de *grid search*) {.unnumbered}\n\n\n|   O exemplo a seguir ilustra a aplicação de um ajuste não linear de dados de interação molecular por modelo de Langmuir, e tratamento por *minimização do erro quadrático por varredura manual*. Nesse tratamento, calcula-se a *soma dos erros quadráticos (RMSE)* para combinações de *a* e *b*, selecionando-se o par com menor erro calculado. Nesse caso, por simplificação, apesar do *JSPlotly* trabalhar com bibliotecas mais específicas, a regressão não linear dá-se por mínimos quadrados, mas realizada por *grid search*, e não por métodos iterativos clássicos. Assim, um conjunto de valores é testado para o par (a, b) em uma malha definida previamente (tabela de combinações), permitindo a identificação dos parâmetros que melhor descrevem os dados experimentais segundo o critério de erro mínimo.\n\\\n\n### Equação: {.unnumbered}\n\n|   A equação de Langmuir é representada abaixo:\n\n$$\nY = \\frac{aX}{K_d + X}\n$$\n*Onde:*\n\n- Y = fração de sítios ocupados;\n- X = concentração do ligante livre;\n- *a* = valor de saturação (sítios de mesma afinidade completamente ocupados);\n- *Kd* = constante de equilíbrio de dissociação do complexo.\n\n\n\n|   Nesse caso, a função de mínimos quadrados não linear fica:\n\n$$\nSSR(a, K_d) = \\sum_{i=1}^n \\left( y_i - \\frac{a x_i}{K_d + x_i} \\right)^2\n$$\n\n\n*Onde:*\n\n*SSR* = soma dos quadrados dos resíduos (inversamente propocional à qualidade do ajuste)\n\\\n\n\n[![](Eq/ajNonLin.png)](Eq/jsp_ajNonLin.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Como no exemplo anterior, apresente alternativamente os pontos e a curva de ajuste pela operação \"booleana\" (\"mostrarPontos = true/false\"; \"mostrarCurva = true/false\");\n2. Altere os dados e realize novo ajuste, para obtenção de outros parâmetros da equação (Kd, SSR, R², R² ajustado). Obs: R² adj corresponde ao valor de R² corrigido para o número de parâmetros do modelo (no caso, \"2\"), incidindo diretamente nos \"graus de liberdade\" para o ajuste.\n```\n\\\n\n                               \n### Contexto - Inibição competitiva em cinética enzimática (algoritmo de Gauss-Newton) {.unnumbered}   \n\n\n|   O método de *Gauss-Newton* ajusta iterativamente modelos não lineares a conjuntos de dados experimentais. Ele é especialmente eficiente quando o modelo é *quase linear* em relação aos parâmetros e os resíduos são moderadamente pequenos. O objetivo é encontrar os parâmetros $\\theta$ que minimizam a soma dos quadrados dos resíduos entre os dados observados *yi* e os valores preditos pelo modelo f(xi,$\\theta$. Diferente do método de Newton-Raphson completo, o Gauss-Newton evita o cálculo explícito da Hessiana, utilizando uma aproximação baseada na Jacobiana dos resíduos.\n\n\n## Equação: {.unnumbered}\n\n|   Essa aproximação resulta em um sistema linear que pode ser resolvido a cada iteração para atualizar os parâmetros do modelo. A fórmula central do método consiste na multiplicação da Jacobiana transposta *JT* pela própria Jacobiana *J*, formando uma matriz simétrica que aproxima a Hessiana. O vetor de resíduos *r* é então usado para determinar a direção de atualização $\\Delta\\theta$, com a seguinte equação:\n\n$$\n\\theta_{k+1} = \\theta_k + \\left(J^T J\\right)^{-1} J^T \\cdot r\n$$\n\n|   Para ilustrar o potencial do aplicativo em ajuste não linear iterativo, segue um exemplo para cinética enzimática utilizando-se um *modelo de inibição competitiva*. \n\n|   O código permite ajustar as *sementes*, *tolerância*, e número de *iterações*, e oferece o gráfico (pontos/linha ajustada, manualmente), e parâmetros estatísticos da regressão.\n\\\n\n**Instruções**\n\n- 1. Perceba que o código possui um flag para *true/false* na constante *ajuste*. Deixe-o em *false* para a representação dos dados, somente (vetores *x* e *y*, ou *S* e *v*);\n- 2. Na área da *Plot* do código, acerte a constante *trace* para que fique com os vetores de dados, também;\n- 3. Clique em *add plot* para visualizar os pontos experimentais;\n- 4. Para superimpor a curva ajustada, atualize as constantes *ajuste* e *trace* (vetores *S_fit* e *v_fit*), e escolha *lines* em *mode*.\n\n[![](Eq/ajNonLinGauss2.png)](Eq/jsp_ajNonLinGauss2.html){target=\"_blank\"}\n\n\n\n                                                                                                     ","srcMarkdownNoYaml":"\n\n|   Para ilustrar o potencial de uso do *JSPlotly* para Bioquímica e áreas correlatas, seguem alguns exemplos de **simulações e análise de dados**, e cujos gráficos são frequentemente encontrados em livros-texto e conteúdos afins. Para um melhor aproveitamento de cada tema, experimente seguir as sugestões para *manipulação paramétrica* dos códigos em cada tema. \n\\\n\n## Instruções {.unnumbered}\n\n\n```{r, eval=FALSE}\n\n1. Escolha um tema;\n2. Clique no gráfico correspondente;\n3. Clique em \"Add Plot\";\n4. Use o mouse para interatividade e/ou edite o código. \n\nLembrete: o editor usa desfazer/refazer infinitos no código (Ctrl+Z / Shift+Ctrl+Z) !\n```\n\n\n## Equilíbrio ácido-básico e sistema tampão\n\n#### Contexto: {.unnumbered}\n\n|   O exemplo ilustra a adição de base num sistema contendo um ácido fraco e sua base conjugada. A equação de titulação refere-se a um *ácido triprótico*, o ácido fosfórico do tampão homônimo, mas serviria igualmente para outros tantos, como os presentes no ciclo de Krebs (citrato, isocitrato). \n\n\n#### Equação: {.unnumbered}\n\n$$\nfa= \\frac{1}{1 + 10^{pKa1 - pH}} + \\frac{1}{1 + 10^{pKa2 - pH}} + \\frac{1}{1 + 10^{pKa3 - pH}}\n$$\n*Onde*,\nfa = fração de ácido (grupos protonáveis)\n\\\n\n[![](Eq/tit_acbase.png)](Eq/jsp_acbase.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n\"A. Convertendo a curva de tampão fosfato (triprótico) para tampão bicarbonato (diprótico)\"\n\n1. Altere os valores de pKa para o tampão bicarbonato: pKa1 =      6.1, e pKa2 = 10.3;\n2. Coloque um valor muito grande para pKa3 (ex:1e20). \n3. Clique em \"add plot\".\n\nExplicação: pKa é um termo que representa o logaritmo de uma constante de dissociação (-log[Ka]). Com um valor extremo, o denominador torna-se igualmente imenso, anulando o termo que leva pKa3. Em JavaScript e outras linguagens, \"e\" representa a notação para potência de 10.\n\n\"B. Convertendo a curva de tampão bicarbonato para acetato\"\n\n1. Basta repetir o procedimento acima, com pKa1 = 4.75, e eliminando-se pKa2.\n\n```\n\\\n\n## Rede de carga líquida em peptídios\n\n#### Contexto: {.unnumbered}\n\n|   O código refere-se à rede de carga líquida presente numa sequência qualquer de resíduos de aminoácidos. Aqui é ilustrada a *angiotensina II*, importante peptídio para regulação da pressão arterial e equilíbrio eletrolítico, e cuja enzima conversora está associada ao mecanismo de invasibilidade celular por SARS-CoV-2.\n\n\n#### Equação: {.unnumbered}\n\n|   Para essa simulação não há uma equação direta, já que o algoritmo precisa decidir a carga em função da natureza básica ou ácido do resíduo em determinado valor de pH (observe o *script*). Assim:\n\n$$\nq =\n\\begin{cases}\n-\\dfrac{1}{1 + 10^{pK_a - pH}} & \\text{(grupo ácido)} \\\\\\\\\n\\dfrac{1}{1 + 10^{pH - pK_a}} & \\text{(grupo básico)}\n\\end{cases}\n$$\n\\\n\n*Onde*,\n\n- pKa = valor do antilogarítmo de base 10 para a constante de equilíbrio de dissociação do ácido, Ka (ou log[Ka]).\n\n\n[![](Eq/cargaAA.png)](Eq/jsp_cargaAA.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n1. Selecione a sequência peptídica abaixo, e observe a distribuição de cargas:\n  \n\"Ala,Lys,Arg,Leu,Phe,Glu,Cys,Asp,His\"\n\n2. Simule a condição de pH do estômago (\"const pH = 1.5\"), e verifique a alteração de cargas no peptídio. \n\n3. Selecione um peptídio fisiológico (oxitocina, por ex), observe sua carga no sangue (pH 7.5), e reflita sobre seu potencial de interação eletrostática com componentes celulares.\n\n\"Cys,Tyr,Ile,Gln,Asn,Cys,Pro,Leu,Gly\"  - oxitocina\n```\n\\\n\n\n## Interação de oxigênio com mioglobina e hemoglobina\n\n#### Contexto: {.unnumbered}\n\n|   A molécula de oxigênio pode combinar-se ao grupo *heme* de mioglobina e hemoglobina de forma distinta, em função da cooperatividade exibida nesta última frente à sua estrutura quaternária. O modelo que segue exemplica essa interação, por uso da *equação de Hill*. \n\n\n#### Equação: {.unnumbered}\n\n\n$$\nY= \\frac{pO_2^{nH}}{p_{50}^{nH} + pO_2^{nH}}\n$$\n\\\n\n*Onde*\n\n- Y = grau de saturação de oxigênio na proteína;\n- pO$_{2}$ = pressão de oxigênio;\n- p$_{50}$ = pressão de oxigênio a 50% de saturação;\n- nH = coeficiente de Hill para a interação;\n\\\n\n\n[![](Eq/O2.png)](Eq/jsp_O2.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n1. Rode o aplicativo (\"add plot\"). Veja que o valor de \"nH\" da constante de Hill é \"1\", ou seja, sem efeito de cooperatividade.\n\n2. Agora substitua o valor de \"nH\" pelo coeficiente de Hill para a hemoglobina, 2.8, e rode novamente !\n```\n\\\n\n\n## Efeito de Bohr em hemoglobina (pH)\n\n\n#### Contexto: {.unnumbered}\n\n|   Algumas condições fisiológicas ou patológicas podem alterar a afinidade de ligação do oxigênio com a hemoglobina, tais como a temperatura, alguns metabólitos (2,3-BPG), e o teor hidrogeneiônico da solução.\n\n#### Equação: {.unnumbered}\n\n$$\nY(pO_2) = \\frac{{pO_2^n}}{{P_{50}^n + pO_2^n}}, \\quad \\text{com } P_{50} = P_{50,\\text{ref}} + \\alpha (pH_{\\text{ref}} - pH)\n$$\n\\\n*Onde*,\n\n- Y =  saturação da hemoglobina,\n- pO$_{2}$ =  pressão parcial de oxigênio (em mmHg),\n- P$_{50}$ = pressão de O$_{2}$ na qual a hemoglobina está 50% saturada,\n- P$_{50,ref}$ = 26 mmHg (valor padrão),\n- $\\alpha$ = 50 (intensidade do efeito de Bohr),\n- pH$_{ref}$ = 7,4,\n- n = 2,8 = coeficiente de Hill para a hemoglobina.\n\n\n\n[![](Eq/jspl_bohr.png)](Eq/jspl_bohr.html)\n\n\n\n## Ponto Isoelétrico em Proteínas \n\n\n#### Contexto: {.unnumbered}\n\n|   O *script* para esta simulação baseia-se na distribuição da rede de cargas para um polieletrólito, e a identificação do valor de pH em que essa rede é nula, ou seja o *ponto isoelétrico (ou isoiônico), pI*. O exemplo utiliza a sequência primária da lisozima, hidrolase que atua no rompimento da parede microbiana. \n\n#### Equação: {.unnumbered}\n\n\n$$\nq_{\\text{net}}(pH) = \\sum_{i=1}^{N} \\left[ n_i \\cdot q_{B_i} + \\frac{n_i}{1 + 10^{pH - pK_{a_i}}} \\right]\n$$\n\\\n*Onde*,\n\n- qnet = carga líquida total;\n- qB$_{i} = carga da forma básica para o resíduo i (por exemplo, +1 para Lys, 0 para Asp);\n- n$_{i}$ = número de grupos do resíduo *i*.\n\n[![](Eq/pI.png)](Eq/jsp_pI.html)\n\n\n#### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n\"Descobrindo o pI para outras proteínas\"\n\n1. Pode-se verificar a titulação de qualquer outra proteína ou sequência peptídica por simples substituição da sequência primária contida no código. Uma forma ascertiva de realizar essa substituição envolve:\n  a. Procurar a sequência \"FASTA\" da proteína no NCBI (\"https://www.ncbi.nlm.nih.gov/protein/\") - ex: \"papain\";\n  b. Clicar em \"FASTA\" e copiar a sequência 1a. obtida;\n  c. Colar a sequência num site para quantificação de resíduos (ex: \"https://www.protpi.ch/Calculator/ProteinTool\");\n4. Substituir a sequência no código. \n```\n\\\n\n\n## Catálise e inibição enzimática\n\n### Contexto: {.unnumbered}\n\n|   A simulação visa oferecer uma equação geral para estudos de inibição enzimática, que contemple os *modelos competitivo, incompetitivo e competitivo (puro ou misto)*, também permitindo o estudo de catálise enzimática na ausência de inibidor. \n\n#### Equação: {.unnumbered}\n\n\n$$\nv=\\frac{Vm*S}{Km(1+\\frac{I}{Kic})+S(1+\\frac{I}{Kiu})}\n$$\n\\\n*Onde*\n\n- S = teor de substrato para reação;\n- Vm = velocidade limite da reação (nos livros, velocidade máxima);\n- Km = constante de Michaelis-Mentem;\n- Kic = constante de equilíbrio de dissociação de inibidor para modelo competitivo; \n- Kiu = constante de equilíbrio de dissociação de inibidor para modelo incompetitivo\n\\\n\n\n[![](Eq/kin_inib.png)](Eq/jsp_kin_inib.html){target=\"_blank\"}\n\\\n<!---div class=\"jsplotly_sup-fundo\"> --->\n\n### Sugestão: {.unnumbered}\n\n```{r, eval =FALSE}\n\"A. Catálise enzimática na ausência de inibidor.\"\n1. Basta rodar o aplicativo com a equação geral. Veja que os valores para Kic e Kiu estão elevados (1e20). Dessa forma, com \"constantes de dissociação\" alta, a interação do inibidor com a enzima é irrelevante, retornando o modelo à equação clássica de Michaelis-Mentem.\n2. Experimente alterar os valores de Vm e Km, comparando gráficos.\n3. Use o recurso de coordenadas geográficas da barra de ícones (\"Toggle Spike Lines\"), para consolidar o significado matemático de Km, bem como observar o efeito de valores distintos desse sobre a visualização do gráfico.\n\n\"B. Modelo de inibição competitiva.\"\n1. Para observar ou comparar o modelo michaeliano com o de inibição competitiva, basta substituir o valor de Kic para um número consistente (ex: Kic= 3).\n\n\"C. Modelo de inibição incompetitiva.\"\n1. A mesma sugestão acima serve para o modelo incompetitivo, desta vez substituindo o valor para Kiu.\n \n\"D. Modelo de inibição não competitiva pura.\"\n1. Neste modelo, a simulação dá-se por valores iguais para Kic e Kiu.\n\n\"E. Modelo de inibição não competitiva mista.\"\n1. Para este modelo, basta alocar valores distintos para Kic e Kiu.\n```\n\\\n\n## Estabilidade termodinâmica de ácidos nucleicos\n\n### Contexto: {.unnumbered}\n\n|   Diversos fatores contribuem para a estabilidade termodinâmica de biopolímeros, estabilizantes ou desestabilizantes. Esta simulação trata de uma curva de desnaturação térmica para DNA na presença ou não de alguns desses compostos: trealose (osmólito estabilizante), e cloreto de guanidina (desestabilizante).\n\n\n### Equação: {.unnumbered}\n\n$$\ny(T) = \\frac{1}{1 + e^{-\\frac{T - T_m}{\\beta}}}\n$$\n\n\n*Onde*,\n\n- y(T): fração de DNA desnaturado a uma dada temperatura T;\n- Tm: temperatura de transição (*melting*, temperatura para 50% das moléculas em fita dupla, e 50% em fita simples);\n- $\\beta$: parâmetro que ajusta a inclinação da curva (afetado por trehalose e guanidina).\n\n\n*Obs:* \n\n1. Trehalose como estabilizante (reduz $\\beta$);\n2. Guanidina como desnaturante (aumenta $\\beta$);\n\n\n[![](Eq/denat_DNA.png)](Eq/jsp_denat_DNA_no_osmol.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente testar várias condições envolvidas na simulação, como:\n  a) variação de Tm;\n  b) variação do parâmetro $\\beta$;\n  c) variação do teor de trealose;\n  d) variação do teor de cloreto de guanidina.\n```\n\n\n## Equação de van der Waals para gases ideais\n\n\n### Contexto: {.unnumbered}\n\n|   Uma adaptação que relaciona as quantidades termodinâmicas de pressão, volume e temperatura para gases ideais, é a *equação de van der Waals*. Nessa são computados coeficientes que estimam a existência de um volume e de interações inter-partículas. Dessa forma, a equação de van der Waals corrije a de gases ideais considerando um termo para compensação de forças intermoleculares (a/V$^{2}$) e o volume disponível, esse descontando o volume ocupado pelas próprias moléculas do gás.\n\n\n|   Na simulação é oferecida uma interatividade adicional pela presença de *sliders* (controles deslizantes) para temperatura, e para os coeficientes de volume finito (*b*) e interação entre partículas (*a*).\n\n### Equação: {.unnumbered}\n\n\n$$\nP = \\frac{RT}{V - b} - \\frac{a}{V^2}\n$$\n\n- P = pressão do gás (atm);\n- V = volume molar (L);\n- T = temperatura (K);\n- R = 0,0821 = constante dos gases ideais (L·atm/mol·K);\n- a = constante de atração intermolecular (L$^{2}$·atm/mol$^{2})\n- b = constante de volume excluído (L/mol)\n\n\n\n[![](Eq/vanderWaals.png)](Eq/jsp_vanderWaals.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n\n1. Experimente variar os parâmetros da equação por meio do \"slider\" para temperatura, bem como para os coeficientes \"a e b\".\n2. Discorra sobre qual dos coeficientes possui maior efeito no perfil da curva, e a razão para isso.\n\n```\n\\\n\n## Equilíbrio de produção de ATP a partir de reagentes, temperatura, e pH\n\n### Contexto: {.unnumbered}\n\n|   A produção de ATP intracelular envolve a relação clássica de equilíbrio químico entre reagentes e produtos em função da temperatura de reação, e ajustada para determinado valor de pH. Variando-se um e/ou outro teor de reagente, ou parâmetro físico-químico, é possível quantificar o produto pela reação termodinâmica que segue:\n\n\n### Equação: {.unnumbered}\n\n$$\n\\Delta G = \\Delta G^{\\circ'} + RT \\ln\\left(\\frac{[\\text{ADP}] \\cdot [\\text{P}_i]}{[\\text{ATP}]}\\right) + 2{,}303 \\cdot RT \\cdot n_H \\cdot \\text{pH}\n$$\n\n*Onde*,\n\n- $\\Delta$G = energia de Gibbs da reação (positivo para síntese espontaneamente desfavorável, kJ/mol);\n- $\\Delta$G$^{o'}$ = 30,5 kJ/mol energia de Gibbs padrão biológica para a síntese de ATP;\n- R = 8,314 J/mol/K (constante geral dos gases);\n- T=310 K (temperatura fisiológica);\n- nH$^{+}$ = 1 (número de prótons envolvidos na reação);\n- [ADP], [Pi], [ATP] = concentrações molares de reagentes e produto\n\n\n[![](Eq/ATP.png)](Eq/jsp_ATP.html){target=\"_blank\"}\n\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Altere as quantidades envolvidas na expressão, e compare com visualizações precedentes. Exemplificando, temperatura, pH, e teores de ADP e Pi.\n```\n\n\n## Variação da energia de Gibbs com a temperatura\n\n\n### Contexto: {.unnumbered}\n\n|   A relação de Gibbs-Helmholtz prevê que a energia de Gibbs varia de modo não linear com a temperatura, nas reações que envolvem mudança na capacidade calorífica do sistema ($\\Delta$Cp). Essa forma expandida da equação de Gibbs para capacidade calorífica variável é apresentada em diversos fenômenos bioquímicos, tais como na transição de fases da estrutura de biomembranas submetidas à um desafio de compostos, ou na mudança conformacional que acompanha a estrutura proteica sob aquecimento. \\\n\n### Equação: {.unnumbered}\n\n$$\n\\Delta G(T) = \\Delta H^\\circ - T\\,\\Delta S^\\circ + \\Delta C_p \\left(T - T_0 - T \\ln\\left(\\frac{T}{T_0}\\right)\\right)\n$$\n\n*Onde*,\n\n- $\\Delta$G(T) = energia de Gibbs da reação em cada valor de temperatura, kJ/mol);\n- $\\Delta$H$^{o}$ = entalpia padrão da reação a T$_{0}$, normalmente 298 K (J/mol);\n- $\\Delta$S$^{o}$ = entropia padrão da reação a T$_{0}$;\n- $\\Delta$Cp = variação da capacidade calorífica da reação (J/mol·K), assumida constante com a temperatura;\n- T = temperatura de interesse (K);\n- T$_{0}$ = temperatura de referência, geralmente 298 K. \n- R = 8,314 J/mol/K (constante geral dos gases);\n\n\n[![](Eq/gibbs.png)](Eq/jsp_gibbs.html){target=\"_blank\"}\n\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente variar um ou mais parâmetros da expressão;\n2. Teste o comportamento da curva de Gibbs em uma temperatura de referência elevada (simulação para organismo extremófilo);\n3. Simule a situação onde a variação da capacidade calorífica é nula\n```\n\n\n## Espectroscopia de impedância eletroquímica (EIS)\n\n### Contexto: {.unnumbered}\n\n|       A espectroscopia de impedância eletroquímica (EIS) é uma técnica analítica que mede a resposta de um sistema eletroquímico a uma perturbação senoidal de pequena amplitude (ex: 5-10 mV), aplicada em uma ampla faixa de frequências (ex: 100 kHz-1mHz). A EIS permite obter-se informações sobre processos interfaciais, como transferência de carga, difusão de íons e formação de filmes passivos, por meio da análise da impedância complexa do sistema. Trata-se de uma técnica não destrutiva, amplamente utilizada em áreas como corrosão, baterias, células a combustível, biossensores e revestimentos protetores. \n\n### Equação: {.unnumbered}\n\n\n|       Um modelo eletroquímico de impedância (EIS) com componentes típicos de circuitos equivalentes constitui o de Randles modificado: resistor série *Rs*, um resistor *Rp* em paralelo com um *CPE* (Elemento de Fase Constante), e um elemento *Warburg*. Uma representação comum para EIS é o gráfico de *Nyquist*, em que o eixo real representa resistência (Zre) e o eixo imaginário a reatância negativa (−Zim).  O formalismo envolvido está na equação abaixo:\n\n\n$$\nZ_{\\text{total}}(\\omega) = R_s + \\left[ \\left( \\frac{1}{R_p} + Q (j\\omega)^n \\right)^{-1} \\right] + \\frac{\\sigma}{\\sqrt{\\omega}} (1 - j)\n$$\n\n*Onde:*\n\n- Z$_{total}$ = impedância total em determinada frequência ;\n- $\\omega$ = Frequência angular (rad/s), $\\omega$=2πf ou $\\omega$=2πf;\n- R$_{p}$ = Resistência ôhmica (resistência da solução eletrolítica, fios, contatos etc.) ;\n- R$_{p}$ = Resistência de polarização (associada a processos de transferência de carga, como reações eletroquímicas);\n- *Q* = Constante associada ao elemento de fase constante (CPE), substitui um capacitor ideal para representar comportamentos não ideais ;\n- *n* = Expoente do CPE, entre 0 e 1; define o grau de idealidade do comportamento capacitivo (n = 1: capacitor ideal; n < 1: dispersão);\n- $\\sigma$ = Coeficiente de Warburg, associado à difusão de íons no sistema eletroquímico ;\n- *j* = Unidade imaginária, j$^{2}$ = −1;\n\n\n|       Um modelo eletroquímico de impedância (EIS) com componentes típicos de circuitos equivalentes constitui o de Randles modificado: resistor série *Rs*, um resistor *Rp* em paralelo com um *CPE* (Elemento de Fase Constante), e um elemento *Warburg*. Uma representação comum para EIS é o gráfico de *Nyquist*, em que o eixo real representa resistência (Zre) e o eixo imaginário a reatância negativa (−Zim). \n\n\n[![](Eq/EIS.png)](Eq/jsp_EIS.html){target=\"_blank\"}\n\n### Sugestão {.unnumbered}\n\n```{r, eval=FALSE}\n\n1. Verifique o efeito de Rs no gráfico, anulando o seu valor (resistência da solução);\n2. Observe a deformação do semicírculo variando os valores do elemento de fase constante (ex: Q = 1e-3; n = 0.6 - dispersão do comportamento capacitivo); \n2.  Experimente combinar outros valores dos parâmetros do cabeçalho do código, para evidenciar situações correntes em eletroanálise: Rs, Rp, Q, n, e sigma;\n3. Reduza o modelo de Warburg com elemento de fase constante a um modelo de Randles simples, e formado apenas por 2 resistores em série, o segundo em paralelo com um capacitor ideal, e sem difusão de Warburg (sigma = 0; n = 1).\n```\n\n\n## Voltametria cíclica\n\n### Contexto: {.unnumbered}\n\n|   A voltametria cíclica (VC) é uma técnica eletroanalítica para caracterização de processos redox interfaciais (eletrodo-solução). Quando utilizado um analito padrão em equilíbrio quantitativo entre as formas oxidada e reduzida, o gráfico resultante adquire um perfil incomum, e denominado *duck shape*, ou forma de pato. Isso decorre do formato peculiar frente a uma varredura potenciométrica bidirecional sobre um conjunto de eletrodos por um *potenciostato*, e resultando em ciclos de oxidação e posterior redução (aplicação de potenciais positivos seguido de negativos). A forma, o valor e a distância entre os picos resultantes permitem identificar e caracterizar o analito, bem como seus processos redox envolvidos no experimento. \n\n### Equação: {.unnumbered}\n\n|   Embora o formalismo para voltametria cíclica seja complexo e envolva a solução de *equações diferenciais ordinárias* (bem como as técnicas eletroanalíticas, de modo geral), estando distante do objetivo deste material, pode-se resumir o fluxo de corrente resultante pela *equação de Buttler-Volmer* que segue:\n\n$$\nj = j_0 \\left[ \\exp\\left(\\frac{\\alpha n F (E - E^0)}{RT}\\right) - \\exp\\left(\\frac{-(1 - \\alpha) n F (E - E^0)}{RT}\\right) \\right]\n$$\n*Onde:*\n\n- j = densidade de corrente;\n- j$_{0}$ = corrente de troca;\n- $\\alpha$ = coeficiente de transferência de carga;\n- E = potencial aplicado ao eletrodo;\n- E$^{0}$ = potencial padrão do eletrodo;\n- n = número de elétrons;\n- F = constante de Faraday (96485 C·mol⁻¹)\n- R = constante geral dos gases (8.314 J·mol⁻¹·K⁻¹);\n- T = temperatura\n\\\n\n|   Para um modelo de difusão de eletroanalito e acúmulo na superfície eletródica, a equação geral para a condição de contorno onde a taxa de conversão redox é proporcional à corrente de difusão, pode ser representada pela *equação da 2a. Lei de Fick * para transporte de massa: \n\n$$\n\\frac{\\partial C(x,t)}{\\partial t} = D \\frac{\\partial^2 C(x,t)}{\\partial x^2}\n$$\n\n*Onde:*\n\n- C(x,t) = concentração da espécie eletroanalítica (mol/cm³), em função da posição *x* e do tempo *t*;\n- D = coeficiente de difusão da espécie (cm²/s);\n- t = tempo (s);\n- x = distância da superfície do eletrodo (cm);\n- $\\delta$ = notação para derivada parcial.\n\\\n\n\n|    O equilíbrio químico da reação redox é dado pela razão entre as concentrações da forma oxidada e reduzida na interface eletrodo/solução quando o sistema está em equilíbrio (ou quase-equilíbrio), conforme a *equação de Nernst*: \n\n$$\nE = E^0 + \\frac{RT}{nF} \\ln \\left( \\frac{[\\text{Ox}]}{[\\text{Red}]} \\right)\n$$\n\n\n|   A corrente resultante é obtida pela *Lei de Faraday*:\n\n$$\ni(t) = n F A D \\left. \\frac{\\partial C(x,t)}{\\partial x} \\right|_{x=0}\n$$\n*Onde:*\n\n- A = área de superfície eletródica (cm²);\n- i(t) = corrente no tempo *t* (A, Àmpere).\n\n\n### Simulador de Voltametria Cíclica {.unnumbered}\n\n\n|   Para ilustrar o potencial da plataforma *JSPlotly/GSPlotly* para o desenvolvimento de *experimentos virtuais* complexos, segue um *simulador de voltametria cíclica* resultante dos procedimentos acima (bem como de algumas horas de engenharia de prompt!!). \n\n|   O exemplo ilustra um comportamento típico em voltametria cíclica (e o curioso *duck shape*), e contempla uma modelagem de difusão e acúmulo de espécies eletroativas próximo à superfície do eletrodo. O código utiliza uma *solução numérica* para obter a densidade de corrente ao longo do tempo, considerando os efeitos da varredura cíclica do potencial aplicado, o transporte de massa, e a cinética da reação.\n\n|   Em suma, resolve numericamente a equação de Fick com condição de contorno dinâmica, aplica a equação de Nernst na fronteira (superfície do eletrodo) para determinar a conversão entre espécies, usa o método das diferenças finitas ou esquema explícito para avançar no tempo, e obtém a corrente aplicando a Lei de Faraday, pela derivada do fluxo na interface.\n\n|   Achou complexo ? Então que tal: o código une Fick (transporte) e Nernst (equilíbrio redox local) para modelar com precisão a forma do voltamograma, obtendo-se uma simulação física com realismo significativo para voltametria cíclica.\n\\\n\n\n\n[![](Eq/cv.png)](Eq/jsp_cv.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Observe o quantidade de valores ao início do código, tangíveis a uma \"manipulação paramétrica\". Procure saber o que representam, e busque variar seus valores de modo consciente, objetivando agregar valor ao aprendizado da simulação. Essa é a alma da \"manipulação paramétrica\" que envolve o \"ensino reprodutível\" !!\n```\n\n\n\n## Diagramas e fluxogramas\n\n### Contexto: Diagrama {.unnumbered}\n\n\n|       Pela natureza da biblioteca *Plotly.js*, também é possível a geração de códigos no *JSPlotly* sem o envolvimento de uma equação, tal como para representação de diagramas e fluxogramas, entre outros. O exemplo abaixo ilustra uma representação do ciclo de Krebs, e o seguinte um fluxograma experimental.\n\n\n[![](Eq/krebs.png)](Eq/jsp_krebs.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente reposicionar melhor enzimas e metabólitos, apenas clicando e arrastando os termos;\n2. Experimente substituir os nomes que estão no código para a produção de outro ciclo metabólico, como o ciclo da ureia.\n```\n\n\n### Contexto: Fluxograma {.unnumbered}\n\n\n[![](Eq/fluxograma.png)](Eq/jsp_fluxograma.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Reposicione termos e conectores com arraste de mouse;\n2. Para um fluxograma diferente no conteúdo, modifique os termos no código;\n2. Para um fluxograma diferente no formato, altere as características de fonte e conectores na constante \"annotations\".\n\n\n```\n\\\n<\\br>\n\n## **Análise de Dados** {.unnumbered}\n\n\n## Inserção de dados do usuário\n\n\n### Contexto {.unnumbered}\n\n|   Por vezes é interessante trabalhar-se com os próprios dados discretos, buscando-se uma relação de tendência, matemática ou simplesmente visual, para a relação de variáveis. Segue um exemplo de gráfico interativo com dados do usuário.\n\\\n\n[![](Eq/dados.png)](Eq/jsp_dados.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente alterar os dados inseridos, sobrepondo ou não o gráfico;\n2. Experimente alterar a representação de dados em \"mode\" e \"type\", para pontos, linhas, pontos+linhas, barras.\n```\n\n\\\n\n## Carregamento de arquivo para análise\n\n### Contexto - Arquivo CSV {.unnumbered}\n\n|   Por vezes, há necessidade de se analisar resultados referentes a um conjunto de dados presente numa planilha. Para essa situação, o exemplo a seguir ilustra o carregamento de dois vetores de dados a partir de um arquivo *CSV* (*comma separated value*), formato comumente utilizado em exportação/importação em planilhas eletrônicas, e seu gráfico resultante.  \n\n[![](Eq/csv.png)](Eq/jsp_csv.html){target=\"_blank\"}\n\n**Instruções:**\n\n- 1 Clique em *add plot* e selecione um arquivo CSV no botão *browse* superior que é apresentado. Nota: variável *X* na 1a. coluna do arquivo, e variável *Y* na 2a. coluna;\n- 2. Clique em *add plot* novamente para a visualização do gráfico resultante.\n\n```{r, eval=FALSE}\n1. Experimente outros arquivos CSV;\n2. Varie os aspectos do gráfico, como tipo, cor, tamanho do marcador, etc.\n```\n\n\n\n## Ajuste linear de dados\n\n### Contexto: {.unnumbered}\n\n|   Em diversas situações da pesquisa experimental, faz-se necessário correlacionar os dados de uma variável dependente com uma variável preditora frente à equação que segue.\n\n\n### Equação: {.unnumbered}\n\n\n$$\ny = \\alpha x + \\beta + \\varepsilon\n$$\n*Onde:*\n\n- y = variável dependente; \n- x = variável independente; \n- $\\alpha$ = inclinação da reta ajustada (*slope*); \n- $\\beta$ = intercepto da reta ajustada;\n- $\\epsilon$ = erro da medida.\n\n\n|   Pode-se obter os parâmetros de *inclinação e intercepto* por alguns procedimentos, como *mínimos quadrados*, *álgebra matricial*, ou por *somatórias* simples. Nesse último caso, o cálculo de parâmetros e de erro pode ser computado como segue:\n\n$$\n\\alpha = \\frac{n \\sum x_i y_i - \\sum x_i \\sum y_i}{n \\sum x_i^2 - \\left( \\sum x_i \\right)^2}\n$$\n\n$$\n\\beta = \\frac{\\sum y_i - \\alpha \\sum x_i}{n}\n$$\n\n$$\n\\hat{y}_i = \\alpha x_i + \\beta\n$$\n\n$$\n\\varepsilon_i = \\left| y_i - \\hat{y}_i \\right|\n$$\n\n\n\n|   Uma representação para ajuste linear com dados arbitrários é fornecida abaixo:\n\\\n\n[![](Eq/ajLin.png)](Eq/jsp_ajLin.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Apresente os pontos sobrepostos ou não à reta do ajuste. Para a sobreposição, escolha \"mostrarPontos = true\" e \"mostrarReta = true\";\n2. Altere os dados e realize novo ajuste, para obtenção de outros parâmetros da reta.\n```\n\n\n## Regressão polinomial\n\n### Contexto: {.unnumbered}\n\n|   Em algumas situações, o ajuste linear não confere uma tendência adequada para modelagem de dados experimentais, o que suscita o emprego de outros modelos, tais como *exponencial, hiperbólico, logarítmico, de potência, e polinomial*. Tendências polinomiais são comuns em fenômenos naturais, com o tratamento matemático dos dados ocorrendo por diferentes métodos, como somatórias simples, mínimos quadrados, ou álgebra linear. Segue um exemplo de regressão polinomial com graus ajustáveis no código.\n\n### Equação\n\n|   A minimização de erros para a curva polinomial é obtida por uma *regressão por mínimos quadrados* generalizada, e aplicação de *matriz de Vandermonde*, como segue.\n\n|   Seja os vetores x=[x$_{1}$,x$_{2}$,…,x$_{n}$] e y=[y$_{1}$,y$_{2}$,…,y${_n}$], deseja-se ajustar o polinômio:\n\n$$\ny = \\beta_0 + \\beta_1 x + \\beta_2 x^2 + \\cdots + \\beta_g x^g\n$$\n|   Dessa forma, elabora-se a matriz de Vandermonde como:\n\n$$\nX =\n\\begin{bmatrix}\n1 & x_1 & x_1^2 & \\cdots & x_1^g \\\\\\\\\n1 & x_2 & x_2^2 & \\cdots & x_2^g \\\\\\\\\n\\vdots & \\vdots & \\vdots & & \\vdots \\\\\\\\\n1 & x_n & x_n^2 & \\cdots & x_n^g\n\\end{bmatrix}\n$$\n\n\n|   Para encontrar os *coeficientes $\\beta$* que minimizem o erro quadrático, soluciona-se o sistema linear em sequência:\n\n$$\n\\boldsymbol{\\beta} = (X^T X)^{-1} X^T \\mathbf{y}\n$$\n\\\n\n*Onde:*\n\n- *T* representa a matriz transposta\n\\\n\n\n\n[![](Eq/polinomial.png)](Eq/jsp_polinomial.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente o grau 1 para o polinômio, ou seja, uma redução do tratamento ao ajuste linear;\n2. Altere a formatação de rótulos, cores, tamanhos, etc, no código;\n3. Sobreponha alguns ajustes, edite e reposicione a legenda;\n4. Teste o código com outro vetor de dados.\n```\n\n\n## Regressão multilinear\n\n### Contexto: {.unnumbered}\n\n|   Ajuste linear múltiplo é de grande utilidade quando se deseja prever um comportamento em função de duas ou mais variáveis preditoras. O procedimento envolve uma *matriz de projeto* (ou *operador de projeção*) similar à *matriz de Vandermonde*.\n\n\n### Equação: {.unnumbered}\n\n|   A solução analítica para a matriz de projetos envolve resolver uma matriz de coeficientes $\\beta$ para um conjunto de valores preditores do vetor de resposta *y*, como segue:\n\n$$\ny_i = \\beta_0 + \\beta_1 x_{1i} + \\beta_2 x_{2i} + \\cdots + \\beta_p x_{pi} + \\varepsilon_i\n$$\n\n$$\n\\mathbf{y} = \\mathbf{X} \\boldsymbol{\\beta} + \\boldsymbol{\\varepsilon}\n$$\n\n$$\n\\hat{\\boldsymbol{\\beta}} = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\n$$\n\n*Onde:*\n- $\\beta$ = vetor de coeficientes;\n- *y* = vetor de respostas;\n- *X* = matriz de projeto;\n- $\\epsilon$ = ruído aleatório\n\n\n|   Dessa forma, valores preditos e erro associado são obtidos por:\n\n$$\n\\hat{\\mathbf{y}} = \\mathbf{X} \\hat{\\boldsymbol{\\beta}}\n$$\n$$\n\\mathbf{e} = \\mathbf{y} - \\hat{\\mathbf{y}}\n$$\n\n\n|   Por óbvio, a representação gráfica para um ajuste multilinear está limitada a duas variáveis independentes, *x1* e *x2*, além da variável resposta (*gráfico 3D*), embora o cálculo matricial permita diversas variáveis preditoras (espaço hiperdimensional). Tangente à primeira situação, segue um exemplo.\n\n**Instruções**\n- 1. Observer que há um flag booleano (*mostrarAjuste*) ao início do código: *false* para dados somente, e *true* para o ajuste.\n- 2. Pode-se clicar em *add plot* para visualizar os dados com o flag em *false*, seguido de outro *add plot* com o flag em *true*.\n\\\n\n[![](Eq/multilinear.png)](Eq/jsp_multilinear.html){target=\"_blank\"}\n\\\n\n|   Rotacione o gráfico e observe a superfície em torno dos pontos. Diferente de um ajuste linear, os pontos estão distribuídos de forma não contínua no espaço.\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Resultados de QSAR (\"Quantitative Structure-Activity Relationship\") utilizam análise por ajuste multilinear para identificar a força das variáveis preditoras. Experimente na internet um conjunto de dados que possua 2 variáveis (ex: concentração, pH, composto A, B, etc.)\n2. Para mais variáveis preditoras, veja o código que segue !!\n```\n\n\n### Contexto: Ajuste linear múltiplo com 3 ou mais variáveis preditoras\n\n|   Embora o *JSPlotly* tenha sido concebido para a produção de gráficos e mapas interativos com uso da biblioteca *Plotly.js* sobre os ombros da linguagem *JavaScript*, essa extende as possibilidades de aplicação além das representações gráficas. Um exemplo disso permeia o código que segue, para um *ajuste multilinear* para uma situação com 4 variáveis preditoras.\n\n\n[![](Eq/multilin4Var.png)](Eq/jsp_multilin4Var.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Experimente variar o número de preditores (xi). Para isso:\n  a. Sem quiser reduzir, basta retirar o(s) vetor(res) desejados, e corrigir seu quantitativo na linha: \"const X = x1.map((_, i)\";\n  b. Se quiser aumentar, acrescente um novo vetor na linha correspondente, e atualize o quantitativo no mapeamento de \"const X = x1.map((_, i)\".\n```\n\n\n\n## Metodologia de Superfície de Resposta  (MSR)\n\n|   Uma variação de ajuste multilinear envolve a *metodologia de superfície de resposta*, comumente linear (plano) ou quadrática (curvilinear), aplicada em modelagem e otimização de processos experimentais com múltiplas variáveis independentes. Seu objetivo é ajustar uma equação matemática que represente a relação entre os fatores experimentais e a variável resposta, permitindo prever comportamentos e identificar condições ótimas. \n\n|   Para experimentos com dois fatores, utiliza-se comumente um modelo quadrático de segunda ordem, o qual permite representar superfícies com curvatura. A ideia central do experimento é selecionar valores e seus códigos (-1,0,1), representando, respectivamente, uma quantidade abaixo, uma quantidade média, e uma acima, para determinada variável preditora.\n\n### Equação: {.unnumbered}\n\n|   O modelo geral quadrático para 2 fatores é representado por:\n\n\n$$\ny = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\beta_{11} x_1^2 + \\beta_{22} x_2^2 + \\beta_{12} x_1 x_2 + \\varepsilon\n$$\n\n|   Com a forma matricial do modelo representada por:\n\n$$\n\\mathbf{y} = \\mathbf{X} \\boldsymbol{\\beta} + \\boldsymbol{\\varepsilon}\n$$\n\n|   E a estimativa dos coeficientes $\\beta$ por mínimos quadrados, de modo similar ao ajuste multilinear, por:\n\n\n$$\n\\hat{\\boldsymbol{\\beta}} = (\\mathbf{X}^\\top \\mathbf{X})^{-1} \\mathbf{X}^\\top \\mathbf{y}\n$$\n\\\n\n\n\n\n[![](Eq/msr.png)](Eq/jsp_msr.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Como sugerido anteriormente, experimente utilizar dados da literatura ou de outra fonte cujas respostas já são conhecidas, substituindo os respectivos vetores ao início do código. Isso permite comparar a eficácia de uso da ferramenta apresentada.\n```\n\n\n\n## Suavização de dados - Spline e filtro de Savitzky-Golay \n\n|       Em pesquisa experimental a detecção de sinais ocasionalmente ocorre na presença de níveis significativos de ruído, tal como ocorre em varredura contínua espectral sob variação de comprimento de onda, ou na detecção de sinais elétricos no tempo. Nesse caso, não há uma equação analítica que descreva o comportamento do sinal, embora algumas ferramentas de processamento digital possam confiar uma curva de tendência no tratamento de dados, reduzindo significativamente o nível de ruído, tais como por *curva de spline* e *filtro de Savitzky-Golay*.    \n\n\n### Contexto - Spline cúbica {.unnumbered}\n\n|       Uma técnica de interpolação bastante comum refere-se ao uso de spline cúbica por polinômios de grau 3 interconectando janelas de dados. O tratamento consiste em aplicar as funções polinomiais em subintervalos dos pontos, promovendo uma suavização entre as janelas de dados.  Matematicamente, a spline é aplicada de tal forma que:\n\n$$\nS_i(x) = a_i + b_i(x - x_i) + c_i(x - x_i)^2 + d_i(x - x_i)^3\n$$\n\n\n*Onde:*\n\n- S$_{i}$(x) = função spline cúbica no intervalo *[xi,xi+1]*;\n- a$_{i, b$_{i}$, c$_{i}$, d$_{i}$ = coeficientes específicos para o segmento *i*;\n- x$_{i}$ = ponto inicial do intervalo;\n- *x* = variável independente.\n\n\n### Contexto - filtro de Savitzky-Golay\n\n|        Já a técnica de suavização por filtro de Savitzky-Golay aplica uma regressão polinomial local a uma janela móvel, por mínimos quadrados e grau pré-determinado, preservando sinais de picos, vales e bandas. Distinto da spline cúbica, o filtro produz uma curva contínua global, e não um conjunto de curvas interconectadas. Matematicamente:\n\n\n$$\n\\tilde{y}_i = \\sum_{j=-m}^{m} c_j \\cdot y_{i+j}\n$$\n\n*Onde:*\n\n- y$_{i}$ =  valor suavizado na posição *i*;\n- y$_{i+j}$ = valores reais da série dentro da janela;\n- c$_{i}$ = coeficientes do filtro derivados de uma regressão polinomial;\n- *m* = número de pontos de cada lado da janela central.\n\n|   Segue um exemplo de código para o *JSplotly* e que ilustra o uso dos dois métodos de interpolação.\n\n[![](Eq/splineGolay.png)](Eq/jsp_splineGolay.html){target=\"_blank\"}\n\\\n\n**Instruções:**\n\n- 1. O código possui dois *flags true/false*, um para \"usarGolay\" e outro para \"usarSpline\";\n- 2. Visualize os dados brutos adotando *false* para ambos os flags;\n- 3. Para sobrepor uma spline cúbica mude sua constante para *true*;\n- 4. Para sobrepor o filtro de Savitzky-Golay, mude sua constante para *true*;\n- 5. Para ajustar o filtro, modifique seus parâmetros nas constantes *janela* (janela móvel) e/ou *grau* (grau do polinômio).\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Compare os efeitos de suavização pelos dois tratamentos de interpolação polinomial;\n2. Aplique apenas o filtro, ajustando parâmetros de janela móvel e grau polinomial;\n3.  Experimente a interpolação com outros dados brutos no código, substituindo as constantes \"x_values\" e \"y_raw\" por vetores numéricos;\n```\n\n\n## ANAVA e teste de Tukey-HSD\n\n### Contexto: {.unnumbered}\n\n|   Em pesquisa é comum proceder a análise de um conjunto de dados comparando-se a variância entre grupos com a obtida dentro de cada grupo, ou *Análise de Variância (ANAVA)*.  Uma vez obtida a informação estatística de que há diferença entre os grupos superior à interna, procede-se um teste *pos-hoc* para comparação de médias, como o *teste de Tukey-HSD* (*Honest Significant Difference*). \n\n### Equação: {.unnumbered}\n\n|   A equação que caracteriza um teste de Tukeu-HSD é fornecida abaixo (correção para grupos desbalanceados):\n\n\n$$\n\\text{HSD}_{ij} = q_{\\alpha} \\cdot \\sqrt{\\frac{\\text{MS}_{\\text{within}}}{2} \\left( \\frac{1}{n_i} + \\frac{1}{n_j} \\right)}\n$$\n\n*Onde:*\n\n- HSD = valor mínimo da diferença entre duas médias para que ela seja considerada significativa;\n- q$_{\\alpha}$ =  valor crítico da distribuição studentizada *q* (distribuição de Tukey), dependendo do número de grupos e do nível de significância $\\alpha$;\n- MS$_{within}$ = quadrado médio dentro dos grupos (erro) obtido da ANAVA;\n- n: número de observações por grupo (*i* e *j* se houver grupos de tamanhos diferentes). \n\\\n\n\n[![](Eq/tukey.png)](Eq/jsp_tukey.html){target=\"_blank\"}\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Você pode clicar e arrastar os marcadores de mínima diferença (a,b,etc) acima do gráfico, para melhor ajuste visual, bem como a tabela de ANAVA e o resultado do teste estatístico;\n2. Altere os valores dos vetores, refaça a análise e o gráfico simultâneos, e perceba a diferença nos valores obtidos. Observe que, como informado na borda inferior, é necessário atualizar a página do site para anular dados anteriores retidos em memória cache;\n3. Insira outros dados nos vetores respectivos, seus ou de outra fonte;\n4. Insira novos vetores de dados, ou delete algum, para um cálculo e gráfico personalizado.\n\n```\n\n\n\n## Ajuste não linear de dados\n\n|   Modelagem é uma área de emprego comum nas ciências naturais, quando se deseja previsão ou correlação matemática de dados experimentais. Modelos podem constituir-se lineares ou não. Quando não lineares, podem ser aplicados de forma empírica para os dados (ex: funções quadráticas, logarítmicas, exponenciais ou de potência), ou a partir de uma função matemática explanatória do modelo. \n\n|   Nesse caso são empregadas técnicas para ajuste não linear dos dados ao modelo, como *Simplex*,  *Gauss*, *Newton-Raphson*, *Levenberg-Marquadt*, ou *mínimos quadrados* por exemplo. Seja qual for o método, o ajuste não linear difere-se do linear em pressupostos e tratamento dos dados (veja uma rápida explicação [aqui](https://bioquanti.netlify.app/pt/nivel/superior/r/enzimas#ajuste-n%C3%A3o-linear). \n\n### Contexto: Interação ligante-proteína (algoritmo de *grid search*) {.unnumbered}\n\n\n|   O exemplo a seguir ilustra a aplicação de um ajuste não linear de dados de interação molecular por modelo de Langmuir, e tratamento por *minimização do erro quadrático por varredura manual*. Nesse tratamento, calcula-se a *soma dos erros quadráticos (RMSE)* para combinações de *a* e *b*, selecionando-se o par com menor erro calculado. Nesse caso, por simplificação, apesar do *JSPlotly* trabalhar com bibliotecas mais específicas, a regressão não linear dá-se por mínimos quadrados, mas realizada por *grid search*, e não por métodos iterativos clássicos. Assim, um conjunto de valores é testado para o par (a, b) em uma malha definida previamente (tabela de combinações), permitindo a identificação dos parâmetros que melhor descrevem os dados experimentais segundo o critério de erro mínimo.\n\\\n\n### Equação: {.unnumbered}\n\n|   A equação de Langmuir é representada abaixo:\n\n$$\nY = \\frac{aX}{K_d + X}\n$$\n*Onde:*\n\n- Y = fração de sítios ocupados;\n- X = concentração do ligante livre;\n- *a* = valor de saturação (sítios de mesma afinidade completamente ocupados);\n- *Kd* = constante de equilíbrio de dissociação do complexo.\n\n\n\n|   Nesse caso, a função de mínimos quadrados não linear fica:\n\n$$\nSSR(a, K_d) = \\sum_{i=1}^n \\left( y_i - \\frac{a x_i}{K_d + x_i} \\right)^2\n$$\n\n\n*Onde:*\n\n*SSR* = soma dos quadrados dos resíduos (inversamente propocional à qualidade do ajuste)\n\\\n\n\n[![](Eq/ajNonLin.png)](Eq/jsp_ajNonLin.html){target=\"_blank\"}\n\n\n### Sugestão: {.unnumbered}\n\n```{r, eval=FALSE}\n1. Como no exemplo anterior, apresente alternativamente os pontos e a curva de ajuste pela operação \"booleana\" (\"mostrarPontos = true/false\"; \"mostrarCurva = true/false\");\n2. Altere os dados e realize novo ajuste, para obtenção de outros parâmetros da equação (Kd, SSR, R², R² ajustado). Obs: R² adj corresponde ao valor de R² corrigido para o número de parâmetros do modelo (no caso, \"2\"), incidindo diretamente nos \"graus de liberdade\" para o ajuste.\n```\n\\\n\n                               \n### Contexto - Inibição competitiva em cinética enzimática (algoritmo de Gauss-Newton) {.unnumbered}   \n\n\n|   O método de *Gauss-Newton* ajusta iterativamente modelos não lineares a conjuntos de dados experimentais. Ele é especialmente eficiente quando o modelo é *quase linear* em relação aos parâmetros e os resíduos são moderadamente pequenos. O objetivo é encontrar os parâmetros $\\theta$ que minimizam a soma dos quadrados dos resíduos entre os dados observados *yi* e os valores preditos pelo modelo f(xi,$\\theta$. Diferente do método de Newton-Raphson completo, o Gauss-Newton evita o cálculo explícito da Hessiana, utilizando uma aproximação baseada na Jacobiana dos resíduos.\n\n\n## Equação: {.unnumbered}\n\n|   Essa aproximação resulta em um sistema linear que pode ser resolvido a cada iteração para atualizar os parâmetros do modelo. A fórmula central do método consiste na multiplicação da Jacobiana transposta *JT* pela própria Jacobiana *J*, formando uma matriz simétrica que aproxima a Hessiana. O vetor de resíduos *r* é então usado para determinar a direção de atualização $\\Delta\\theta$, com a seguinte equação:\n\n$$\n\\theta_{k+1} = \\theta_k + \\left(J^T J\\right)^{-1} J^T \\cdot r\n$$\n\n|   Para ilustrar o potencial do aplicativo em ajuste não linear iterativo, segue um exemplo para cinética enzimática utilizando-se um *modelo de inibição competitiva*. \n\n|   O código permite ajustar as *sementes*, *tolerância*, e número de *iterações*, e oferece o gráfico (pontos/linha ajustada, manualmente), e parâmetros estatísticos da regressão.\n\\\n\n**Instruções**\n\n- 1. Perceba que o código possui um flag para *true/false* na constante *ajuste*. Deixe-o em *false* para a representação dos dados, somente (vetores *x* e *y*, ou *S* e *v*);\n- 2. Na área da *Plot* do código, acerte a constante *trace* para que fique com os vetores de dados, também;\n- 3. Clique em *add plot* para visualizar os pontos experimentais;\n- 4. Para superimpor a curva ajustada, atualize as constantes *ajuste* e *trace* (vetores *S_fit* e *v_fit*), e escolha *lines* em *mode*.\n\n[![](Eq/ajNonLinGauss2.png)](Eq/jsp_ajNonLinGauss2.html){target=\"_blank\"}\n\n\n\n                                                                                                     "},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":2,"number-sections":true,"output-file":"jsplt_bioq.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Ligações de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno do Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Descarregar código fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de Palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.7.22","theme":{"light":"flatly"},"title":"Simulações Interativas Para Biofísico-química com JSPlotly & GSPlotly"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}