{"title":"Comandos","markdown":{"yaml":{"title":"Comandos","toc":true,"lang":"pt"},"headingText":"Mudando a linguagem da interface & diretório de arquivos","containsRefs":false,"markdown":"\n\n<!-- Google tag (gtag.js)-->\n\n```{=html}\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-S1L73VGCG5\"></script>\n```\n```{=html}\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-S1L73VGCG5');\n</script>\n```\n\n\n|       O *Jmol* possui uma infinidade de comandos para visualização e estudo de modelos moleculares. Grande parte desses comandos é acessada pelo *Menu* principal do *Jmol*, ou por clique do botão direito do mouse no ecrã principal do programa ou do *applet JSmol* na internete.\n|       Entretanto, a *scriptagem* permite pelo *Console*, tanto do programa instalado como do *applet* a execução de um conjunto bem maior de ações, além de permitir elencar ações consecutivas gerando visualizações específicas, cálculos e animações, e mesmo *programação.* Nesse último caso, pela linguagem *Jmol scripting*. Esses comandos e a linguagem programação estão explicitados no site de seus desenvolvedores, [Jmol - Documentação & scriptagem](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#plot){target=\"_blank\"}, com substanciais exemplos e *links* ilustrativos e interativos. O conteúdo deste capítulo visa sumarizar os principais comandos para a visualização, estudo, importação e exportação, cálculos e animações dos modelos pelo *Console* ou por *script*.\n|       Como uma sequência de comandos visando uma observação mais complexa ou animação, **pode-se elaborar o script** em qualquer editor de texto simples, **salvando-o com atributo \".spt\"**. O *script* pode ser carregado como um arquivo ou colado no campo do *Console*.\n|       Os comandosdo *Jmol* não fazem distinção entre singular o plural, ou entre maiúscula ou minúscula, podendo-se empregar ambos as formas, como *show group* ou *Show groups*.\n|       Uma observação adicional: na construção de um *script*, é recomendável que se forneça explicações em linhas de comando; para tanto, basta utilizar o sinal de hashtag (*\\#*) após os comandos.\n\n\n### Linguagem\n\n|       A linguagem do *Menu* e a saída dos comandos (resultados) podem ser alteradas como abaixo. Lembrando-se, contudo, que os comandos propriamente ditos reportam-se a algoritmos computacionais; dessa forma, não é possível alterar a linguagem dos comandos\n\n```{r, eval=FALSE}         \nset language = código # pt (português), es (espanhol), en (inglês), fr (francês), de (alemão), etc...\n```\n\n|       Obs: caso não consiga, inicialize o *Jmol* abrindo um CMD (*Windows*) ou Teminal (*Linux*) na pasta do diretório do programa, e digite, para *português*:\n\n```{r, eval=FALSE}         \njava -Duser.language=pt -jar Jmol.jar\n```\n\n### Diretório\n\n```{r, eval=FALSE}         \ncd # apresenta diretório atual\ncd ? # abre janela para diretório padrão\ncd path # altera o diretório padrão (ex: ../temp)\nset defaultDirectory \"/home/\" # diretório padrão (para applet)\n```\n\n## Comandos gerais\n\n```{r, eval=FALSE}         \nAjuda: help # help zoom\nSair: quit\nDesfazer: undo\nRefazer: redo\nRetorno ao modelo original (posição, tamanho, centralização e orientação): reset\nInicialização do programa: initialize\nHistórico de comandos: history on ou history off\nMinimização por campos de força do modelo: minimize\n```\n\n|       Experimente alguns dos comandos acima com o *applet* para *JSmol* que segue:\n\n[![](jsmol.png){width=\"20%\"}](https://chemapps.stolaf.edu/jmol/jsmol/simple.htm)\n\n## Obtendo modelos moleculares\n\n### Um modelo\n\n```{r, eval=FALSE}         \nDa internet:\n  moléculas em geral: load $cholesterol\n  moléculas do PDB (Protein Data Bank): load=9pap\n  ligantes do site RCSB : load =ligand/hem\n  compostos do site PubChem:  load \":nafamostat\"\n\n\nDo computador (necessário que os arquivos estejam no diretório raiz ou pré-selecionado por \"cd\"-vide acima):\n  load \"1aay.pdb\"\n```\n\n### Mais de um modelo\n\n```{r, eval=FALSE}         \nSeparados: load files \"1a2t.pdb\" \"1aay.pdb\"\n  apresentar o 1o. modelo: model 1 ou model 1.1\n  apresentar o 2o. modelo: model 2 ou model 2.1\n  apresentar todos os modelos: model* ou frame*\nJuntos: load append \"1a2t.pdb\" \"1aay.pdb\"\n```\n\n\n## Construindo moléculas simples por SMILES\n\n|   *SMILES*, uma abreviação para *\"Simplified molecular-input line-entry system\"*, permite representar a estrutura de modelos atômicos utilizando-se símbolos e texto (caracteres ASCII).\n\n\n|   Experimente essa formatação no endereço abaixo. \n\n```{r, eval=FALSE}\nhttps://chemapps.stolaf.edu/jmol/jmol.php?model=C\n```\n\n\n|   Em seguida, substitua o *modelo* do *link*,  *\"model=\"* pelos códigos *SMILES* que seguem, alternativamente:\n```{r, eval=FALSE}\n\n1. Ligação simples: CC, CN, CO\n2. Ligação dupla: C=C, C=N, C=O\n3. Ligação tripla: N%23N, CC%23C\n\nObs: o código para a ligação tripla visa contornar o comando do *SMILES*, *\"#\"*, e que é interpretado de modo diferente em endereço de internet.\n```\n\n\n## Visualizando os modelos:\n\n``` {r, eval=FALSE}        \nVisualizar: display 2.1\nEsconder: hide 1.1\nRemover os modelos: zap\nSombreamento: set ambient 45 (0-sombra; 100-sem sombra)\n```\n\n## Apresentando informações dos modelos (comando *show*)\n\n``` {r, eval=FALSE}        \nNão apresentar nada: show none\nModelo: show model\nÁtomos: show atom\nCadeias (proteína ou ác. nucleico): show chain\nInformações de minimização estrutural: show DSSP\nSuperfícies (molecular, eletrostática): show isosurface\nGrupos: show group\nInformações do modelo: show info\nSequência primária de proteína: show sequence\nHistórico de comandos: show history\nResíduos (proteína): show residues\nOrbital molecular: show mo\nCaminho de internete: show url\nInformação completa do arquivo PDB: show file\n```\n\n### Bancos de dados moleculares\n\n|       Existem diversos bancos de dados para renderização de modelos moleculares, e com possibilidade de salvamento de arquivo para uso com o *Jmol*. Dentre esses destacam-se o [PubChem](https://pubchem.ncbi.nlm.nih.gov/){target=\"_blank\"} ou o [DrugBank](https://go.drugbank.com/){target=\"_blank\"} para *moléculas pequenas*, e o [RCSB - Protein DataBank (Research Collaboratory for Structural Bioinformatics)](https://www.rcsb.org/){target=\"_blank\"} para macromoléculas. Também há o [IUPHAR/BPS Guide to PHARMACOLOGY](https://www.guidetopharmacology.org/), que permite acesso indireto tanto para micro como para macromoléculas.\n|       Em qualquer desses, basta procurar um campo para *download* de modelos moleculares *3D*. O *Jmol* aceita em torno de **47 tipos distintos de arquivos** para renderização estrutural, dos quais elencam-se *PDB, MOL, CIF, SDF, XYZ, SMILES, e AMBER*.\n\n## Operações gerais\n\n```{r, eval=FALSE}         \nReinicialização de coordenada do modelo: reset (tamanho e centralização): Shift+ duplo clique (ou *reset* no *Console*)\n\nEliminar a *logo* do Jmol nas imagens: set frank off\n\nPlano de fundo: background white\n\nResolução do modelo: set ambient 10\n```\n\n## Comandos de mouse\n\n|       Para abrir o *Menu* de opções para visualização, cálculos e superfícies: clique direito\n\n### Movimentos do modelo\n\n```{r, eval=FALSE}         \nRotação simples: clique arraste em qualquer direção\n\nRotação sobre o mesmo eixo até 360$^{o}$: Shift+clique direito\n\nTranslação da estrutura: Ctrl+clique dir\n\nAmpliação geral (zoom):  Shift+clique esquerda e arraste - ampliação/redução - (ou mouse, botão do meio).\n```\n\n## Comandos de movimento\n\n```{r, eval=FALSE}         \n  spin 10 # rotacional, com velocidade de 10 graus por quadro\n  spin z -15 # (eixo z)\n  rotate 20 # 20 graus\n  rotate x 90 # eixo x\n  translate 50 # valor representa o percentual da janela (100 - fora; 0 - centro)\n```\n\n## Salvando e exportando modelos (*write*)\n\n```{r, eval=FALSE}         \n # (salva como imagem)\nImagem do modelo: \n  padrão (png): write nome-do-modelo\n  com específicações: write PNGJ 2000 2000 \"big.png\"\n  outros (jpg, pdf): write nome.jpg\n  todos os modelos: write frames* \"all.jpg\"\nCoordenadas do modelo\n  write nome.mol # ou outro atributo (ex: pdb)\nEstado do modelo (alterações após carregamento): write molecula.spt # de \"script\"\n```\n\n### Copiando para o clipboard\n\n|       A imagem do modelo pode ser copiada pelo *Menu* principal do programa.\n\n### Reproduzindo um modelo da internet que não permite salvamento\n\n|       Por vezes alguns *sites* disponibilizam moléculas em atributo \\*mol ou \\*pdb para visualização e estudo, mas sem a possibilidade de baixar o arquivo. Nesses casos é possível obter as coordenadas do modelo, copiá-las em um bloco de notas, e salvar o arquivo para leitura pelo *Jmol*, como \\*\\mol, por exemplo.\n\n```{r, eval=FALSE}         \n1. Visualize o modelo desejado no site;\n2. Clique com o botão direito do mouse e selecione Console.\n3. Clique novamente, selecione Show e:\n   Extract mol data....ou\n   File contents\n```\n\n|       Como resultado o *Console* exibirá os dados para cópia a arquivo de texto. Basta salvá-lo como \\*.mol para visualização futura no Jmol.\n\n## Quantidades\n\n### Calculando distâncias e ângulos (*measure*)\n\n|   Além do uso simples e interativo do mouse para cálculo de distâncias (duplo clique com o botão direito do mouse no 1o. átomo e arraste ao 2o. átomo) ou de ângulos (3 cliques do mouse), é possível obter as mesmas informações pelo *Console*.\n\n```{r, eval=FALSE}         \nDistância: measure no. átomo1 no. átomo2\nÂngulo: measure no. átomo1 no. átomo2 no. átomo 3\n  Obs: para se obter o no. do átomo basta clicar no ponto desejado do modelo\nÂngulo de torção: measure átomo1 átomo2 átomo3 átomo4\n\nMedidas: measure on..ou off...ou delete\nEscolha da unidade de medida: set measure nm # ou pm, angstrons, au (unidade atômica de Bohr)\n```\n\n### Obtendo & visualizando quantidades\n\n```{r, eval=FALSE}         \nLigações de hidrogênio: calculate hbonds (ou...hbonds calculate)\nCargas formais (efetivas): calculate formalcharge # para etiquetar: label %C\nCargas parciais: calculate partialcharge # para etiquetar: label %P\nEstruturas 2as numa proteína: calculate structure # algoritmo DSSP - Define Secondary Structure; obs: a representação desaparece, e é necessário digitar novamente o comando para seu retorno\nTodas as ligações do modelo e com respectivas distâncias: measure allconnected (*)(*)\n```\n\n## Alterando as representações\n\n|       Há diversas formas de renderização de estruturas no *Jmol*. Os comandos abaixo resumem essa capacidade:\n\n```{r, eval=FALSE}         \nwireframe, backbone, trace, strands, cartoon, ribbons, meshriboon, rockets, cpk (ou spacefill), ball&stick (somente pelo Menu, ou pela combinação abaixo no Console)\n\nPara visualizar uma única forma: wireframe only\nPara esconder uma forma: backbone off\nPara renderizar como \"ball&stick\":  wireframe only;wireframe reset;spacefill reset \n```\n\n|       As representações renderizam a estrutura pelo tamanho de seus átomos. A renderização por *spacefill*, por exemplo, expressa-se como uma função do *raio de van der Waals* do átomo. Exemplificando:\n\n``` {r, eval=FALSE}        \nspacefill on / off\nwireframe 0.5 # 0,5 Angstrom (o \".\" refere-se a valor absoluto)\nbackbone 50 # 50/250 Angstrom, ou 0,2 Angstrom (ausência de ponto refere-se a valor relativo)\ncartoon 50% # 50% a mais que o padrão\nspacefill 2 # 2/250 Angstrom = 0,008 Angstrom (observe a ausência de ponto)\nspacefill 2.0 # 2 Angstrom (observe o ponto)\n```\n\n### Cortes & sombreamento\n\n```     {r, eval=FALSE}    \nCorte na visualização: slab on; slab 30\nVisão de profundidade: depth 30\n```\n\n### Visualizando ou não o hidrogênio\n\n```{r, eval=FALSE}         \nInserir no modelo: set pdbAddHydrogens\nRetirar do modelo: set pdbAddHydrogens false\n```\n\n### Visualizando ligações dissulfeto (proteínas)\n\n```{r, eval=FALSE}         \nssbonds on ou ssbonds off\nssbonds 40 # renderiza como varetas,e diâmetro de 40/250 Angstron\nssbonds 0.5 # renderiza com 0,2 Angstrom de diâmetro\n```\n\n|       Só para exercitar-se, experimente alguns dos comandos acima com o *applet* para *JSmol*, tal como segue segue:\n\n[![](jsmol.png){width=\"20%\"}](https://chemapps.stolaf.edu/jmol/jsmol/simple.htm)\n\n## Selecionando cores\n\n|       A opção padrão para cores dos modelos é a *CPK (Corey, Pauling, Koltun)*, para carbono (cinza), nitrogênio (azul), fósforo ou enxofre (amarelo), hidrogênio (branco), iodo (violeta), etc. Contudo é possível alterar cores globalmente no modelo, ou especificamente sobre grupos selecionados de átomo. O programa aceita o comando *color* ou *colour*.\n\n```{r, eval=FALSE}         \ncolor [255,125,350] # cor específica\ncolor bonds # aplica a cor sem necessidade de especificar a representação\ncolor [xFF00FF] # cor específica\ncolor cpk # padrão do programa\ncolor molecule # todos os átomos conectador por uma ligação\ncolor formalcharge\ncolor partialcharge\ncolor amino # para aminoácidos\ncolor structure # para estrutura secundária\n  Proteínas: vermelho (alfa-hélice), amarelo (folhas-beta), azul (voltas), branco (restante)\n  Ácido nucleico: violeta (DNA), avermelhado (RNA)\ncolor chain: cadeias\ncolor inherit: os objetos herdam a cor de seus átomos associados\ncolor shapely: esquema de cor que inclui nucleotídios\ncolor group: gradiente de arco-íris (azul; N- ou 5'-terminal; vermelho; C- ou 3'-terminal)\n```\n\n### Cores específicas\n\n|       Pode-se também atribuir a um átomo ou conjunto desses uma coloração específica, como segue:\n\n```{r, eval=FALSE}         \nAliceBlue,AntiqueWhite,Aqua,Aquamarine,Azure,Beige,Bisque,Black,\nBlanchedAlmond,Blue,BlueViolet,Brown,BurlyWood,CadetBlue,Chartreuse,\nChocolate,Coral,CornflowerBlue,Cornsilk,Crimson,Cyan,DarkBlue,DarkCyan,\nDarkGoldenRod,DarkGray,DarkGrey,DarkGreen,DarkKhaki,DarkMagenta,\nDarkOliveGreen,Darkorange,DarkOrchid,DarkRed,DarkSalmon,DarkSeaGreen,\nDarkSlateBlue,DarkSlateGray,DarkSlateGrey,DarkTurquoise,DarkViolet,\nDeepPink,DeepSkyBlue,DimGray,DimGrey,DodgerBlue,FireBrick,FloralWhite,\nForestGreen,Fuchsia,Gainsboro,GhostWhite,Gold,GoldenRod,Gray,Grey,Green,\nGreenYellow,HoneyDew,HotPink,IndianRed,Indigo,Ivory,Khaki,Lavender,\nLavenderBlush,LawnGreen,LemonChiffon,LightBlue,LightCoral,LightCyan,\nLightGoldenRodYellow,LightGray,LightGrey,LightGreen,LightPink,LightSalmon,\nLightSeaGreen,LightSkyBlue,LightSlateGray,LightSlateGrey,LightSteelBlue,\nLightYellow,Lime,LimeGreen,Linen,Magenta,Maroon,MediumAquaMarine,MediumBlue,\nMediumOrchid,MediumPurple,MediumSeaGreen,MediumSlateBlue,MediumSpringGreen,\nMediumTurquoise,MediumVioletRed,MidnightBlue,MintCream,MistyRose,Moccasin,\nNavajoWhite,Navy,OldLace,Olive,OliveDrab,Orange,OrangeRed,Orchid,PaleGoldenRod,PaleGreen,PaleTurquoise,PaleVioletRed,PapayaWhip,PeachPuff,Peru,Pink,Plum,\nPowderBlue,Purple,Red,RosyBrown,RoyalBlue,SaddleBrown,Salmon,SandyBrown,\nSeaGreen,SeaShell,Sienna,Silver,SkyBlue,SlateBlue,SlateGray,SlateGrey,Snow,\nSpringGreen,SteelBlue,Tan,Teal,Thistle,Tomato,Turquoise,Violet,Wheat,White,\nWhiteSmoke,Yellow,YellowGreen.\n```\n\n## Etiquetando o modelo (*label*)\n\n```{r, eval=FALSE}         \nEtiqueta ligado/desligado: label on...ou label off\nCadeia: label %c\nCarga formal: label %C\nCarga parcial: label %P\nResíduo de aminoácido em proteína: %n\nNo. do resíduo: %r\nÁtomo: %a\nNo. identificador do átomo: %i\nSímbolo do elemento: %e\nCadeia: %c\n```\n\n|       Para visualização de um conjunto específico de átomos, como resíduos de uma proteína, pode-se utilizar:\n\n```{r, eval=FALSE}         \nselect (Ser195,His57,Asp102) and *.ca; label \"\\%n \\%R\";color label orange ;set labelfront\n```\n\n|       Algumas operações específicas permitem também a etiquetagem.\n\n```{r, eval=FALSE}         \nlabel binding site # etiqueta com a expressão \nlabel binding | site # etiqueta com a expressão, separada por linhas (\"|\" é o comando \"pipe\")\n```\n\n|       O *Jmol* permite também etiquetar determinado átomo, resíduo, sítio de interação ou reação, ou algum grupo para melhor identificação e exploração do modelo. Para isto pode-se selecionar a estrutura por *select*, seguido da etiqueta proposta. Exemplificando:\n\n```{r, eval=FALSE}         \nselect pro31 # seleção do resíduo de Prolina na posição 31 da sequência proteica\nlabel Prolina-31\nset echo top left; echo \"Modelo 1\" # inserção de texto no ecrã\nselect all; label on # nomeia todos os átomos com símbolo e número atômico\n```\n\n## Selecionando partes do modelo\n\n|       Para selecionar-se um grupo geral de átomos, basta combinar pelo mouse *Shift+clique esq+drag* para o grupo selecionado (é necessário clicar no ícone que o representa no menu antes). Para uma seleção mais específica, pode-se utilizar algumas das *expressões de átomos* específicas ou pré-definidas, como abaixo:\n\n```{r, eval=FALSE}         \nNatureza da molécula:\n  all, none, protein, nucleic, dna, rna, carbohydrate, hetero, ligand, solvent, water ou hoh, ions, hem, amino\n\nElemento químico\n  Por nome: oxygen, nitrogen, carbon\n  Por símbolo: _N, _C, _Fe\n  Por no. atômico: elemNo=7, ou atomNo=5\n  Por no. de identificação do átomo na sequência (serial): atomNo<50\n\nParte da molécula:\n  backbone, sidechain, :b (pra cadeia), spine\n  \nTipo de resíduo\n  abreviação de 3 letras de aminoácidos, acidic, basic, polar, neutral, charged, purine, pyrimidine, large, small, buried, surface, cyclic, hydrophilic, hydrophobic, aromatic, cystine, aliphatic, spine, base\n  \nEstrutura 2a. em proteínas\n  helix, sheet, turn\n```\n\n|       Os comandos gerais para emprego das expressões acima ou de combinações dessas são, basicamente:\n\n```{r, eval=FALSE}         \nselect, restrict, hide, display, delete\n```\n\n|       Cada expressão deve ser alocada entre parênteses. Pode-se também aplicar *operações booleanas* (*or, and, but not*, ou *=, \\<, \\>, \\<=, \\>=, !=*).\n\n|       O comando *restrict* tem natureza irreversível, enquanto o comando *hide* apresenta-se reversível na renderização. seguido pela expressão desejada. Alguns exemplos:\n\n|       Seguem alguns exemplos:\n\n``` {r, eval=FALSE}        \nComando restrict\n  restrict helix # permanece somente as hélices da estrutura secundária\n  restrict ligand # somente o ligante\n  restrict not ligand # somente a proteína sem grupos prostéticos\n  restrict 42-60 # permanece apenas a sequência de resíduos indicada\n  restrict f6p # permanece apenas o grupo identificado (um ligante, no caso)\n  restrict not(:a, :b) # permanecem cadeias que não a \"a\" e a \"b\"\n  \nComando select\n  select Tyr\n  select polar\n  select all # seleciona todos os átomos\n  select none # não seleciona nenhum átomo\n  select bmp,amp # seleciona dois ligantes\n  select (bmp, amp) and oxygen\n  select hem and :b # seleciona grupo heme da cadeia \"b\"\n  select hem and not iron :b # seleciona o grupo heme da cadeia \"b\", omitindo o Fe\n  select */2 # todos os átomos do modelo 2\n  select connected(oxygen) # todos os átomos ligados a um oxigênio\n  select ser70 :A .ca # carbono alfa de serina no. 70 da cadeia A\n  select hetero and not solvent # heteroátomos exceto a água\n  select remove group hetero and not water # somente a água\n  select hetero and not ligand # heteroátomos exceto ligante\n  select buried only # somente resíduos do cerne proteico\n  select helix or backbone # seleciona hélices ou esqueleto proteico\n  select not helix # seleciona as demais estruturas 2as. de proteína (turn, sheet)\n  select 62 and(sidechain or alpha) # cadeia lateral ou carbono alfa do resíduo 62\n  select ser70.ca # carbonos alfa de serina no. 70\n  select ser70 :a.ca # carbons alfa de serina no. 70 da cadeia \"a\"\n  select (lys,arg) # somente os resíduos Lys e Arg\n  select (lys,arg) and :b # resíduos Lys e Arg da cadeia \"b\"\n  select 19-32 :y # sequência de resíduos da cadeia \"y\"\n  select asp47 # resíduo Asp na posição 47\n  select  [asp]47 :y # resíduo asp47 da cadeia \"y\"\n  select (10 or 25) and backbone\n  select resNo>14 and resNo<25 and *.CA # carbonos alfa de resíduos 14 a 25\n  select hoh.o/2 # oxigênio de moléculas de água no modelo 2 \n  select (14,16,18,20) # os resíduos numerados\n  select backbone and *:b # a espinha da cadeia \"b\"\n  select backbone and not *:b # a espinha de todas as cadeias, exceto a \"b\"\n  select not hidden...select displayed # tudo que não estiver escondido\n  select not selected # tudo que não fora selecionado previamente\n  select carbon and not selected # átomos de carbono não selecionados previamente\n\nComando delete\n  delete(calcium,nadph)\n```\n\n### Seleções especiais\n\n#### Comando *within*\n\n|       Este comando permite uma seleção recursiva, ou seja, uma seleção dentro de uma seleção.\n\n```{r, eval=FALSE}         \nselect within (5, (bca,amp)) # seleciona dois ligantes que se avizinhem a 5 Angstrons de distância do grupo de átomos selecionado\nselect within(3.0, _Fe) # todos os átomos próximos de 3 Angstrons do átomo de ferro\n```\n\n#### Comando *define*\n\n|       Permite definir um grupo de átomos para renderização ou observação específica. Após a definição basta utilizar *select* ou outro comando para alteração do modelo.\n\n```{r, eval=FALSE}         \n  define teste (arg10) # seleciona somente Arg10\n  define teste (arg10 or asn46) # seleciona os dois resíduos\n  define teste (ser195 or asp102 or his57)\n  define Sitio within(3.0, _Cu) # 3 Angstrons de distância de átomo de cobre\n  define PontoX within(5.0,arg31) # 5 Angstrons de distância de Arg31\n  define vizinhos selected # previamente selecionado\n```\n\n#### Comandos *selected*, *hidden*, *displayed*\n\n|       Permitem direcionar uma ação ao grupo de átomos já selecionado, escondido ou apresentado, respectivamente.\n\n## Ampliação dos modelos (*zoom*)\n\n|       Há dois comandos básicos no *Jmol* para ampliação:\n\n1.  *zoom* : (expressão) tamanho\n2.  *zoomTo* : tempo (expressão) tamanho\n\n|       O segundo comando permite uma animação do modelo, motivo pelo qual será explicitado em seção homônima abaixo. Seguem alguns exemplos para o comando *zoom*.\n\n```{r, eval=FALSE}         \nAmpliação 2x: zoom in\nAmpliação em 3x: zoom \\*3 \nRedução em 2x: zoom out \nRedução em 3x: zoom /3 \nEliminar ampliação: zoom off \nRestrição a ligante e ampliação: restrict ligand; zoom 0\nzoom 100: restaura o tamanho inicial\n```\n\n## Superfícies\n\n|       O *Jmol* permite renderizar alguns tipos de superfícies em torno dos átomos do modelo. Para macromoléculas deve-se observar que a renderização levará um tempo maior.\n\n``` {r, eval=FALSE}        \n\ndots on / off \\# superfície de van der Waals dots only \\# somente a superfície de vdw presente (sem o modelo) dots vanderwaals...ou dots vdw dots ionic\n\nisosurface on/off  # superfície molecular \nisosurface solvent # excluindo o solvente\nisosurface molecular # incluindo o solvente \nisosurface molecular 5 # superíficie a um determinado raio de VDW \nisosurface sasurface # área acessível ao solvente (\"surface acessible solvent\") \nisosurface mep # \"molecular electrostatic potential\" \nisosurface map vdw # superfície de Van der Waals \nisosurface map mep # potencial eletrostático \nisosurface molecular map property PartialCharge # ou temperature, vanderwaals\n\ngeosurface on/off # superfície molecular geodésica (curva) geosurface only # exclusivamente a superfície, sem o modelo geosurface vdw \ngeosurface ionic geosurface 5 # valor em Angstrom\n\nObs: Para visualizar as superfícies incluindo o solvente, pode-se utilizar o comando \"set solvent on\" antes.\n```\n\n## Gráficos\n\n|       Alguns gráficos bi e tridimensionais podem ser gerados a partir de comandos simples do *Jmol*. Para voltar ao modelo original, forneça o comando *model 1*. Alguns exemplos:\n\n```{r, eval=FALSE}         \nplot properties resno partialcharge # resno = número do resíduo (plota após comando para calcular carga superficial - vide acima) \nplot properties phi psi resno # plot 3D com ângulos diedrais contra no. do resíduo plot rama...ou...\nplot ramachandran # gráfico de Ramachandran para estrutura 2a. em proteínas\nObs: para visualizar os ângulos phi e psi no modelo (não no plot), digite: draw rama (draw off para esconder)\n\nOutras propriedades: hydrophobicity, mass, temperature, radius, occupancy, chaino\n```\n\n## Criando e lendo scripts\n\n|       A \"scriptagem\" permite a observação e análise de uma parte específica do modelo em estudo, pela composição de trechos de código como linhas de comando. Dessa forma o *script* assemelha-se a um *algoritmo* com sucessão de comandos. Um *script* pode ser carregado pela chamada de arquivos do programa (*File, Open*), ou mesmo por arraste do arquivo à área do ecrã do programa.\n\n|       Um *script* do *Jmol* baseia-se em um dialeto de *Java Script*, e pode ser conduzido por uma sequência de comandos a cada linha de um arquivo de texto simples, salvando-o como *.spt*.\n\n|       Por outro lado, o *Jmol* possui um ambiente próprio de construção e testagem, *Script Editor*, acessável pelo *Menu* principal. Nesse ambiente é possível criar abrir, criar, checar, e rodar um *script*.\n\n|       O *Editor* pode ser empregado quando se tem várias linhas de comando, para melhor visualização da sequência algoritmica. Nesse caso é possível também incluir comentários, com uso de:\n\n```{r, eval=FALSE}         \n/* comentário */\nou\n// comentário //\nou\n# comentário\n```\n\n|       Na seção de *Programação* serão apresentados alguns *scripts* elaborados no *Editor*.\n\n|       Também é válido copiar/colar algum trecho de código no *Console* ou *Jmol/JSmol* separando-se os comandos por *ponto-e-vírgula* em linhas sucessivas. Desta forma simula-se o *Script Editor* no próprio *Console*.\n|       Também é possível pelo *Jmol* definir um *script* inicial a ser rodado junto à abertura do programa. Para isto:\n\n```{r, eval=FALSE}         \nset defaultLoadScript \"comandos\"\n```\n\n## Mutação\n\n|       Também é possível observar consequências da mutação de resíduos específicos em um modelo, tais como interações fracas (eletrostáticas ou ligações de hidrogênio, por ex).\n\n```{r, eval=FALSE}         \n\nmutate 33Lys \\# altera especificamente a posição 33 da sequência primária para Lisina mutate Ala34 \\~W \\# alteral Ala para Trp mutate(1:3) \\~GAL \\# altera as três primeiras posições na proteína para Gly, Ala e Leu\n```\n\n## Visualizando regiões com função `strut`\n\n|       Essa função permite conectar átomos na estrutura de uma proteína, apresentando um traço entre eles.\n\n```{r, eval=FALSE}         \n select atomno=1392 or atomno=1403\n connect \n strut\n strut 2.0\n color strut pink\n```\n\n## Animações\n\n```{r, eval=FALSE}         \nFocando o átomo de Fe na mioglobina: select hem; wireframe only; wireframe 70 \\# renderização exclusiva do grupo zooto 2(\\_Fe) 0 \\# ampliação de 2x\n```\n\n### Ampliação (*zoomto*)\n\n|       Esse recurso permite visualizar de forma ampliada e ajustada temporalmente, algumas partes de interesse do modelo, tais como sítios de interação de ligantes ou grupos prostéticos. A sintaxe da expressão é:\n\n```{r, eval=FALSE}         \nzoomto ou zoomTo (expressão do átomo/grupo) tamanho ou... \nzoomto tempo (expressão do átomo/grupo) tamanho\n```\n\nExemplos:\n\n```{r, eval=FALSE}         \nAumentar em 3x, meio segundo por vez: zoomto 0.5 *3 \nAumentar em 4x, meio segundo por vez: zoomto 0.5 400 \nFocar num ligante com ampliação de 2x: zoomto 2(ligand) 0\nFocar num ligante com ampliação de 4x, a meio segundo por vez: zoomto 0.5(ligand)* 4\n```\n\n### Delay\n\n|   Comando que permite aguardar por certo período (em segundos), antes da próxima ação. Utilizado normalmente na sequência de comandos pelo *Console*, ao longo de um *script*.\n\n### Move\n\n|       Os comandos *move* e *moveTo* permitem combinar ações de rotação, translação, e ampliação nos modelos. O comando *move* reorienta o modelo a partir das coordenadas atuais, e possui a sintaxe:\n\n``` {r, eval=FALSE}        \nmove rotX rotY rotZ zoom dX dy dZ slab time\n```\n\n|       Onde *rot* represnta a rotação em determinado eixo, e *d* a translação no eixo. Exemplos:\n\n```{r, eval=FALSE}         \nmove 90 0 0 0 0 0 0 0 1 - rotacioina o modelo em 90o no eixo X;\nmove 0 720 0 0 0 0 0 0 1 - rotaciona duas voltas completas no modelo em torno do eixo Y, durante 1 s;\nmove 90 15 0 100 0 20 0 0 2 - durante 2 s, rotaciona o modelo em 90o. no eixo X e 15o. no eixo Y, eleva seu tamanho a 100, e translada em 20% da altura do painel, tudo ao mesmo tempo\n```\n\n### MoveTo\n\n|       Resulta em orientação *absoluta* do modelo, não dependendo de suas coordenadas anteriores. Sua inserção não é simples, pois depende dos dados da orientação do modelo quando carregado pela 1a. vez, e que pode ser obtida por:\n\n```{r, eval=FALSE}         \nshow orientation\n```\n\n|       Um exemplo de resultado pelo comando é:\n\n```{r, eval=FALSE}         \nmoveto /* time, axisAngle */ 1.0 { 616 -708 -346 47.68} /* zoom, translation */  400.0 0.0 0.0  /* center, rotationRadius */ {15.174467 28.719118 4.726837} 35.148052 /* navigation center, translation, depth */ {0 0 0} 0 0 0 /* cameraDepth, cameraX, cameraY */  3.0 0.0 0.0;\n#OR\n#Follows Z-Y-Z convention for Euler angles\nreset;center {15.174467 28.719118 4.726837}; rotate z 130.27; rotate y 44.57; rotate z -147.67; zoom 400.0;\n```\n\n|       Perceba que há dois conjuntos de comandos um pelo *moveTo* e outro por *reset, center, rotate e translate*. Para obter o modelo nas coordenadas originais, basta copiar um ou outro conjunto de dados.\n\n|       Usando-se o 1o. conjunto (*moveTo*), copia-se a linha e altera-se o tempo de animação, no caso o valor 1.0 em \"axisAngle \\*/ 1.0\".\n\n### Compare\n\n|       Compara 2 modelos e reorienta as coordenadas do segundo para justapor-se ao primeiro, por um algoritmo de correlação.\n\n```{r, eval=FALSE}         \nload files \"$tyrosine\" \"$epinephrine\";\nframe *;\ncompare {2.1} {1.1} rotate translate 5.0 \n```\n\n### Navigate\n\n|       O comando permite explorar o modelo simulando um passeio panorâmico ao interior da estrutura. Os parâmetros envolvem o tempo de percuro (ou 2s quando omitido). Exemplificando:\n\n``` {r, eval=FALSE}        \nnavigate depth 50 # imersão no modelo em 2s\nnavigate 3 rotate y 20 # rotaciona 20o no eixo y\nnavigate 4 trace # passeia pelo modelo em 4s\nnavigate 3 translate {30 50 70} modelo translada levemente por 3s\nnavigate 5 center {10 20 30} # sonda ao lado do modelo, e nas coordenadas x, y, z\nnavigate 2 depth 30 / 5 rotate 180 / depth 20 / translate X 10\n```\n\n## Programação no Jmol\n\n|       Comandos de programação e de laço (*loop*) implementados no *Jmol*:\n\n```{r, eval=FALSE}         \nIF    FOR   WHILE   STEP    BREAK   WAIT    PAUSE   \nBREAK   CASE    CONTINUE    QUIT\n```\n\n### Laço (*loop*)\n\n|       Permite executar uma linha de comando repetidamente.\n\n``` {r, eval=FALSE}        \ncolor bonds red; delay 3; color bonds green; loop 1 # o laço é executado a cada 1 s\n```\n\n## Modelagem molecular\n\n|       Ainda que bastante limitado como ferramenta ao propósito de modelagem molecular, o *Jmol* permite algumas aproximações de caráter didático. O *script* que segue exemplifica a ferramenta em modelagem. Pode ser copiado e colado na janela do *Script Editor*, ou carregado a partir de um arquivo de texto.\n\n``` {r, eval=FALSE}        \n# Modelagem molecular #1\n\nload=3fgu;\ndefine ligbind (ANP, BGC, MG);\nselect ligbind\nconnect 3.3\nstrut 0.5\ncolor strut yellow\nhide protein or water\n```\n\n```{r, eval=FALSE}         \n# Modelagem molecular #2\n\nload =3fgu # carrega estrutura \ncartoon only\nhide water\nselect(BGC,ANP)\nwireframe only\n\nselect MG\nspacefill 100\ncolor palegreen\ndefine ligbind (ANP,BGC,MG)\n\nselect remove hetero and not water\nconnect 3.3(ligbind and (oxygen or nitrogen)) (selected and (oxygen or nitrogen)) strut yellow # cria varas de lig.H da proteína com os ligantes \nzoomTo 0.5(ligbind) *4 # amplia a cada meio segundo, até 4x no sítio do ligante \n\nzoom 0; center\nnavigate 2 DEPTH 30 / ROTATE 120\nzoomto (mg) *7\n\n# Obs: adaptado de Procko, K., Bakheet, S., Beckham, J. T., Franzen, M. A., Jakubowski, H., & Novak, W. R. (2021). Modeling an Enzyme Active Site using Molecular Visualization Freeware. JoVE (Journal of Visualized Experiments), (178), e63170.\n```\n\n<!-- ## Configurações (*set*) -->\n","srcMarkdownNoYaml":"\n\n<!-- Google tag (gtag.js)-->\n\n```{=html}\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-S1L73VGCG5\"></script>\n```\n```{=html}\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'G-S1L73VGCG5');\n</script>\n```\n\n\n|       O *Jmol* possui uma infinidade de comandos para visualização e estudo de modelos moleculares. Grande parte desses comandos é acessada pelo *Menu* principal do *Jmol*, ou por clique do botão direito do mouse no ecrã principal do programa ou do *applet JSmol* na internete.\n|       Entretanto, a *scriptagem* permite pelo *Console*, tanto do programa instalado como do *applet* a execução de um conjunto bem maior de ações, além de permitir elencar ações consecutivas gerando visualizações específicas, cálculos e animações, e mesmo *programação.* Nesse último caso, pela linguagem *Jmol scripting*. Esses comandos e a linguagem programação estão explicitados no site de seus desenvolvedores, [Jmol - Documentação & scriptagem](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#plot){target=\"_blank\"}, com substanciais exemplos e *links* ilustrativos e interativos. O conteúdo deste capítulo visa sumarizar os principais comandos para a visualização, estudo, importação e exportação, cálculos e animações dos modelos pelo *Console* ou por *script*.\n|       Como uma sequência de comandos visando uma observação mais complexa ou animação, **pode-se elaborar o script** em qualquer editor de texto simples, **salvando-o com atributo \".spt\"**. O *script* pode ser carregado como um arquivo ou colado no campo do *Console*.\n|       Os comandosdo *Jmol* não fazem distinção entre singular o plural, ou entre maiúscula ou minúscula, podendo-se empregar ambos as formas, como *show group* ou *Show groups*.\n|       Uma observação adicional: na construção de um *script*, é recomendável que se forneça explicações em linhas de comando; para tanto, basta utilizar o sinal de hashtag (*\\#*) após os comandos.\n\n## Mudando a linguagem da interface & diretório de arquivos\n\n### Linguagem\n\n|       A linguagem do *Menu* e a saída dos comandos (resultados) podem ser alteradas como abaixo. Lembrando-se, contudo, que os comandos propriamente ditos reportam-se a algoritmos computacionais; dessa forma, não é possível alterar a linguagem dos comandos\n\n```{r, eval=FALSE}         \nset language = código # pt (português), es (espanhol), en (inglês), fr (francês), de (alemão), etc...\n```\n\n|       Obs: caso não consiga, inicialize o *Jmol* abrindo um CMD (*Windows*) ou Teminal (*Linux*) na pasta do diretório do programa, e digite, para *português*:\n\n```{r, eval=FALSE}         \njava -Duser.language=pt -jar Jmol.jar\n```\n\n### Diretório\n\n```{r, eval=FALSE}         \ncd # apresenta diretório atual\ncd ? # abre janela para diretório padrão\ncd path # altera o diretório padrão (ex: ../temp)\nset defaultDirectory \"/home/\" # diretório padrão (para applet)\n```\n\n## Comandos gerais\n\n```{r, eval=FALSE}         \nAjuda: help # help zoom\nSair: quit\nDesfazer: undo\nRefazer: redo\nRetorno ao modelo original (posição, tamanho, centralização e orientação): reset\nInicialização do programa: initialize\nHistórico de comandos: history on ou history off\nMinimização por campos de força do modelo: minimize\n```\n\n|       Experimente alguns dos comandos acima com o *applet* para *JSmol* que segue:\n\n[![](jsmol.png){width=\"20%\"}](https://chemapps.stolaf.edu/jmol/jsmol/simple.htm)\n\n## Obtendo modelos moleculares\n\n### Um modelo\n\n```{r, eval=FALSE}         \nDa internet:\n  moléculas em geral: load $cholesterol\n  moléculas do PDB (Protein Data Bank): load=9pap\n  ligantes do site RCSB : load =ligand/hem\n  compostos do site PubChem:  load \":nafamostat\"\n\n\nDo computador (necessário que os arquivos estejam no diretório raiz ou pré-selecionado por \"cd\"-vide acima):\n  load \"1aay.pdb\"\n```\n\n### Mais de um modelo\n\n```{r, eval=FALSE}         \nSeparados: load files \"1a2t.pdb\" \"1aay.pdb\"\n  apresentar o 1o. modelo: model 1 ou model 1.1\n  apresentar o 2o. modelo: model 2 ou model 2.1\n  apresentar todos os modelos: model* ou frame*\nJuntos: load append \"1a2t.pdb\" \"1aay.pdb\"\n```\n\n\n## Construindo moléculas simples por SMILES\n\n|   *SMILES*, uma abreviação para *\"Simplified molecular-input line-entry system\"*, permite representar a estrutura de modelos atômicos utilizando-se símbolos e texto (caracteres ASCII).\n\n\n|   Experimente essa formatação no endereço abaixo. \n\n```{r, eval=FALSE}\nhttps://chemapps.stolaf.edu/jmol/jmol.php?model=C\n```\n\n\n|   Em seguida, substitua o *modelo* do *link*,  *\"model=\"* pelos códigos *SMILES* que seguem, alternativamente:\n```{r, eval=FALSE}\n\n1. Ligação simples: CC, CN, CO\n2. Ligação dupla: C=C, C=N, C=O\n3. Ligação tripla: N%23N, CC%23C\n\nObs: o código para a ligação tripla visa contornar o comando do *SMILES*, *\"#\"*, e que é interpretado de modo diferente em endereço de internet.\n```\n\n\n## Visualizando os modelos:\n\n``` {r, eval=FALSE}        \nVisualizar: display 2.1\nEsconder: hide 1.1\nRemover os modelos: zap\nSombreamento: set ambient 45 (0-sombra; 100-sem sombra)\n```\n\n## Apresentando informações dos modelos (comando *show*)\n\n``` {r, eval=FALSE}        \nNão apresentar nada: show none\nModelo: show model\nÁtomos: show atom\nCadeias (proteína ou ác. nucleico): show chain\nInformações de minimização estrutural: show DSSP\nSuperfícies (molecular, eletrostática): show isosurface\nGrupos: show group\nInformações do modelo: show info\nSequência primária de proteína: show sequence\nHistórico de comandos: show history\nResíduos (proteína): show residues\nOrbital molecular: show mo\nCaminho de internete: show url\nInformação completa do arquivo PDB: show file\n```\n\n### Bancos de dados moleculares\n\n|       Existem diversos bancos de dados para renderização de modelos moleculares, e com possibilidade de salvamento de arquivo para uso com o *Jmol*. Dentre esses destacam-se o [PubChem](https://pubchem.ncbi.nlm.nih.gov/){target=\"_blank\"} ou o [DrugBank](https://go.drugbank.com/){target=\"_blank\"} para *moléculas pequenas*, e o [RCSB - Protein DataBank (Research Collaboratory for Structural Bioinformatics)](https://www.rcsb.org/){target=\"_blank\"} para macromoléculas. Também há o [IUPHAR/BPS Guide to PHARMACOLOGY](https://www.guidetopharmacology.org/), que permite acesso indireto tanto para micro como para macromoléculas.\n|       Em qualquer desses, basta procurar um campo para *download* de modelos moleculares *3D*. O *Jmol* aceita em torno de **47 tipos distintos de arquivos** para renderização estrutural, dos quais elencam-se *PDB, MOL, CIF, SDF, XYZ, SMILES, e AMBER*.\n\n## Operações gerais\n\n```{r, eval=FALSE}         \nReinicialização de coordenada do modelo: reset (tamanho e centralização): Shift+ duplo clique (ou *reset* no *Console*)\n\nEliminar a *logo* do Jmol nas imagens: set frank off\n\nPlano de fundo: background white\n\nResolução do modelo: set ambient 10\n```\n\n## Comandos de mouse\n\n|       Para abrir o *Menu* de opções para visualização, cálculos e superfícies: clique direito\n\n### Movimentos do modelo\n\n```{r, eval=FALSE}         \nRotação simples: clique arraste em qualquer direção\n\nRotação sobre o mesmo eixo até 360$^{o}$: Shift+clique direito\n\nTranslação da estrutura: Ctrl+clique dir\n\nAmpliação geral (zoom):  Shift+clique esquerda e arraste - ampliação/redução - (ou mouse, botão do meio).\n```\n\n## Comandos de movimento\n\n```{r, eval=FALSE}         \n  spin 10 # rotacional, com velocidade de 10 graus por quadro\n  spin z -15 # (eixo z)\n  rotate 20 # 20 graus\n  rotate x 90 # eixo x\n  translate 50 # valor representa o percentual da janela (100 - fora; 0 - centro)\n```\n\n## Salvando e exportando modelos (*write*)\n\n```{r, eval=FALSE}         \n # (salva como imagem)\nImagem do modelo: \n  padrão (png): write nome-do-modelo\n  com específicações: write PNGJ 2000 2000 \"big.png\"\n  outros (jpg, pdf): write nome.jpg\n  todos os modelos: write frames* \"all.jpg\"\nCoordenadas do modelo\n  write nome.mol # ou outro atributo (ex: pdb)\nEstado do modelo (alterações após carregamento): write molecula.spt # de \"script\"\n```\n\n### Copiando para o clipboard\n\n|       A imagem do modelo pode ser copiada pelo *Menu* principal do programa.\n\n### Reproduzindo um modelo da internet que não permite salvamento\n\n|       Por vezes alguns *sites* disponibilizam moléculas em atributo \\*mol ou \\*pdb para visualização e estudo, mas sem a possibilidade de baixar o arquivo. Nesses casos é possível obter as coordenadas do modelo, copiá-las em um bloco de notas, e salvar o arquivo para leitura pelo *Jmol*, como \\*\\mol, por exemplo.\n\n```{r, eval=FALSE}         \n1. Visualize o modelo desejado no site;\n2. Clique com o botão direito do mouse e selecione Console.\n3. Clique novamente, selecione Show e:\n   Extract mol data....ou\n   File contents\n```\n\n|       Como resultado o *Console* exibirá os dados para cópia a arquivo de texto. Basta salvá-lo como \\*.mol para visualização futura no Jmol.\n\n## Quantidades\n\n### Calculando distâncias e ângulos (*measure*)\n\n|   Além do uso simples e interativo do mouse para cálculo de distâncias (duplo clique com o botão direito do mouse no 1o. átomo e arraste ao 2o. átomo) ou de ângulos (3 cliques do mouse), é possível obter as mesmas informações pelo *Console*.\n\n```{r, eval=FALSE}         \nDistância: measure no. átomo1 no. átomo2\nÂngulo: measure no. átomo1 no. átomo2 no. átomo 3\n  Obs: para se obter o no. do átomo basta clicar no ponto desejado do modelo\nÂngulo de torção: measure átomo1 átomo2 átomo3 átomo4\n\nMedidas: measure on..ou off...ou delete\nEscolha da unidade de medida: set measure nm # ou pm, angstrons, au (unidade atômica de Bohr)\n```\n\n### Obtendo & visualizando quantidades\n\n```{r, eval=FALSE}         \nLigações de hidrogênio: calculate hbonds (ou...hbonds calculate)\nCargas formais (efetivas): calculate formalcharge # para etiquetar: label %C\nCargas parciais: calculate partialcharge # para etiquetar: label %P\nEstruturas 2as numa proteína: calculate structure # algoritmo DSSP - Define Secondary Structure; obs: a representação desaparece, e é necessário digitar novamente o comando para seu retorno\nTodas as ligações do modelo e com respectivas distâncias: measure allconnected (*)(*)\n```\n\n## Alterando as representações\n\n|       Há diversas formas de renderização de estruturas no *Jmol*. Os comandos abaixo resumem essa capacidade:\n\n```{r, eval=FALSE}         \nwireframe, backbone, trace, strands, cartoon, ribbons, meshriboon, rockets, cpk (ou spacefill), ball&stick (somente pelo Menu, ou pela combinação abaixo no Console)\n\nPara visualizar uma única forma: wireframe only\nPara esconder uma forma: backbone off\nPara renderizar como \"ball&stick\":  wireframe only;wireframe reset;spacefill reset \n```\n\n|       As representações renderizam a estrutura pelo tamanho de seus átomos. A renderização por *spacefill*, por exemplo, expressa-se como uma função do *raio de van der Waals* do átomo. Exemplificando:\n\n``` {r, eval=FALSE}        \nspacefill on / off\nwireframe 0.5 # 0,5 Angstrom (o \".\" refere-se a valor absoluto)\nbackbone 50 # 50/250 Angstrom, ou 0,2 Angstrom (ausência de ponto refere-se a valor relativo)\ncartoon 50% # 50% a mais que o padrão\nspacefill 2 # 2/250 Angstrom = 0,008 Angstrom (observe a ausência de ponto)\nspacefill 2.0 # 2 Angstrom (observe o ponto)\n```\n\n### Cortes & sombreamento\n\n```     {r, eval=FALSE}    \nCorte na visualização: slab on; slab 30\nVisão de profundidade: depth 30\n```\n\n### Visualizando ou não o hidrogênio\n\n```{r, eval=FALSE}         \nInserir no modelo: set pdbAddHydrogens\nRetirar do modelo: set pdbAddHydrogens false\n```\n\n### Visualizando ligações dissulfeto (proteínas)\n\n```{r, eval=FALSE}         \nssbonds on ou ssbonds off\nssbonds 40 # renderiza como varetas,e diâmetro de 40/250 Angstron\nssbonds 0.5 # renderiza com 0,2 Angstrom de diâmetro\n```\n\n|       Só para exercitar-se, experimente alguns dos comandos acima com o *applet* para *JSmol*, tal como segue segue:\n\n[![](jsmol.png){width=\"20%\"}](https://chemapps.stolaf.edu/jmol/jsmol/simple.htm)\n\n## Selecionando cores\n\n|       A opção padrão para cores dos modelos é a *CPK (Corey, Pauling, Koltun)*, para carbono (cinza), nitrogênio (azul), fósforo ou enxofre (amarelo), hidrogênio (branco), iodo (violeta), etc. Contudo é possível alterar cores globalmente no modelo, ou especificamente sobre grupos selecionados de átomo. O programa aceita o comando *color* ou *colour*.\n\n```{r, eval=FALSE}         \ncolor [255,125,350] # cor específica\ncolor bonds # aplica a cor sem necessidade de especificar a representação\ncolor [xFF00FF] # cor específica\ncolor cpk # padrão do programa\ncolor molecule # todos os átomos conectador por uma ligação\ncolor formalcharge\ncolor partialcharge\ncolor amino # para aminoácidos\ncolor structure # para estrutura secundária\n  Proteínas: vermelho (alfa-hélice), amarelo (folhas-beta), azul (voltas), branco (restante)\n  Ácido nucleico: violeta (DNA), avermelhado (RNA)\ncolor chain: cadeias\ncolor inherit: os objetos herdam a cor de seus átomos associados\ncolor shapely: esquema de cor que inclui nucleotídios\ncolor group: gradiente de arco-íris (azul; N- ou 5'-terminal; vermelho; C- ou 3'-terminal)\n```\n\n### Cores específicas\n\n|       Pode-se também atribuir a um átomo ou conjunto desses uma coloração específica, como segue:\n\n```{r, eval=FALSE}         \nAliceBlue,AntiqueWhite,Aqua,Aquamarine,Azure,Beige,Bisque,Black,\nBlanchedAlmond,Blue,BlueViolet,Brown,BurlyWood,CadetBlue,Chartreuse,\nChocolate,Coral,CornflowerBlue,Cornsilk,Crimson,Cyan,DarkBlue,DarkCyan,\nDarkGoldenRod,DarkGray,DarkGrey,DarkGreen,DarkKhaki,DarkMagenta,\nDarkOliveGreen,Darkorange,DarkOrchid,DarkRed,DarkSalmon,DarkSeaGreen,\nDarkSlateBlue,DarkSlateGray,DarkSlateGrey,DarkTurquoise,DarkViolet,\nDeepPink,DeepSkyBlue,DimGray,DimGrey,DodgerBlue,FireBrick,FloralWhite,\nForestGreen,Fuchsia,Gainsboro,GhostWhite,Gold,GoldenRod,Gray,Grey,Green,\nGreenYellow,HoneyDew,HotPink,IndianRed,Indigo,Ivory,Khaki,Lavender,\nLavenderBlush,LawnGreen,LemonChiffon,LightBlue,LightCoral,LightCyan,\nLightGoldenRodYellow,LightGray,LightGrey,LightGreen,LightPink,LightSalmon,\nLightSeaGreen,LightSkyBlue,LightSlateGray,LightSlateGrey,LightSteelBlue,\nLightYellow,Lime,LimeGreen,Linen,Magenta,Maroon,MediumAquaMarine,MediumBlue,\nMediumOrchid,MediumPurple,MediumSeaGreen,MediumSlateBlue,MediumSpringGreen,\nMediumTurquoise,MediumVioletRed,MidnightBlue,MintCream,MistyRose,Moccasin,\nNavajoWhite,Navy,OldLace,Olive,OliveDrab,Orange,OrangeRed,Orchid,PaleGoldenRod,PaleGreen,PaleTurquoise,PaleVioletRed,PapayaWhip,PeachPuff,Peru,Pink,Plum,\nPowderBlue,Purple,Red,RosyBrown,RoyalBlue,SaddleBrown,Salmon,SandyBrown,\nSeaGreen,SeaShell,Sienna,Silver,SkyBlue,SlateBlue,SlateGray,SlateGrey,Snow,\nSpringGreen,SteelBlue,Tan,Teal,Thistle,Tomato,Turquoise,Violet,Wheat,White,\nWhiteSmoke,Yellow,YellowGreen.\n```\n\n## Etiquetando o modelo (*label*)\n\n```{r, eval=FALSE}         \nEtiqueta ligado/desligado: label on...ou label off\nCadeia: label %c\nCarga formal: label %C\nCarga parcial: label %P\nResíduo de aminoácido em proteína: %n\nNo. do resíduo: %r\nÁtomo: %a\nNo. identificador do átomo: %i\nSímbolo do elemento: %e\nCadeia: %c\n```\n\n|       Para visualização de um conjunto específico de átomos, como resíduos de uma proteína, pode-se utilizar:\n\n```{r, eval=FALSE}         \nselect (Ser195,His57,Asp102) and *.ca; label \"\\%n \\%R\";color label orange ;set labelfront\n```\n\n|       Algumas operações específicas permitem também a etiquetagem.\n\n```{r, eval=FALSE}         \nlabel binding site # etiqueta com a expressão \nlabel binding | site # etiqueta com a expressão, separada por linhas (\"|\" é o comando \"pipe\")\n```\n\n|       O *Jmol* permite também etiquetar determinado átomo, resíduo, sítio de interação ou reação, ou algum grupo para melhor identificação e exploração do modelo. Para isto pode-se selecionar a estrutura por *select*, seguido da etiqueta proposta. Exemplificando:\n\n```{r, eval=FALSE}         \nselect pro31 # seleção do resíduo de Prolina na posição 31 da sequência proteica\nlabel Prolina-31\nset echo top left; echo \"Modelo 1\" # inserção de texto no ecrã\nselect all; label on # nomeia todos os átomos com símbolo e número atômico\n```\n\n## Selecionando partes do modelo\n\n|       Para selecionar-se um grupo geral de átomos, basta combinar pelo mouse *Shift+clique esq+drag* para o grupo selecionado (é necessário clicar no ícone que o representa no menu antes). Para uma seleção mais específica, pode-se utilizar algumas das *expressões de átomos* específicas ou pré-definidas, como abaixo:\n\n```{r, eval=FALSE}         \nNatureza da molécula:\n  all, none, protein, nucleic, dna, rna, carbohydrate, hetero, ligand, solvent, water ou hoh, ions, hem, amino\n\nElemento químico\n  Por nome: oxygen, nitrogen, carbon\n  Por símbolo: _N, _C, _Fe\n  Por no. atômico: elemNo=7, ou atomNo=5\n  Por no. de identificação do átomo na sequência (serial): atomNo<50\n\nParte da molécula:\n  backbone, sidechain, :b (pra cadeia), spine\n  \nTipo de resíduo\n  abreviação de 3 letras de aminoácidos, acidic, basic, polar, neutral, charged, purine, pyrimidine, large, small, buried, surface, cyclic, hydrophilic, hydrophobic, aromatic, cystine, aliphatic, spine, base\n  \nEstrutura 2a. em proteínas\n  helix, sheet, turn\n```\n\n|       Os comandos gerais para emprego das expressões acima ou de combinações dessas são, basicamente:\n\n```{r, eval=FALSE}         \nselect, restrict, hide, display, delete\n```\n\n|       Cada expressão deve ser alocada entre parênteses. Pode-se também aplicar *operações booleanas* (*or, and, but not*, ou *=, \\<, \\>, \\<=, \\>=, !=*).\n\n|       O comando *restrict* tem natureza irreversível, enquanto o comando *hide* apresenta-se reversível na renderização. seguido pela expressão desejada. Alguns exemplos:\n\n|       Seguem alguns exemplos:\n\n``` {r, eval=FALSE}        \nComando restrict\n  restrict helix # permanece somente as hélices da estrutura secundária\n  restrict ligand # somente o ligante\n  restrict not ligand # somente a proteína sem grupos prostéticos\n  restrict 42-60 # permanece apenas a sequência de resíduos indicada\n  restrict f6p # permanece apenas o grupo identificado (um ligante, no caso)\n  restrict not(:a, :b) # permanecem cadeias que não a \"a\" e a \"b\"\n  \nComando select\n  select Tyr\n  select polar\n  select all # seleciona todos os átomos\n  select none # não seleciona nenhum átomo\n  select bmp,amp # seleciona dois ligantes\n  select (bmp, amp) and oxygen\n  select hem and :b # seleciona grupo heme da cadeia \"b\"\n  select hem and not iron :b # seleciona o grupo heme da cadeia \"b\", omitindo o Fe\n  select */2 # todos os átomos do modelo 2\n  select connected(oxygen) # todos os átomos ligados a um oxigênio\n  select ser70 :A .ca # carbono alfa de serina no. 70 da cadeia A\n  select hetero and not solvent # heteroátomos exceto a água\n  select remove group hetero and not water # somente a água\n  select hetero and not ligand # heteroátomos exceto ligante\n  select buried only # somente resíduos do cerne proteico\n  select helix or backbone # seleciona hélices ou esqueleto proteico\n  select not helix # seleciona as demais estruturas 2as. de proteína (turn, sheet)\n  select 62 and(sidechain or alpha) # cadeia lateral ou carbono alfa do resíduo 62\n  select ser70.ca # carbonos alfa de serina no. 70\n  select ser70 :a.ca # carbons alfa de serina no. 70 da cadeia \"a\"\n  select (lys,arg) # somente os resíduos Lys e Arg\n  select (lys,arg) and :b # resíduos Lys e Arg da cadeia \"b\"\n  select 19-32 :y # sequência de resíduos da cadeia \"y\"\n  select asp47 # resíduo Asp na posição 47\n  select  [asp]47 :y # resíduo asp47 da cadeia \"y\"\n  select (10 or 25) and backbone\n  select resNo>14 and resNo<25 and *.CA # carbonos alfa de resíduos 14 a 25\n  select hoh.o/2 # oxigênio de moléculas de água no modelo 2 \n  select (14,16,18,20) # os resíduos numerados\n  select backbone and *:b # a espinha da cadeia \"b\"\n  select backbone and not *:b # a espinha de todas as cadeias, exceto a \"b\"\n  select not hidden...select displayed # tudo que não estiver escondido\n  select not selected # tudo que não fora selecionado previamente\n  select carbon and not selected # átomos de carbono não selecionados previamente\n\nComando delete\n  delete(calcium,nadph)\n```\n\n### Seleções especiais\n\n#### Comando *within*\n\n|       Este comando permite uma seleção recursiva, ou seja, uma seleção dentro de uma seleção.\n\n```{r, eval=FALSE}         \nselect within (5, (bca,amp)) # seleciona dois ligantes que se avizinhem a 5 Angstrons de distância do grupo de átomos selecionado\nselect within(3.0, _Fe) # todos os átomos próximos de 3 Angstrons do átomo de ferro\n```\n\n#### Comando *define*\n\n|       Permite definir um grupo de átomos para renderização ou observação específica. Após a definição basta utilizar *select* ou outro comando para alteração do modelo.\n\n```{r, eval=FALSE}         \n  define teste (arg10) # seleciona somente Arg10\n  define teste (arg10 or asn46) # seleciona os dois resíduos\n  define teste (ser195 or asp102 or his57)\n  define Sitio within(3.0, _Cu) # 3 Angstrons de distância de átomo de cobre\n  define PontoX within(5.0,arg31) # 5 Angstrons de distância de Arg31\n  define vizinhos selected # previamente selecionado\n```\n\n#### Comandos *selected*, *hidden*, *displayed*\n\n|       Permitem direcionar uma ação ao grupo de átomos já selecionado, escondido ou apresentado, respectivamente.\n\n## Ampliação dos modelos (*zoom*)\n\n|       Há dois comandos básicos no *Jmol* para ampliação:\n\n1.  *zoom* : (expressão) tamanho\n2.  *zoomTo* : tempo (expressão) tamanho\n\n|       O segundo comando permite uma animação do modelo, motivo pelo qual será explicitado em seção homônima abaixo. Seguem alguns exemplos para o comando *zoom*.\n\n```{r, eval=FALSE}         \nAmpliação 2x: zoom in\nAmpliação em 3x: zoom \\*3 \nRedução em 2x: zoom out \nRedução em 3x: zoom /3 \nEliminar ampliação: zoom off \nRestrição a ligante e ampliação: restrict ligand; zoom 0\nzoom 100: restaura o tamanho inicial\n```\n\n## Superfícies\n\n|       O *Jmol* permite renderizar alguns tipos de superfícies em torno dos átomos do modelo. Para macromoléculas deve-se observar que a renderização levará um tempo maior.\n\n``` {r, eval=FALSE}        \n\ndots on / off \\# superfície de van der Waals dots only \\# somente a superfície de vdw presente (sem o modelo) dots vanderwaals...ou dots vdw dots ionic\n\nisosurface on/off  # superfície molecular \nisosurface solvent # excluindo o solvente\nisosurface molecular # incluindo o solvente \nisosurface molecular 5 # superíficie a um determinado raio de VDW \nisosurface sasurface # área acessível ao solvente (\"surface acessible solvent\") \nisosurface mep # \"molecular electrostatic potential\" \nisosurface map vdw # superfície de Van der Waals \nisosurface map mep # potencial eletrostático \nisosurface molecular map property PartialCharge # ou temperature, vanderwaals\n\ngeosurface on/off # superfície molecular geodésica (curva) geosurface only # exclusivamente a superfície, sem o modelo geosurface vdw \ngeosurface ionic geosurface 5 # valor em Angstrom\n\nObs: Para visualizar as superfícies incluindo o solvente, pode-se utilizar o comando \"set solvent on\" antes.\n```\n\n## Gráficos\n\n|       Alguns gráficos bi e tridimensionais podem ser gerados a partir de comandos simples do *Jmol*. Para voltar ao modelo original, forneça o comando *model 1*. Alguns exemplos:\n\n```{r, eval=FALSE}         \nplot properties resno partialcharge # resno = número do resíduo (plota após comando para calcular carga superficial - vide acima) \nplot properties phi psi resno # plot 3D com ângulos diedrais contra no. do resíduo plot rama...ou...\nplot ramachandran # gráfico de Ramachandran para estrutura 2a. em proteínas\nObs: para visualizar os ângulos phi e psi no modelo (não no plot), digite: draw rama (draw off para esconder)\n\nOutras propriedades: hydrophobicity, mass, temperature, radius, occupancy, chaino\n```\n\n## Criando e lendo scripts\n\n|       A \"scriptagem\" permite a observação e análise de uma parte específica do modelo em estudo, pela composição de trechos de código como linhas de comando. Dessa forma o *script* assemelha-se a um *algoritmo* com sucessão de comandos. Um *script* pode ser carregado pela chamada de arquivos do programa (*File, Open*), ou mesmo por arraste do arquivo à área do ecrã do programa.\n\n|       Um *script* do *Jmol* baseia-se em um dialeto de *Java Script*, e pode ser conduzido por uma sequência de comandos a cada linha de um arquivo de texto simples, salvando-o como *.spt*.\n\n|       Por outro lado, o *Jmol* possui um ambiente próprio de construção e testagem, *Script Editor*, acessável pelo *Menu* principal. Nesse ambiente é possível criar abrir, criar, checar, e rodar um *script*.\n\n|       O *Editor* pode ser empregado quando se tem várias linhas de comando, para melhor visualização da sequência algoritmica. Nesse caso é possível também incluir comentários, com uso de:\n\n```{r, eval=FALSE}         \n/* comentário */\nou\n// comentário //\nou\n# comentário\n```\n\n|       Na seção de *Programação* serão apresentados alguns *scripts* elaborados no *Editor*.\n\n|       Também é válido copiar/colar algum trecho de código no *Console* ou *Jmol/JSmol* separando-se os comandos por *ponto-e-vírgula* em linhas sucessivas. Desta forma simula-se o *Script Editor* no próprio *Console*.\n|       Também é possível pelo *Jmol* definir um *script* inicial a ser rodado junto à abertura do programa. Para isto:\n\n```{r, eval=FALSE}         \nset defaultLoadScript \"comandos\"\n```\n\n## Mutação\n\n|       Também é possível observar consequências da mutação de resíduos específicos em um modelo, tais como interações fracas (eletrostáticas ou ligações de hidrogênio, por ex).\n\n```{r, eval=FALSE}         \n\nmutate 33Lys \\# altera especificamente a posição 33 da sequência primária para Lisina mutate Ala34 \\~W \\# alteral Ala para Trp mutate(1:3) \\~GAL \\# altera as três primeiras posições na proteína para Gly, Ala e Leu\n```\n\n## Visualizando regiões com função `strut`\n\n|       Essa função permite conectar átomos na estrutura de uma proteína, apresentando um traço entre eles.\n\n```{r, eval=FALSE}         \n select atomno=1392 or atomno=1403\n connect \n strut\n strut 2.0\n color strut pink\n```\n\n## Animações\n\n```{r, eval=FALSE}         \nFocando o átomo de Fe na mioglobina: select hem; wireframe only; wireframe 70 \\# renderização exclusiva do grupo zooto 2(\\_Fe) 0 \\# ampliação de 2x\n```\n\n### Ampliação (*zoomto*)\n\n|       Esse recurso permite visualizar de forma ampliada e ajustada temporalmente, algumas partes de interesse do modelo, tais como sítios de interação de ligantes ou grupos prostéticos. A sintaxe da expressão é:\n\n```{r, eval=FALSE}         \nzoomto ou zoomTo (expressão do átomo/grupo) tamanho ou... \nzoomto tempo (expressão do átomo/grupo) tamanho\n```\n\nExemplos:\n\n```{r, eval=FALSE}         \nAumentar em 3x, meio segundo por vez: zoomto 0.5 *3 \nAumentar em 4x, meio segundo por vez: zoomto 0.5 400 \nFocar num ligante com ampliação de 2x: zoomto 2(ligand) 0\nFocar num ligante com ampliação de 4x, a meio segundo por vez: zoomto 0.5(ligand)* 4\n```\n\n### Delay\n\n|   Comando que permite aguardar por certo período (em segundos), antes da próxima ação. Utilizado normalmente na sequência de comandos pelo *Console*, ao longo de um *script*.\n\n### Move\n\n|       Os comandos *move* e *moveTo* permitem combinar ações de rotação, translação, e ampliação nos modelos. O comando *move* reorienta o modelo a partir das coordenadas atuais, e possui a sintaxe:\n\n``` {r, eval=FALSE}        \nmove rotX rotY rotZ zoom dX dy dZ slab time\n```\n\n|       Onde *rot* represnta a rotação em determinado eixo, e *d* a translação no eixo. Exemplos:\n\n```{r, eval=FALSE}         \nmove 90 0 0 0 0 0 0 0 1 - rotacioina o modelo em 90o no eixo X;\nmove 0 720 0 0 0 0 0 0 1 - rotaciona duas voltas completas no modelo em torno do eixo Y, durante 1 s;\nmove 90 15 0 100 0 20 0 0 2 - durante 2 s, rotaciona o modelo em 90o. no eixo X e 15o. no eixo Y, eleva seu tamanho a 100, e translada em 20% da altura do painel, tudo ao mesmo tempo\n```\n\n### MoveTo\n\n|       Resulta em orientação *absoluta* do modelo, não dependendo de suas coordenadas anteriores. Sua inserção não é simples, pois depende dos dados da orientação do modelo quando carregado pela 1a. vez, e que pode ser obtida por:\n\n```{r, eval=FALSE}         \nshow orientation\n```\n\n|       Um exemplo de resultado pelo comando é:\n\n```{r, eval=FALSE}         \nmoveto /* time, axisAngle */ 1.0 { 616 -708 -346 47.68} /* zoom, translation */  400.0 0.0 0.0  /* center, rotationRadius */ {15.174467 28.719118 4.726837} 35.148052 /* navigation center, translation, depth */ {0 0 0} 0 0 0 /* cameraDepth, cameraX, cameraY */  3.0 0.0 0.0;\n#OR\n#Follows Z-Y-Z convention for Euler angles\nreset;center {15.174467 28.719118 4.726837}; rotate z 130.27; rotate y 44.57; rotate z -147.67; zoom 400.0;\n```\n\n|       Perceba que há dois conjuntos de comandos um pelo *moveTo* e outro por *reset, center, rotate e translate*. Para obter o modelo nas coordenadas originais, basta copiar um ou outro conjunto de dados.\n\n|       Usando-se o 1o. conjunto (*moveTo*), copia-se a linha e altera-se o tempo de animação, no caso o valor 1.0 em \"axisAngle \\*/ 1.0\".\n\n### Compare\n\n|       Compara 2 modelos e reorienta as coordenadas do segundo para justapor-se ao primeiro, por um algoritmo de correlação.\n\n```{r, eval=FALSE}         \nload files \"$tyrosine\" \"$epinephrine\";\nframe *;\ncompare {2.1} {1.1} rotate translate 5.0 \n```\n\n### Navigate\n\n|       O comando permite explorar o modelo simulando um passeio panorâmico ao interior da estrutura. Os parâmetros envolvem o tempo de percuro (ou 2s quando omitido). Exemplificando:\n\n``` {r, eval=FALSE}        \nnavigate depth 50 # imersão no modelo em 2s\nnavigate 3 rotate y 20 # rotaciona 20o no eixo y\nnavigate 4 trace # passeia pelo modelo em 4s\nnavigate 3 translate {30 50 70} modelo translada levemente por 3s\nnavigate 5 center {10 20 30} # sonda ao lado do modelo, e nas coordenadas x, y, z\nnavigate 2 depth 30 / 5 rotate 180 / depth 20 / translate X 10\n```\n\n## Programação no Jmol\n\n|       Comandos de programação e de laço (*loop*) implementados no *Jmol*:\n\n```{r, eval=FALSE}         \nIF    FOR   WHILE   STEP    BREAK   WAIT    PAUSE   \nBREAK   CASE    CONTINUE    QUIT\n```\n\n### Laço (*loop*)\n\n|       Permite executar uma linha de comando repetidamente.\n\n``` {r, eval=FALSE}        \ncolor bonds red; delay 3; color bonds green; loop 1 # o laço é executado a cada 1 s\n```\n\n## Modelagem molecular\n\n|       Ainda que bastante limitado como ferramenta ao propósito de modelagem molecular, o *Jmol* permite algumas aproximações de caráter didático. O *script* que segue exemplifica a ferramenta em modelagem. Pode ser copiado e colado na janela do *Script Editor*, ou carregado a partir de um arquivo de texto.\n\n``` {r, eval=FALSE}        \n# Modelagem molecular #1\n\nload=3fgu;\ndefine ligbind (ANP, BGC, MG);\nselect ligbind\nconnect 3.3\nstrut 0.5\ncolor strut yellow\nhide protein or water\n```\n\n```{r, eval=FALSE}         \n# Modelagem molecular #2\n\nload =3fgu # carrega estrutura \ncartoon only\nhide water\nselect(BGC,ANP)\nwireframe only\n\nselect MG\nspacefill 100\ncolor palegreen\ndefine ligbind (ANP,BGC,MG)\n\nselect remove hetero and not water\nconnect 3.3(ligbind and (oxygen or nitrogen)) (selected and (oxygen or nitrogen)) strut yellow # cria varas de lig.H da proteína com os ligantes \nzoomTo 0.5(ligbind) *4 # amplia a cada meio segundo, até 4x no sítio do ligante \n\nzoom 0; center\nnavigate 2 DEPTH 30 / ROTATE 120\nzoomto (mg) *7\n\n# Obs: adaptado de Procko, K., Bakheet, S., Beckham, J. T., Franzen, M. A., Jakubowski, H., & Novak, W. R. (2021). Modeling an Enzyme Active Site using Molecular Visualization Freeware. JoVE (Journal of Visualized Experiments), (178), e63170.\n```\n\n<!-- ## Configurações (*set*) -->\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"output-file":"comandos.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Ligações de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno do Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Descarregar código fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de Palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.7.22","theme":{"light":"flatly"},"title":"Comandos"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}