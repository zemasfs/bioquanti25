{"title":"Inibição enzimática","markdown":{"yaml":{"title":"Inibição enzimática","toc":true,"lang":"pt","bibliography":"referencias.bib"},"headingText":"Tipos de inibição","containsRefs":false,"markdown":"\n\n\n|       Capítulo vasto na enzimologia e com aplicação direta em Química, Farmacologia, Biotecnologia, Biomedicina e áreas afins, a inibição enzimática encontra-se no âmago dos fármacos, medicamentos e biosensores. Sob um ponto de vista simplificado, a atividade enzimática pode ser reduzida na presença de vários efetores, entre moléculas endógenas ou exógenas do metabolismo celular, incluindo o próprio substrato. Genericamente a *inibição enzimática* classifica-se como *irreversível* quando a ativide decai pela ligação covalente de um inibidor, ou *reversível*, quando há um equilíbrio de associação/dissociação com a macromolécula. A seguir serão ilustradas inibições reversíveis.\n\n### Inibição pelo substrato\n\n|       Uma inibição enzimática comum ao metabolismo é a protagonizada pelo próprio substrato em excesso no meio, sendo definida por:\n\n$$\nv=\\frac{Vm*S}{S(1+\\frac{S}{Ks})+Km}\n$$ {#eq-eqInibS}\n\n\n|       Dessa forma, o gráfico resultante de uma inibição por excesso de substrato pode ser reproduzido por:\n\n```{r, echo=TRUE, label = \"fig-figInibS\", fig.cap = \"Comportamento cinético de uma enzima inibida por excesso de substrato.\"}\n\n# Inibição por excesso de S\n\nS <- seq(0, 10, 0.1)\nv_alos <- function(S, Vm = 10, Km = 0.5, Ks = 2) {\n  Vm * S / (S * (1 + S / Ks) + Km)\n}\ncurve(v_alos, xlim = c(0, 10), xlab = \"S\", ylab = \"v\")\n```\n\n|       Percebe-se pela @fig-figInibS que a atividade da enzima alcança um limite sendo reduzida com o aumento do teor de substrato.\n\n### Modelos de inibição enzimática\n\n|   Assumindo-se a relação simplificada abaixo:\n\n\n```{=tex}\n\\begin{equation}\nE+S \\begin{array}{c}\n_{k1}\\\\\n \\rightleftharpoons\\\\\n^{k2} \\end{array} ES \n\\begin{array}{c}\n_{k3}\\\\\n\\rightarrow \\\\\n  ^{}\\end{array}E+P\n (\\#eq:diagMM)\n\\end{equation}\n```\n\n\n|       A inibição de enzimas por moléculas que não o próprio substrato pode ser representada por um diagrama no qual o efetor altera um dos elementos representados na equação acima, tal como segue.\n\n\\\n```{r, label = \"inibDiag\", echo=FALSE, out.width=\"60%\", fig.cap=\"Diagrama representativo dos tipos de inibição enzimática. kcat: constante catalítica; Ki: constante de equilíbrio de dissociação do inibidor, com índices para inibição competitiva (Ki), incompetitiva (Kiu) e não competitiva (Kic e Kiu).\"}\nknitr::include_graphics(\"figures/inibDiag.png\")\n```\n\n|       Nesse caso, pode-se definir os três tipos principais de inibição enzimática reversível como *inibição competitiva, incompetitiva e não competitiva (pura ou mista)*. Em síntese, a *inibição competitiva* dá-se quando o inibidor complexa-se ao sítio ativo da enzima; a *inibição incompetitiva*, quando o inibidor interage com o complexo enzima-substrato; e a *inibição não competitiva*, quando o inibidor liga-se em outro local que não o sítio ativo da enzima, podendo ainda ser *pura* (Kiu = Kic) ou *mista* (Kiu > ou < Kic).\n|       Um modelo matemático que abrange esses três tipos de inibição enzimática é descrito na equação abaixo:\n\n$$\nv=\\frac{Vm*S}{Km(1+\\frac{I}{Kic})+S(1+\\frac{I}{Kiu})}\n$$ {#eq-inibAll}\n\n|       Dessa forma, a @eq-inibAll reduz-se em seus termos multiplicadores no denominador, em função do tipo de inibição enzimática presente, até o modelo primitivo de Michaelis-Mentem, quando na ausência do inibidor.\n|      \n\n#### Curva de Michaelis-Mentem para modelos de inibição enzimática \n\n|       Podemos simular no `R` as cuvas michaelianas para modelos clássicos de inibição, considerando valores para as constantes de equilíbrio de dissociação dos inibidores como Kic = 0.2, e Kiu = 1, como no trecho de código abaixo. \n\n```{r, echo=TRUE, label = \"fig-inibMM\", fig.cap=\"Curva de Michaelis-Mentem na presença de inibidores de comportamento clássico.\"}\n\n# Inibição clássica & Michaelis-Mentem\n\npar(mfrow = c(2, 2)) # divide a área de plotagem\nS <- seq(0, 10, 0.1) # geração de teores de S\ncontr <- function(S, Vm = 10, Km = 0.5) {\n  Vm * S / (Km + S)\n} # função de MM, sem inibição\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Competitiva\")\n # cuva controle; veja que o título tem que ser adicionado para o 1a. de par\n # de curvas, controle e inibição\n\n# Modelos de inibição:\n\n# Competitiva\ncomp.i <- function(S, Vm = 10, Km = 0.5, I = 2, Kic = 0.2) {\n  Vm * S / (Km * (1 + I / Kic) + S)\n}\ncurve(comp.i, add = TRUE, col = \"red\", lty = 2) # competitiva\n\n# Não competitiva pura\npura.i <- function(S, Vm = 10, Km = 0.5, I = 2, Ki = 1) {\n  Vm * S / (Km * (1 + I / Ki) + S * (1 + I / Ki))\n}\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Não Compet. Pura\")\ncurve(pura.i, add = TRUE, col = \"red\", lty = 2) # não competitiva pura (Kiu=Kic=Ki)\n\n# Não competitiva mista\nmista.i <- function(S, Vm = 10, Km = 0.5, I = 2, Kic = 0.2, Kiu = 1) {\n  Vm * S / (Km * (1 + I / Kic) + S * (1 + I / Kiu))\n}\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Não Compet. Mista\")\ncurve(mista.i, add = TRUE, col = \"red\", lty = 2) # não competitiva mista\n\n# Incompetitiva\nincomp.i <- function(S, Vm = 10, Km = 0.5, I = 2, Kiu = 1) {\n  Vm * S / (Km + S * (1 + I / Kiu))\n}\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Incompetitiva\")\ncurve(incomp.i, add = TRUE, col = \"red\", lty = 2) # incompetitiva\nlayout(1) # retorna à janela gráfica original\n```\n\n|       Perceba que para o *modelo competitivo* a velocidade limite *Vm* da reação tende a ser alcançada, já que a ocupação do sítio ativo da enzima é mutualmente exclusiva entre substrato e inibidor, privilegiando o primeiro quando em alto teor. Por outro lado, o valor de *Vm* não é tangível para os demais modelos de inibição, já que o inibidor se liga em outro sítio na enzima (*não competitivo*) ou ao próprio substrato (*incompetitivo*). Para visualizar alterações nos gráficos, experimente modificar os parâmetros da simulação (Vm, Km, Ki, Kic, Kiu, I).\n|       Ainda que seja possível um discernimento do modelo competitivo dos demais, perceba também que isso só foi possível por uma simulação que empregou um teor *S* 20 vezes maior que o valor de *Km* da reação. Isso nem sempre é possível na prática, como elencado abaixo, já que o emprego de altos teores de *S*:\n\n1. Agrega maior custo financeiro ao ensaio.\n2. Pode resultar em inibição por excesso de substrato.\n3. Pode elevar a viscosidade do meio, reduzindo a taxa catalítica.\n\n|       Percebe-se, da @fig-inibMM e das observações acima, a dificuldade em classificar o tipo de inibição enzimática baseado na observação direta de uma curva de Michaelis-Mentem. \n\n\n#### Diagnóstico de modelos de inibição enzimática por Lineweaver-Burk\n\n|       As transformações lineares da equação de Michaelis-Mentem são muito úteis no diagnóstico visual de modelos de inibição. Nesse sentido, o emprego da linearização por duplos-recíprocos para esses modelos resutará nas equações de inibição que seguem:\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km(1+\\frac{I}{Kic})}{Vm}*\\frac{1}{S} \\quad ;\\,  competitivo\n$$ {#eq-eqComp}\n\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km(1+\\frac{I}{Ki})}{Vm}*\\frac{1}{S(1+\\frac{I}{Ki})} \\quad ;\\,  puro\n$$ {#eq-eqPuro}\n\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km(1+\\frac{I}{Kic})}{Vm}*\\frac{1}{S(1+\\frac{I}{Kiu})} \\quad ;\\,  misto\n$$ {#eq-eqMisto}\n\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km}{Vm}*\\frac{1}{S(1+\\frac{I}{Kiu})} \\quad ;\\,  incompetitivo\n$$ {#eq-eqIncomp}\n\n\n\n|       Observe que os termos multiplicadores inseridos em *S* e *Km* na equação de duplo-recíproco apenas alteram seu formalismo apresentado na equação de Lineweaver-Burk do capítulo anterior. Dessa forma, os modelos de inibição enzimática podem ser ilustrados pelo `R` junto à transformação de Lineweaver-Burk (ou qualquer outra), como abaixo.\n\n```{r, echo=TRUE, label = \"inibLB\", warning=FALSE, fig.cap=\"Diagnóstico de modelos de inibição enzimática por Lineweaver-Burk.\"}\n# Diagnóstico de inibição por Lineweaver-Burk\n\n\n# Substrato e Inibidor\nS <- seq(0.1, 10, length = 10) # cria um vetor para substrato\nI <- 2 # concentração de inibidor\n\n# Parâmetros cinéticos:\nKm <- 0.5\nVm <- 10\nKic <- 0.2\nKi <- 0.2\nKiu <- 1\n\n# Equações\nv <- Vm * S / (Km + S) # equação de MM\nv.comp <- Vm * S / (Km * (1 + I / Kic) + S) # competitivo\nv.puro <- Vm * S / (Km * (1 + I / Ki) + S * (1 + I / Ki)) \n # não competitivo puro\nv.misto <- Vm * S / (Km * (1 + I / Kic) + S * (1 + I / Kiu)) \n # não competitivo misto\nv.incomp <- Vm * S / (Km + S * (1 + I / Kiu))\n\n# Gráficos\npar(mfrow = c(2, 2)) # área de plot pra 4 gráficos\n\nplot(1 / S, 1 / v, type = \"l\", main = \"Competitivo\", ylim = c(0, 2))\npoints(1 / S, 1 / v.comp, type = \"l\", col = \"red\")\nplot(1 / S, 1 / v, type = \"l\", main = \"Puro\", ylim = c(0, 5))\npoints(1 / S, 1 / v.puro, type = \"l\", col = \"red\")\nplot(1 / S, 1 / v, type = \"l\", main = \"Misto\", ylim = c(0, 2))\npoints(1 / S, 1 / v.misto, type = \"l\", col = \"red\")\nplot(1 / S, 1 / v, type = \"l\", main = \"Incompetitivo\", ylim = c(0, 1))\npoints(1 / S, 1 / v.incomp, type = \"l\", col = \"red\")\n\nlayout(1) # volta à janela gráfica normal\n```\n\n|       Agora a distinção de modelos de inibição se torna mais evidente pela linearização. Assim como mencionado para os modelos representados na equação direta de Michaelis-Mentem, pode-se variar os parâmetros cinéticos e experimentar a visualização dos duplos-recíprocos.\n|       Novamente, ainda que a linearização permita um melhor diagnóstico do tipo de inibição presente, o ajuste não linear é mais adequado para a determinação das constantes de inibição (*Ki'*s), uma vez que não agrega os erros advindos das transformações lineares (embora a inserção de pesos estatísticos possa aliviar a imprecisão dos resultados).\n\n#### Ki & IC$_{50}$\n\n|       A concentração inibitória a 50\\% do teor de inibidor, definida como *IC$_{50}$*, pode ser determinada empiricamente sem o conhecimento dos parâmetros de catálise enzimática envolvidos. Para isso, basta se obter um valor de inibição relativa num ensaio a concentração fixa de *S*, variando-se o teor de inibidor. De fato, análogos ao *IC$_{50}$* existem em ampla gama nas Ciências Naturais, não envolvendo necessariamente qualquer informação cinética ou termodinâmica dos compostos envolvidos, mas tão somente a informação empírica do resultado. Exemplificando, os parâmetros *DE$_{50}$* (dose efetiva) ou *DL$_{50}$* (dose letal), e mesmo projeções de *X$_{50}$*, tal como *Tm* (temperatura de desnaturação a 50%), e o valor de *pKa* em tampões (pH em que as espécies encontram-se 50% ionizadas/protonadas em solução).\n|   No entanto, existe uma relação útil entre a constante de equilíbrio de dissociação do inibidor *Ki* e o valor de *IC$_{50}$* que permite sua permuta, desde que conhecido o modelo de inibição [@yung1973relationship]. Generalizando para os modelos de inibição, pode-se definir uma equação geral pra  relação de Cheng-Prusoff como:\n\n$$\nIC_{50} = \\frac{(1+\\frac{S}{Km})}{(\\frac{1}{Kic})+(\\frac{1}{Km*Kiu})}\n$$ {#eq-eqCPrusso}\n\n|       Exemplificando, para um *modelo competitivo* de inibição, onde *Kiu* é nulo:\n\n$$\nIC_{50} = Kic(1+\\frac{S}{Km})\n$$ {#eq-eqPrusfComp}\n\n|    Como acima mencionado, o valor de *IC$_{50}$* pode ser obtido a partir de dados experimentais de inibição relativa (*v/Vm*, por ex) em diferentes concentrações de inibidor fixando um valor de *S*. Nesse caso, podemos ilustrar no `R` a obtenção de *IC$_{50}$*, utilizando-se um ajuste não linear para a equação de quatro parâmetros que segue (*curva de Rodbard*, @delean1978simultaneous).\n\n$$\nativ. residual \\, \\% =\\frac{v}{Vm} = inf+\\frac{sup-inf}{1+log(\\frac{I}{IC_{50}})^{nH}})\n$$ {#eq:eqRodb}\n\n\n\n```{r,echo=TRUE}\n# Ajuste não-linear para curva de IC50\n\nlogI.nM <- c(5.5, 5.2, 4.9, 4.6, 4.3, 3.7, 3.3, 3, 2.8) \n# conc. de I, em unidade log10\nativ.res <- c(0.02, 0.07, 0.12, 0.22, 0.36, 0.53, 0.67, 0.83, 0.85) \n# ativ. residual, v/Vm\ndados <- data.frame(logI.nM, ativ.res) # criação do dataframe\nplot(ativ.res ~ logI.nM, dados) # plot dos dados\nic50.fit <- nls(formula(ativ.res ~ inf + (sup - inf) /\n                          (1 + (logI.nM / logIC50)^nH)), \n                algorithm = \"port\", data = dados, \n                start = list(inf = 0, sup = 0.80, logIC50 = 4, nH = 10), \n                lower = c(inf = -Inf, sup = -Inf, \n                          logIC50 = 0, nH = -Inf)) # ajuste não linear\nsummary(ic50.fit) # sumário do ajuste\nlines(logI.nM, fitted(ic50.fit), col = \"blue\") # linha ajustada\n\n# E para extrair o valor de IC50...\nIC50 <- 10^(coef(ic50.fit)[3]) # extração do 3o. parâmetro da tabela \n # de ajuste, isto é: logIC50:\nIC50\n```\n\n|       Perceba que o parâmetro de *logIC50* foi extraído da tabela de ajuste não linear pelo comando `coef`. Isto é muito útil quando desejamos utilizar um coeficiente obtido em cálculos automáticos (programáveis), como veremos mais adiante. Por ora, faz-se interessante apresentar o parâmetro de *IC50* obtido de forma mais elegante.\n|       Para isso, podemos utilizar duas funções do `R` para exprimir resultados quantitativos junto à caracteres (palavras, frases): `print()` e `cat`. O trecho de código abaixo ilustra esse *output*, e algumas diferenças.\n\n```{r, echo=TRUE}\ncat(\"Valor de IC50 (nM):\", IC50, \"\\n\")\nprint(paste(\"Valor de IC50 (nM):\", IC50))\n```\n\n|       Basicamente, `print` exibe aspas e indexa o nome da coluna, enquanto `cat` os omite. Em adição, pode-se perceber outra variação no formato de impressão entre os dois comandos pelo exemplo abaixo:\n\n```{r, echo =TRUE}\nprint(paste(\"teores:\", c(10, 25, 50)))\ncat(\"teores:\", c(10, 25, 50))\n```\n\n|       Outra possibilidade no `R` é a de se reduzir o número de casas decimais apresentados. Nesse caso, pode-se utilizar o comando `round`.\n\n```{r, echo=TRUE}\nIC50 <- 10^(coef(ic50.fit)[3])\nprint(paste(\"Valor de IC50 (nM):\", round(IC50, digits = 2))) \n# arredondamento para duas casas decimais\n```\n|       Mais uma vez, salienta-se a existência de alguns pacotes úteis do `R` para o cálculo de *IC50*, entre esse o pacote `drc` (*dose-response curve*).\n\n## Diagnóstico estatístico de inibição enzimática\n\n|       Em paralelo à inspeção visual dos gráficos de linearização para inibição enzimática, é possível validar-se um modelo sobre outro por uma análise de dispersão de erros dos modelos. Mas também é possível o emprego da função `BIC` ou da função `AIC` do `R`, e que respectivamente calculam valores para o *Critério de Informação Bayseiano* [@spiess2010evaluation] ou do *Critério de Informação de Akaike* [@akaike1974new]. Em comum esse parâmetros calculam um valor relativo de informação não computada por um modelo avaliado. O menor valor encontrado para ambos espelha a solução do melhor modelo de ajuste. \n|       Matematicamente, *BIC* e *AIC* podem ser expressos como:\n\n$$\nBIC = p*ln(n)-2*ln(RSE)\\\\\n\\\\\nAIC = n*ln(\\frac{RSE}{n})+2k+[\\frac{2k(k+1)}{n-k-1}])\\\\\n$$ {#eq-BICAIC}\n\n\nOnde *p* representa o no. de parâmetros do modelo, *n* o número total de pontos experimentais, *k* o fator *p+1*, e *RSE* o valor da soma dos quadrados dos resíduos (*residual sum squares*).\n\n|       Para exemplificar o uso desses parâmetros de qualidade do modelo estatístico, pode-se empregar um conjunto de dados contido no pacote `nlstools`, provendo o ajuste, plotagem, inspeção de resíduos, e aplicação de *BIC* e *AIC*:\n\n\n```{r, AIC}\n\n# Aplicação de critérios de informação para ajuste de curvas cinéticas\n\nlibrary(nlstools)\ncomp <- nls(compet_mich, vmkmki, list(Km = 1, Vmax = 20, Ki = 0.5)) \n# ajuste competitivo, com dados, equação e sementes fornecidas \n# pelo pacote nlstools\nplotfit(comp, variable = 1) # comando de plotagem do pacote\nsummary(comp)\nres_comp <- nlsResiduals(comp) # resíduos do ajuste\nplot(res_comp, which = 1) # plotagem de resíduos\n\nnoncomp <- nls(non_compet_mich, vmkmki, list(Km = 1, Vmax = 20, Ki = 0.5))\n# o mesmo que acima, mas para o modelo não competitivo\nplotfit(noncomp, variable = 1)\nsummary(noncomp)\nres_noncomp <- nlsResiduals(noncomp)\nplot(res_noncomp, which = 1)\n\nBIC(comp, noncomp) # Critério de informação de Baysean\nAIC(comp, noncomp) # Critério de informação de Akaike\n```\n\n|       Pode-se observar na comparação dos ajustes não lineares que o modelo não competitivo ajustou-se melhor que o modelo competitivo (valores menores para BIC e AIC)\n\n## Cinética de estado pré-estacionário\n\n|       Existem basicamente três tipos de comportamentos cinéticos para as enzimas: comportamento de *Henry-Michaelis-Mentem-Briggs-Haldane*, sucintamente denominado por *michaeliano* ou de *estado estacionário (steady-state)*, comportamento de *fase lag* (quando o substrato leva algum tempo para ser convertido em produto), e comportamento de *burst*, *transiente*, ou de *estado pré-estacionário* (quando uma fase com rápida liberação de produto precede o estado estacionário). Algumas enzimas trabalham seguindo a cinética de *burst*, entre as quais algumas nucleosidades e glicosidases, e dehalogenases [@johnson19921,@tang2003kinetic].\n|       A cinética de estado pré-estacionário segue um formalismo um pouco distinto, e que depende do quantitativo de etapas reacionais. Exemplificando abaixo para uma reação de 3 etapas [@johnson19921]:\n\n$$\nE+S \\begin{array}{c}\n_{k1}\\\\\n \\rightleftharpoons\\\\\n^{km1} \\end{array} \nE*S\n\\begin{array}{c}\n_{k2}\\\\\n \\rightleftharpoons\\\\\n^{km2} \\end{array} \nE*P \n\\begin{array}{c}\n_{k3}\\\\\n\\rightarrow \\\\\n  ^{}\\end{array}\nE+P\n$$ {#eq-burst}\n\n|       Nesse caso, as equações derivadas das observações experimentais, e que conduzem à determinação das constantes de velocidade são:\n\n$$\nkobs=k2+km2+k3\n$$ {#eq-burstKobs1}\n\n$$\nAo=\\frac{k2*(k2+km2)}{kobs^2}\n$$ {#eq-burstKobs2}\n\n$$\nkcat=\\frac{k2*k3}{kobs}\n$$ {#eq-burstKobs3}\n\n\nOnde *kobs* e *Ao* representam parâmetros experimentais de constante de velocidade observada e amplitude, respectivamente. Esses parâmetros podem ser obtidos a partir do ajuste não linear da equação abaixo aos dados experimentais:\n\n\n$$\nP=Ao(1-e^ {-kobs} + kcat * t)\n$$ {#eq-burstP}\n\n\n|       O trecho de código que segue simula uma curva de comportamento pré-estacionário, quando conhecidas as constantes de velocidade que determinam os parâmetros experimentais. \n\n```{r, echo=TRUE, label = \"fig-figBurst\", fig.cap=\"Formação de produto num modelo cinético de estado pré-estacionário.\"}\n\n# Curva de MM em enzima de comportamento pré-estacionário\n\n# Parâmetros\nk2 <- 387\nkm2 <- 3\nk3 <- 22\nxmin <- 0\nxmax <- 0.075 # definição de limites para função\n\n# Variáveis da equação de simulação (função dos parâmetros)\nkobs <- k2 + km2 + k3\nAo <- k2 * (k2 + km2) / kobs^2\nkcat <- k2 * k3 / kobs\n\n# Definição da função de simulação\nsim <- function(x, kobs, Ao, kcat) {\n  Ao * (1 - exp(-kobs * x)) + kcat * x\n}\n\n# Curval de simulação\ncurve(sim(x, kobs = kobs, Ao = Ao, kcat = kcat),\n  col = \"blue\",\n  type = \"o\", xlim = c(xmin, xmax), cex = 0.5,\n  xlab = \"tempo\", ylab = \"[P]\"\n)\n```\n\n|       Note pela @fig-figBurst que na cinética de estado transiente, existe uma fase pré-estacionária inicial eleva o teor de produto *P* rapidamente, e que antecede a fase estacionária de liberação constante de *P*.\n\n|       Por outro lado, por vezes é necessário o oposto, ou seja, determinar as constantes de velocidade a partir do conhecimento dos parâmetros experimentais *kobs* e *Ao*. Nesse caso (e em tantos outros transdisciplinares) o `R` possui funções de minimização que permitem encontrar a raíz de equações lineares ou não lineares.\n|       O procedimento envolve minimizar iterativamente um vetor de equações dadas as sementes para cada parâmetro. Para tal busca-se obter *f(x) = 0* pela diferença entre um valor de referência; ou seja, quando a solução encontrar *x* quando *f(x)-y = 0*. Exemplificando, supondo que f(x) seja *a+b/x*, e que y seja 3. Então a busca se dá no sentido de encontrar *a* e *b* em *a+b/x-3*.\n|       Para a determinação das constantes de velocidade representadas na cinética transiente, vale mencionar a função `optim` em `stats` ou o pacote `rootSolve`, que buscam minimizar equações lineares e não lineares para encontrar os valores de seus parâmetros. \n|       Na solução dos parâmetros para estado pré-estacionário, ilustra-se abaixo o emprego do `R` com `rootSolve`, adicionando ainda a busca para *Km* como segue.\n\n$$\nKm = \\frac{k3}{k2+k3} \n$$ {#eq:burstKm}\n\n\n```{r, echo=TRUE}\n# Cálculo de constantes cinéticas por solução de sistema de equações\n# não lineares aplicadas à cinética de burst.\n\nlibrary(rootSolve)\nkobs <- 0.06\nAo <- 50\nkcat <- 300\nKs <- 15\n# define os parâmetros de ajuste não linear obtidos por curva progressiva\n# experimental, t x P;\n# Obs: Ks obtido experimentalmente de curva de S x kobs\n\n# Parâmetros\n# x[1]=k2\n# x[2]= k3\n# x[3] = Km\n\n# Modelo\nmodel <- function(x) c(x[1] / kobs^2 - Ao, (x[1] * x[2]) / kobs - kcat, \n                       Ks * x[2] / (x[1] + x[2]) - x[3])\n# o modelo acima deve conter uma lista de equações cuja igualdade é zero,\n# ou seja, f(x)=0\n(ss <- multiroot(model, c(1, 1, 1))) # comando de execução do rootSolve\n# (sementes pro algoritmo)\n```\n\n|       Os resultados da minimização podem ser interpretados como:\n\n1. *root* = valores de xi pra f(xi)=0 ; ou seja, *k2, k3, e Km*;\n2. *f.root* = valor de cada função pra cada xi (deve ser próximo de zero para cada);\n3. *iter* = no. iterações ;\n4. *esti.precis* = estimativa da precisão.\n\n\n|       A contemplar um capítulo ainda que extenso sobre cinética enzimática, existem inúmeros tópicos deixados de lado, dado o foco principal do emprego do `R` na solução de problemas quantitativos em biofísico-química. Dessa forma, omitimos diversos conceitos, tais como *cinética lenta de interação de substrato (slow binding), cinética de múltiplos substratos (reação sequencial e ping-pong), equação integrada de Michaelis-Menten e curvas progressivas, ativação de moduladores, influência de pH e temperatura na catálise, e enzimas multisítios*, entre vários. \n\n```{r eval=FALSE, include=FALSE}\n# cinética por eq. diferencial ordinária\n# análise cinética completa com loop, plots, diagnóstico\n```\n\n\n","srcMarkdownNoYaml":"\n\n## Tipos de inibição\n\n|       Capítulo vasto na enzimologia e com aplicação direta em Química, Farmacologia, Biotecnologia, Biomedicina e áreas afins, a inibição enzimática encontra-se no âmago dos fármacos, medicamentos e biosensores. Sob um ponto de vista simplificado, a atividade enzimática pode ser reduzida na presença de vários efetores, entre moléculas endógenas ou exógenas do metabolismo celular, incluindo o próprio substrato. Genericamente a *inibição enzimática* classifica-se como *irreversível* quando a ativide decai pela ligação covalente de um inibidor, ou *reversível*, quando há um equilíbrio de associação/dissociação com a macromolécula. A seguir serão ilustradas inibições reversíveis.\n\n### Inibição pelo substrato\n\n|       Uma inibição enzimática comum ao metabolismo é a protagonizada pelo próprio substrato em excesso no meio, sendo definida por:\n\n$$\nv=\\frac{Vm*S}{S(1+\\frac{S}{Ks})+Km}\n$$ {#eq-eqInibS}\n\n\n|       Dessa forma, o gráfico resultante de uma inibição por excesso de substrato pode ser reproduzido por:\n\n```{r, echo=TRUE, label = \"fig-figInibS\", fig.cap = \"Comportamento cinético de uma enzima inibida por excesso de substrato.\"}\n\n# Inibição por excesso de S\n\nS <- seq(0, 10, 0.1)\nv_alos <- function(S, Vm = 10, Km = 0.5, Ks = 2) {\n  Vm * S / (S * (1 + S / Ks) + Km)\n}\ncurve(v_alos, xlim = c(0, 10), xlab = \"S\", ylab = \"v\")\n```\n\n|       Percebe-se pela @fig-figInibS que a atividade da enzima alcança um limite sendo reduzida com o aumento do teor de substrato.\n\n### Modelos de inibição enzimática\n\n|   Assumindo-se a relação simplificada abaixo:\n\n\n```{=tex}\n\\begin{equation}\nE+S \\begin{array}{c}\n_{k1}\\\\\n \\rightleftharpoons\\\\\n^{k2} \\end{array} ES \n\\begin{array}{c}\n_{k3}\\\\\n\\rightarrow \\\\\n  ^{}\\end{array}E+P\n (\\#eq:diagMM)\n\\end{equation}\n```\n\n\n|       A inibição de enzimas por moléculas que não o próprio substrato pode ser representada por um diagrama no qual o efetor altera um dos elementos representados na equação acima, tal como segue.\n\n\\\n```{r, label = \"inibDiag\", echo=FALSE, out.width=\"60%\", fig.cap=\"Diagrama representativo dos tipos de inibição enzimática. kcat: constante catalítica; Ki: constante de equilíbrio de dissociação do inibidor, com índices para inibição competitiva (Ki), incompetitiva (Kiu) e não competitiva (Kic e Kiu).\"}\nknitr::include_graphics(\"figures/inibDiag.png\")\n```\n\n|       Nesse caso, pode-se definir os três tipos principais de inibição enzimática reversível como *inibição competitiva, incompetitiva e não competitiva (pura ou mista)*. Em síntese, a *inibição competitiva* dá-se quando o inibidor complexa-se ao sítio ativo da enzima; a *inibição incompetitiva*, quando o inibidor interage com o complexo enzima-substrato; e a *inibição não competitiva*, quando o inibidor liga-se em outro local que não o sítio ativo da enzima, podendo ainda ser *pura* (Kiu = Kic) ou *mista* (Kiu > ou < Kic).\n|       Um modelo matemático que abrange esses três tipos de inibição enzimática é descrito na equação abaixo:\n\n$$\nv=\\frac{Vm*S}{Km(1+\\frac{I}{Kic})+S(1+\\frac{I}{Kiu})}\n$$ {#eq-inibAll}\n\n|       Dessa forma, a @eq-inibAll reduz-se em seus termos multiplicadores no denominador, em função do tipo de inibição enzimática presente, até o modelo primitivo de Michaelis-Mentem, quando na ausência do inibidor.\n|      \n\n#### Curva de Michaelis-Mentem para modelos de inibição enzimática \n\n|       Podemos simular no `R` as cuvas michaelianas para modelos clássicos de inibição, considerando valores para as constantes de equilíbrio de dissociação dos inibidores como Kic = 0.2, e Kiu = 1, como no trecho de código abaixo. \n\n```{r, echo=TRUE, label = \"fig-inibMM\", fig.cap=\"Curva de Michaelis-Mentem na presença de inibidores de comportamento clássico.\"}\n\n# Inibição clássica & Michaelis-Mentem\n\npar(mfrow = c(2, 2)) # divide a área de plotagem\nS <- seq(0, 10, 0.1) # geração de teores de S\ncontr <- function(S, Vm = 10, Km = 0.5) {\n  Vm * S / (Km + S)\n} # função de MM, sem inibição\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Competitiva\")\n # cuva controle; veja que o título tem que ser adicionado para o 1a. de par\n # de curvas, controle e inibição\n\n# Modelos de inibição:\n\n# Competitiva\ncomp.i <- function(S, Vm = 10, Km = 0.5, I = 2, Kic = 0.2) {\n  Vm * S / (Km * (1 + I / Kic) + S)\n}\ncurve(comp.i, add = TRUE, col = \"red\", lty = 2) # competitiva\n\n# Não competitiva pura\npura.i <- function(S, Vm = 10, Km = 0.5, I = 2, Ki = 1) {\n  Vm * S / (Km * (1 + I / Ki) + S * (1 + I / Ki))\n}\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Não Compet. Pura\")\ncurve(pura.i, add = TRUE, col = \"red\", lty = 2) # não competitiva pura (Kiu=Kic=Ki)\n\n# Não competitiva mista\nmista.i <- function(S, Vm = 10, Km = 0.5, I = 2, Kic = 0.2, Kiu = 1) {\n  Vm * S / (Km * (1 + I / Kic) + S * (1 + I / Kiu))\n}\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Não Compet. Mista\")\ncurve(mista.i, add = TRUE, col = \"red\", lty = 2) # não competitiva mista\n\n# Incompetitiva\nincomp.i <- function(S, Vm = 10, Km = 0.5, I = 2, Kiu = 1) {\n  Vm * S / (Km + S * (1 + I / Kiu))\n}\ncurve(contr, xlim = c(0, 10), xlab = \"S\", ylab = \"v\", main = \"Incompetitiva\")\ncurve(incomp.i, add = TRUE, col = \"red\", lty = 2) # incompetitiva\nlayout(1) # retorna à janela gráfica original\n```\n\n|       Perceba que para o *modelo competitivo* a velocidade limite *Vm* da reação tende a ser alcançada, já que a ocupação do sítio ativo da enzima é mutualmente exclusiva entre substrato e inibidor, privilegiando o primeiro quando em alto teor. Por outro lado, o valor de *Vm* não é tangível para os demais modelos de inibição, já que o inibidor se liga em outro sítio na enzima (*não competitivo*) ou ao próprio substrato (*incompetitivo*). Para visualizar alterações nos gráficos, experimente modificar os parâmetros da simulação (Vm, Km, Ki, Kic, Kiu, I).\n|       Ainda que seja possível um discernimento do modelo competitivo dos demais, perceba também que isso só foi possível por uma simulação que empregou um teor *S* 20 vezes maior que o valor de *Km* da reação. Isso nem sempre é possível na prática, como elencado abaixo, já que o emprego de altos teores de *S*:\n\n1. Agrega maior custo financeiro ao ensaio.\n2. Pode resultar em inibição por excesso de substrato.\n3. Pode elevar a viscosidade do meio, reduzindo a taxa catalítica.\n\n|       Percebe-se, da @fig-inibMM e das observações acima, a dificuldade em classificar o tipo de inibição enzimática baseado na observação direta de uma curva de Michaelis-Mentem. \n\n\n#### Diagnóstico de modelos de inibição enzimática por Lineweaver-Burk\n\n|       As transformações lineares da equação de Michaelis-Mentem são muito úteis no diagnóstico visual de modelos de inibição. Nesse sentido, o emprego da linearização por duplos-recíprocos para esses modelos resutará nas equações de inibição que seguem:\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km(1+\\frac{I}{Kic})}{Vm}*\\frac{1}{S} \\quad ;\\,  competitivo\n$$ {#eq-eqComp}\n\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km(1+\\frac{I}{Ki})}{Vm}*\\frac{1}{S(1+\\frac{I}{Ki})} \\quad ;\\,  puro\n$$ {#eq-eqPuro}\n\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km(1+\\frac{I}{Kic})}{Vm}*\\frac{1}{S(1+\\frac{I}{Kiu})} \\quad ;\\,  misto\n$$ {#eq-eqMisto}\n\n\n$$\n\\frac{1}{v}=\\frac{1}{Vm}+\\frac{Km}{Vm}*\\frac{1}{S(1+\\frac{I}{Kiu})} \\quad ;\\,  incompetitivo\n$$ {#eq-eqIncomp}\n\n\n\n|       Observe que os termos multiplicadores inseridos em *S* e *Km* na equação de duplo-recíproco apenas alteram seu formalismo apresentado na equação de Lineweaver-Burk do capítulo anterior. Dessa forma, os modelos de inibição enzimática podem ser ilustrados pelo `R` junto à transformação de Lineweaver-Burk (ou qualquer outra), como abaixo.\n\n```{r, echo=TRUE, label = \"inibLB\", warning=FALSE, fig.cap=\"Diagnóstico de modelos de inibição enzimática por Lineweaver-Burk.\"}\n# Diagnóstico de inibição por Lineweaver-Burk\n\n\n# Substrato e Inibidor\nS <- seq(0.1, 10, length = 10) # cria um vetor para substrato\nI <- 2 # concentração de inibidor\n\n# Parâmetros cinéticos:\nKm <- 0.5\nVm <- 10\nKic <- 0.2\nKi <- 0.2\nKiu <- 1\n\n# Equações\nv <- Vm * S / (Km + S) # equação de MM\nv.comp <- Vm * S / (Km * (1 + I / Kic) + S) # competitivo\nv.puro <- Vm * S / (Km * (1 + I / Ki) + S * (1 + I / Ki)) \n # não competitivo puro\nv.misto <- Vm * S / (Km * (1 + I / Kic) + S * (1 + I / Kiu)) \n # não competitivo misto\nv.incomp <- Vm * S / (Km + S * (1 + I / Kiu))\n\n# Gráficos\npar(mfrow = c(2, 2)) # área de plot pra 4 gráficos\n\nplot(1 / S, 1 / v, type = \"l\", main = \"Competitivo\", ylim = c(0, 2))\npoints(1 / S, 1 / v.comp, type = \"l\", col = \"red\")\nplot(1 / S, 1 / v, type = \"l\", main = \"Puro\", ylim = c(0, 5))\npoints(1 / S, 1 / v.puro, type = \"l\", col = \"red\")\nplot(1 / S, 1 / v, type = \"l\", main = \"Misto\", ylim = c(0, 2))\npoints(1 / S, 1 / v.misto, type = \"l\", col = \"red\")\nplot(1 / S, 1 / v, type = \"l\", main = \"Incompetitivo\", ylim = c(0, 1))\npoints(1 / S, 1 / v.incomp, type = \"l\", col = \"red\")\n\nlayout(1) # volta à janela gráfica normal\n```\n\n|       Agora a distinção de modelos de inibição se torna mais evidente pela linearização. Assim como mencionado para os modelos representados na equação direta de Michaelis-Mentem, pode-se variar os parâmetros cinéticos e experimentar a visualização dos duplos-recíprocos.\n|       Novamente, ainda que a linearização permita um melhor diagnóstico do tipo de inibição presente, o ajuste não linear é mais adequado para a determinação das constantes de inibição (*Ki'*s), uma vez que não agrega os erros advindos das transformações lineares (embora a inserção de pesos estatísticos possa aliviar a imprecisão dos resultados).\n\n#### Ki & IC$_{50}$\n\n|       A concentração inibitória a 50\\% do teor de inibidor, definida como *IC$_{50}$*, pode ser determinada empiricamente sem o conhecimento dos parâmetros de catálise enzimática envolvidos. Para isso, basta se obter um valor de inibição relativa num ensaio a concentração fixa de *S*, variando-se o teor de inibidor. De fato, análogos ao *IC$_{50}$* existem em ampla gama nas Ciências Naturais, não envolvendo necessariamente qualquer informação cinética ou termodinâmica dos compostos envolvidos, mas tão somente a informação empírica do resultado. Exemplificando, os parâmetros *DE$_{50}$* (dose efetiva) ou *DL$_{50}$* (dose letal), e mesmo projeções de *X$_{50}$*, tal como *Tm* (temperatura de desnaturação a 50%), e o valor de *pKa* em tampões (pH em que as espécies encontram-se 50% ionizadas/protonadas em solução).\n|   No entanto, existe uma relação útil entre a constante de equilíbrio de dissociação do inibidor *Ki* e o valor de *IC$_{50}$* que permite sua permuta, desde que conhecido o modelo de inibição [@yung1973relationship]. Generalizando para os modelos de inibição, pode-se definir uma equação geral pra  relação de Cheng-Prusoff como:\n\n$$\nIC_{50} = \\frac{(1+\\frac{S}{Km})}{(\\frac{1}{Kic})+(\\frac{1}{Km*Kiu})}\n$$ {#eq-eqCPrusso}\n\n|       Exemplificando, para um *modelo competitivo* de inibição, onde *Kiu* é nulo:\n\n$$\nIC_{50} = Kic(1+\\frac{S}{Km})\n$$ {#eq-eqPrusfComp}\n\n|    Como acima mencionado, o valor de *IC$_{50}$* pode ser obtido a partir de dados experimentais de inibição relativa (*v/Vm*, por ex) em diferentes concentrações de inibidor fixando um valor de *S*. Nesse caso, podemos ilustrar no `R` a obtenção de *IC$_{50}$*, utilizando-se um ajuste não linear para a equação de quatro parâmetros que segue (*curva de Rodbard*, @delean1978simultaneous).\n\n$$\nativ. residual \\, \\% =\\frac{v}{Vm} = inf+\\frac{sup-inf}{1+log(\\frac{I}{IC_{50}})^{nH}})\n$$ {#eq:eqRodb}\n\n\n\n```{r,echo=TRUE}\n# Ajuste não-linear para curva de IC50\n\nlogI.nM <- c(5.5, 5.2, 4.9, 4.6, 4.3, 3.7, 3.3, 3, 2.8) \n# conc. de I, em unidade log10\nativ.res <- c(0.02, 0.07, 0.12, 0.22, 0.36, 0.53, 0.67, 0.83, 0.85) \n# ativ. residual, v/Vm\ndados <- data.frame(logI.nM, ativ.res) # criação do dataframe\nplot(ativ.res ~ logI.nM, dados) # plot dos dados\nic50.fit <- nls(formula(ativ.res ~ inf + (sup - inf) /\n                          (1 + (logI.nM / logIC50)^nH)), \n                algorithm = \"port\", data = dados, \n                start = list(inf = 0, sup = 0.80, logIC50 = 4, nH = 10), \n                lower = c(inf = -Inf, sup = -Inf, \n                          logIC50 = 0, nH = -Inf)) # ajuste não linear\nsummary(ic50.fit) # sumário do ajuste\nlines(logI.nM, fitted(ic50.fit), col = \"blue\") # linha ajustada\n\n# E para extrair o valor de IC50...\nIC50 <- 10^(coef(ic50.fit)[3]) # extração do 3o. parâmetro da tabela \n # de ajuste, isto é: logIC50:\nIC50\n```\n\n|       Perceba que o parâmetro de *logIC50* foi extraído da tabela de ajuste não linear pelo comando `coef`. Isto é muito útil quando desejamos utilizar um coeficiente obtido em cálculos automáticos (programáveis), como veremos mais adiante. Por ora, faz-se interessante apresentar o parâmetro de *IC50* obtido de forma mais elegante.\n|       Para isso, podemos utilizar duas funções do `R` para exprimir resultados quantitativos junto à caracteres (palavras, frases): `print()` e `cat`. O trecho de código abaixo ilustra esse *output*, e algumas diferenças.\n\n```{r, echo=TRUE}\ncat(\"Valor de IC50 (nM):\", IC50, \"\\n\")\nprint(paste(\"Valor de IC50 (nM):\", IC50))\n```\n\n|       Basicamente, `print` exibe aspas e indexa o nome da coluna, enquanto `cat` os omite. Em adição, pode-se perceber outra variação no formato de impressão entre os dois comandos pelo exemplo abaixo:\n\n```{r, echo =TRUE}\nprint(paste(\"teores:\", c(10, 25, 50)))\ncat(\"teores:\", c(10, 25, 50))\n```\n\n|       Outra possibilidade no `R` é a de se reduzir o número de casas decimais apresentados. Nesse caso, pode-se utilizar o comando `round`.\n\n```{r, echo=TRUE}\nIC50 <- 10^(coef(ic50.fit)[3])\nprint(paste(\"Valor de IC50 (nM):\", round(IC50, digits = 2))) \n# arredondamento para duas casas decimais\n```\n|       Mais uma vez, salienta-se a existência de alguns pacotes úteis do `R` para o cálculo de *IC50*, entre esse o pacote `drc` (*dose-response curve*).\n\n## Diagnóstico estatístico de inibição enzimática\n\n|       Em paralelo à inspeção visual dos gráficos de linearização para inibição enzimática, é possível validar-se um modelo sobre outro por uma análise de dispersão de erros dos modelos. Mas também é possível o emprego da função `BIC` ou da função `AIC` do `R`, e que respectivamente calculam valores para o *Critério de Informação Bayseiano* [@spiess2010evaluation] ou do *Critério de Informação de Akaike* [@akaike1974new]. Em comum esse parâmetros calculam um valor relativo de informação não computada por um modelo avaliado. O menor valor encontrado para ambos espelha a solução do melhor modelo de ajuste. \n|       Matematicamente, *BIC* e *AIC* podem ser expressos como:\n\n$$\nBIC = p*ln(n)-2*ln(RSE)\\\\\n\\\\\nAIC = n*ln(\\frac{RSE}{n})+2k+[\\frac{2k(k+1)}{n-k-1}])\\\\\n$$ {#eq-BICAIC}\n\n\nOnde *p* representa o no. de parâmetros do modelo, *n* o número total de pontos experimentais, *k* o fator *p+1*, e *RSE* o valor da soma dos quadrados dos resíduos (*residual sum squares*).\n\n|       Para exemplificar o uso desses parâmetros de qualidade do modelo estatístico, pode-se empregar um conjunto de dados contido no pacote `nlstools`, provendo o ajuste, plotagem, inspeção de resíduos, e aplicação de *BIC* e *AIC*:\n\n\n```{r, AIC}\n\n# Aplicação de critérios de informação para ajuste de curvas cinéticas\n\nlibrary(nlstools)\ncomp <- nls(compet_mich, vmkmki, list(Km = 1, Vmax = 20, Ki = 0.5)) \n# ajuste competitivo, com dados, equação e sementes fornecidas \n# pelo pacote nlstools\nplotfit(comp, variable = 1) # comando de plotagem do pacote\nsummary(comp)\nres_comp <- nlsResiduals(comp) # resíduos do ajuste\nplot(res_comp, which = 1) # plotagem de resíduos\n\nnoncomp <- nls(non_compet_mich, vmkmki, list(Km = 1, Vmax = 20, Ki = 0.5))\n# o mesmo que acima, mas para o modelo não competitivo\nplotfit(noncomp, variable = 1)\nsummary(noncomp)\nres_noncomp <- nlsResiduals(noncomp)\nplot(res_noncomp, which = 1)\n\nBIC(comp, noncomp) # Critério de informação de Baysean\nAIC(comp, noncomp) # Critério de informação de Akaike\n```\n\n|       Pode-se observar na comparação dos ajustes não lineares que o modelo não competitivo ajustou-se melhor que o modelo competitivo (valores menores para BIC e AIC)\n\n## Cinética de estado pré-estacionário\n\n|       Existem basicamente três tipos de comportamentos cinéticos para as enzimas: comportamento de *Henry-Michaelis-Mentem-Briggs-Haldane*, sucintamente denominado por *michaeliano* ou de *estado estacionário (steady-state)*, comportamento de *fase lag* (quando o substrato leva algum tempo para ser convertido em produto), e comportamento de *burst*, *transiente*, ou de *estado pré-estacionário* (quando uma fase com rápida liberação de produto precede o estado estacionário). Algumas enzimas trabalham seguindo a cinética de *burst*, entre as quais algumas nucleosidades e glicosidases, e dehalogenases [@johnson19921,@tang2003kinetic].\n|       A cinética de estado pré-estacionário segue um formalismo um pouco distinto, e que depende do quantitativo de etapas reacionais. Exemplificando abaixo para uma reação de 3 etapas [@johnson19921]:\n\n$$\nE+S \\begin{array}{c}\n_{k1}\\\\\n \\rightleftharpoons\\\\\n^{km1} \\end{array} \nE*S\n\\begin{array}{c}\n_{k2}\\\\\n \\rightleftharpoons\\\\\n^{km2} \\end{array} \nE*P \n\\begin{array}{c}\n_{k3}\\\\\n\\rightarrow \\\\\n  ^{}\\end{array}\nE+P\n$$ {#eq-burst}\n\n|       Nesse caso, as equações derivadas das observações experimentais, e que conduzem à determinação das constantes de velocidade são:\n\n$$\nkobs=k2+km2+k3\n$$ {#eq-burstKobs1}\n\n$$\nAo=\\frac{k2*(k2+km2)}{kobs^2}\n$$ {#eq-burstKobs2}\n\n$$\nkcat=\\frac{k2*k3}{kobs}\n$$ {#eq-burstKobs3}\n\n\nOnde *kobs* e *Ao* representam parâmetros experimentais de constante de velocidade observada e amplitude, respectivamente. Esses parâmetros podem ser obtidos a partir do ajuste não linear da equação abaixo aos dados experimentais:\n\n\n$$\nP=Ao(1-e^ {-kobs} + kcat * t)\n$$ {#eq-burstP}\n\n\n|       O trecho de código que segue simula uma curva de comportamento pré-estacionário, quando conhecidas as constantes de velocidade que determinam os parâmetros experimentais. \n\n```{r, echo=TRUE, label = \"fig-figBurst\", fig.cap=\"Formação de produto num modelo cinético de estado pré-estacionário.\"}\n\n# Curva de MM em enzima de comportamento pré-estacionário\n\n# Parâmetros\nk2 <- 387\nkm2 <- 3\nk3 <- 22\nxmin <- 0\nxmax <- 0.075 # definição de limites para função\n\n# Variáveis da equação de simulação (função dos parâmetros)\nkobs <- k2 + km2 + k3\nAo <- k2 * (k2 + km2) / kobs^2\nkcat <- k2 * k3 / kobs\n\n# Definição da função de simulação\nsim <- function(x, kobs, Ao, kcat) {\n  Ao * (1 - exp(-kobs * x)) + kcat * x\n}\n\n# Curval de simulação\ncurve(sim(x, kobs = kobs, Ao = Ao, kcat = kcat),\n  col = \"blue\",\n  type = \"o\", xlim = c(xmin, xmax), cex = 0.5,\n  xlab = \"tempo\", ylab = \"[P]\"\n)\n```\n\n|       Note pela @fig-figBurst que na cinética de estado transiente, existe uma fase pré-estacionária inicial eleva o teor de produto *P* rapidamente, e que antecede a fase estacionária de liberação constante de *P*.\n\n|       Por outro lado, por vezes é necessário o oposto, ou seja, determinar as constantes de velocidade a partir do conhecimento dos parâmetros experimentais *kobs* e *Ao*. Nesse caso (e em tantos outros transdisciplinares) o `R` possui funções de minimização que permitem encontrar a raíz de equações lineares ou não lineares.\n|       O procedimento envolve minimizar iterativamente um vetor de equações dadas as sementes para cada parâmetro. Para tal busca-se obter *f(x) = 0* pela diferença entre um valor de referência; ou seja, quando a solução encontrar *x* quando *f(x)-y = 0*. Exemplificando, supondo que f(x) seja *a+b/x*, e que y seja 3. Então a busca se dá no sentido de encontrar *a* e *b* em *a+b/x-3*.\n|       Para a determinação das constantes de velocidade representadas na cinética transiente, vale mencionar a função `optim` em `stats` ou o pacote `rootSolve`, que buscam minimizar equações lineares e não lineares para encontrar os valores de seus parâmetros. \n|       Na solução dos parâmetros para estado pré-estacionário, ilustra-se abaixo o emprego do `R` com `rootSolve`, adicionando ainda a busca para *Km* como segue.\n\n$$\nKm = \\frac{k3}{k2+k3} \n$$ {#eq:burstKm}\n\n\n```{r, echo=TRUE}\n# Cálculo de constantes cinéticas por solução de sistema de equações\n# não lineares aplicadas à cinética de burst.\n\nlibrary(rootSolve)\nkobs <- 0.06\nAo <- 50\nkcat <- 300\nKs <- 15\n# define os parâmetros de ajuste não linear obtidos por curva progressiva\n# experimental, t x P;\n# Obs: Ks obtido experimentalmente de curva de S x kobs\n\n# Parâmetros\n# x[1]=k2\n# x[2]= k3\n# x[3] = Km\n\n# Modelo\nmodel <- function(x) c(x[1] / kobs^2 - Ao, (x[1] * x[2]) / kobs - kcat, \n                       Ks * x[2] / (x[1] + x[2]) - x[3])\n# o modelo acima deve conter uma lista de equações cuja igualdade é zero,\n# ou seja, f(x)=0\n(ss <- multiroot(model, c(1, 1, 1))) # comando de execução do rootSolve\n# (sementes pro algoritmo)\n```\n\n|       Os resultados da minimização podem ser interpretados como:\n\n1. *root* = valores de xi pra f(xi)=0 ; ou seja, *k2, k3, e Km*;\n2. *f.root* = valor de cada função pra cada xi (deve ser próximo de zero para cada);\n3. *iter* = no. iterações ;\n4. *esti.precis* = estimativa da precisão.\n\n\n|       A contemplar um capítulo ainda que extenso sobre cinética enzimática, existem inúmeros tópicos deixados de lado, dado o foco principal do emprego do `R` na solução de problemas quantitativos em biofísico-química. Dessa forma, omitimos diversos conceitos, tais como *cinética lenta de interação de substrato (slow binding), cinética de múltiplos substratos (reação sequencial e ping-pong), equação integrada de Michaelis-Menten e curvas progressivas, ativação de moduladores, influência de pH e temperatura na catálise, e enzimas multisítios*, entre vários. \n\n```{r eval=FALSE, include=FALSE}\n# cinética por eq. diferencial ordinária\n# análise cinética completa com loop, plots, diagnóstico\n```\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"output-file":"enzInib.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Ligações de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno do Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Descarregar código fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de Palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.7.29","theme":{"light":"flatly"},"title":"Inibição enzimática","bibliography":["referencias.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}