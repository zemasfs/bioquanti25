{"title":"Aminoácidos","markdown":{"yaml":{"title":"Aminoácidos","toc":true,"lang":"pt","bibliography":"referencias.bib"},"headingText":"Ponto isoelétrico & aminoácidos ","headingAttr":{"id":"secAAcido","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n\n|     De modo geral o ponto isoelétrico, ou *pI*, representa o valor de pH em que uma molécula adquire uma carga líquida nula sob campo elétrico, ou seja, suas cargas positivas anulam-se com as cargas negativas. Normalmente é experimentalmente obtido por medidas cinéticas, tais como *potencial Zeta, eletrofocalização ou eletroforese capilar*. De modo similar, o *ponto isoiônico* refere-se à mesma condição, no entanto na ausência de campo elétrico, podendo ser aferido por *titulação potenciométrica, viscosidade*, ou pela informação estrutural de uma sequência monomérica, tal como ocorre na *sequência primária de proteínas*.\n|   Como todos os 20 aminoácidos que participam da estrutura proteica possuem grupos ionizáveis, tanto em seu esqueleto carbônico como em sua cadeia lateral, é possível prever o ponto isoiônico de um aminoácido em função dos valores de *pKa* apresentados nesses grupos ionizáveis. O *pI* também é denominado comumente por *ponto isoelétrico*, embora essa definição encerre em si uma abrangência teórica mais complexa.\n\nExemplificando, o ácido glutâmico (Glu, E) apresenta um carboxilato ionizável em sua cadeia lateral, além dos grupos amina (-H$_2$N) e carboxilato do esqueleto carbônico @fig-glu:\n\n```{r, label=\"fig-glu\", echo=FALSE, fig.align =\"center\", out.width=\"20%\", fig.cap=\"Fórmula estrutural planar para o ácido glutâmico (Wikimedia).\"}\nknitr::include_graphics(\"figures/Glutamic_Acid.png\")\n```\n\n|     Dessa forma, sua *rede de carga líquida*, *qnet*, pode ser determinada a partir da soma da forma ácida (qa) e básica (qb) da molécula, de forma similar como a que foi apresentada a partir da equação \\eqref{eq-HHfosf}:\n\n$$\nqnet = qb + qa\n$$ {#eq-qnet}\n\n\n$$\nqnet = qb+\\frac{1}{1+10^{pH-pKa}}\n$$ {#eq-qnet2}\n\n\n|     Como trata-se um ácido poliprótico, a @eq-qnet2 torna-se:\n\n$$\nqnet = \\sum_{i=1}^{n} {(qb+\\frac{1}{1+10^{pH-pKi}})}\n$$ {#eq-qnet3}\n\n\n, com *pKi* como o enésimo valor de pKa. Dessa forma pode-se determinar programaticamente a curva de titulação do ácido glutâmico em função de sua carga, e não da fração ácida. Nessa linha, *qb* representa a forma do composto em base, o que para Glu apresentará os valores de *-1* para os dois carboxilatos, e de *0* para o grupo amina, sendo necessário compor um vetor adicional para *qb*.\n\n```{r, echo =TRUE, fig.cap=\"Curva de titulação para o ácido glutâmico. A curva intercepta a linha pontilhada no ponto isoiônico do Glu.\"}\n\n# Titulação de Glu\n\nqNet <- function(pH, qB, pKa) {\n  x <- 0\n  for (i in 1:length(qB)) {\n    x <- x + qB[i] + 1 / (1 + 10^(pH - pKa[i]))\n  }\n  return(x)\n}\nqB <- c(-1, 0, -1)\npKa <- c(2.2, 9.7, 4.3)\n\ncurve(qNet(x, qB, pKa), 1, 12, xlab = \"pH\", ylab = \"qNet\")\n\nabline(0, 0, lty = \"dotted\")\n```\n\n|     Manualmente é possível identificar o valor de *pI* para o ácido glutâmico por uma função do *R*, tal como `locator()` visto anteriormente. Mas também é possível acessar esse valor automaticamente, aplicando um comando que encontre a raíz dessa função, ou seja, o valor de pH que corresponda a um valor nulo para *qnet*. Para isto, exemplifica-se o uso de `uniroot`, no qual define-se a função matemática pretendida, bem como os limites inferior e superior para a busca pelo algoritmo, como segue:\n\n```{r}\n# Cálculo de pI\nf <- function(pH) {\n  qNet(pH, qB, pKa)\n}\nstr(uniroot(f, c(2, 5)))\n```\n\n|     Esse resultado traduz-se como um pI de 3,25 (`root`), em 4 iterações, com uma estimativa de precisão de 6,1x10$^{-5}$, e erro associado de -4,8x10$^{-6}$.\n|     Essa forma de se obter um valor empregando-se o cálculo numérico é por vezes denominada **solução numérica**. Por outro lado, pode-se obter o valor de pI para o Glu por um procedimento mais simples, normalmente encontrado nos livros-texto sobre o assunto, e que assume a forma abaixo:\n\n$$\npI = \\frac{pKa1+pKa2}{2}\n$$ {#eq-pIeq}\n\n|     No nosso exemplo, o pI envolverá os pKas dos dois carboxilatos, o que resultará em *(2,3+4,2)/2*, ou seja, *3,25* ! Nada mal para uma aproximação, não ? Esse procedimento envolvendo a solução de um problema matemático a partir de parâmetros do sistema é denominado método ou **solução analítica**. Essa solução também pode ser exemplificada pelo parâmetro obtido em função da observação do comportamento gráfico da titulação, como nas figuras acima.\n\n|    Agora, pra que nos serve um procedimento numérico mais complexo, se uma simples equação analítica já nos resolve o problema de se encontrar o valor de pI para o ácido glutâmico ? Bom, extamente pra isso, para solução de problemas mais complexos. Um pouco menos retórico, entretanto, pode-se afirmar que a *solução numérica* funciona melhor para sistemas onde a *solução analítica* por vezes não é suficiente ou torna-se mesmo impossível, como na solução de equações com dezenas de parâmetros.\n\n## Ponto isoiônico & biopolímeros\n\n|   Uma situção nesse tema pode ser ilustrada pela obtenção do valor de pI para uma proteína. Exemplificando, a lisozima humana, enzima de estrutura terciária composta por 130 resíduos de aminoácidos. Nesse caso, a *solução analítica* esbarra na complexidade em se identificar quais desses resíduos são ionizáveis em solução aquosa, e quais estariam envolvidos numa distribuição que resultasse numa carga líquida nula para a molécula.\n\n|   Para esse sistema mais complexo é necessário ampliar um pouco a função definida para o ácido glutâmico, computando-se no vetor de *qb* as cargas em base dos 7 aminoácidos com cadeias laterais ionizáveis, e atribuir um novo vetor para o quantitativo de cada resíduo ionizável presente na lisozima. O código abaixo exemplifica essa solução, calcula o pI da enzima, e elabora o gráfico de sua titulação, embora essa ordem não seja relevante, posto que o pI é calculado numericamente, e não graficamente.\n\n```{r, echo=TRUE, fig.cap=\"Curva de titulação para lisozima.\"}\n# Titulação de Lisozima e Determinação de pI\n\n# Define função para qNet\nqNet <- function(pH, qB, pKa, n) {\n  x <- 0\n  for (i in 1:length(qB)) {\n    x <- x + n[i] * qB[i] + n[i] / (1 + 10^(pH - pKa[i]))\n  }\n  return(x)\n}\n\n# Define pKas de aCOOH, aNH3 e as 7 cadeias laterais de AA\npKa <- c(2.2, 9.6, 3.9, 4.1, 6.0, 8.5, 10.1, 10.8, 12.5)\n\n# Define qB, as cargas de cada aminoácido na forma básica\nqB <- c(-1, 0, -1, -1, 0, -1, -1, 0, 0)\n\nionizavel <- c(\n  \"aCOOH\", \"aNH3\", \"Asp\", \"Glu\", \"His\", \"Cys\", \"Tyr\",\n  \"Lys\", \"Arg\"\n)\nn <- c(1, 1, 7, 3, 1, 8, 6, 5, 14) # Lista para quantidades de resíduos\n# ionizáveis na lisozima (cada elemento representa a quantidade \n# de aCOOH, aNH3, e determinado AA na enzima)\n\n# Cálculo de pI\nf <- function(pH) {\n  qNet(pH, qB, pKa, n)\n}\nstr(uniroot(f, c(1, 13))) # estimativa de pI entre 10 e 12\n\n# Gráfico de titulação\ncurve(qNet(x, qB, pKa, n), 1, 12, xlab = \"pH\", ylab = \"qNet\")\nabline(0, 0, lty = 3)\n```\n\n|    Observe que o valor encontrado para pI da lisozima foi de 9,46; ou seja, em pH 9,46 a enzima apresenta rede de carga líquida nula, como também pode ser verificado na representação gráfica.\n\n## Ponto isoiônico & bibliotecas do R\n\n|   Não obstante a precisão do cálculo de pI pela *solução numérica* realizada para a lisozima, uma das características mais fascinantes do programa reside no uso de bibliotecas (`packages`), não sendo diferente para determinção de propriedades de biopolímeros, tais como pI.\n|   Entre as bibliotecas existentes para propriedades físico-químicas de proteínas e ácidos nucleicos exemplifica-se o pacote `seqinr`, *Biological Sequences Retrieval and Analysis* [^aminoacid-1], de análise e visualização exploratória de biopolímeros. Para uso desse pacote, contudo, faz-se necessário a obtenção da sequência primária da proteína, representada em código de uma letra. Pode-se obter a sequência primária da lisozima pelo sítio do *National Center for Biotechnology Information*, NCBI [^aminoacid-2]. Um truque rápido envolve:\n\n[^aminoacid-1]: Pacote seqinr: https://cran.r-project.org/web/packages/seqinr/index.html\n\n[^aminoacid-2]: NCBI. https://www.ncbi.nlm.nih.gov/protein\n\n1)  digitar o nome da proteína;\n\n2)  selecionar entre as opções resultantes;\n\n3)  clicar em FASTA para obter a sequência primária de 1 letra.\n\n4)  copiar a sequência da proteína apresentada para o `seqinr`.\n\n|   Presupondo-se que a biblioteca `seqinr` esteja instalada, e que a sequência tenha sido obtida para a lisozima (busca por *CAA32175* ou *lysozyme \\[Homo sapiens\\]*), pode-se encontrar o valor do pI para a mesma pelo código que segue:\n\n```{r}\nlibrary(seqinr)\nlisozima <- s2c(\"KVFERCELARTLKRLGMDGYRGISLANWMCLAKWESGYNTRATNYNAGDR\n                STDYGIFQINSRYWCNDGKTPGAVNACHLSCSALLQDNIADAVACAKRVV\n                RDPQGIRAWVAWRNRCQNRDVRQYVQGCGV\") \n# converte sequência de string em vetor de caracteres\ncomputePI(lisozima)\n```\n\n|    Veja que o valor de pI pelo pacote, 9,28, foi bem próximo do encontrado pela *solução numérica* acima. Isto deve-se ao uso de algoritmos distintos para ambos, bem como o cômputo dos valores de pKa distintos para o `seqinr`. Exemplificando essa variação, o próprio `seqinr` apresenta valores de pKa diferentes, em função da base de dados buscada. Para verificar isso, digite o comando abaixo e visualize e variável *pK* resultante.\n\n```{r, echo=TRUE}\nlibrary(seqinr)\ndata(pK)\n```\n\n|     Complementarmente, pode-se também comparar o valor de pI da lisozima com o algoritmo utilizado pelo banco de dados no sítio [^aminoacid-3]. Para isto, basta colar a sequência de resíduos no campo disponível e clicar o cômputo de pI. Veja que o valor resultante de 9,28 coincide com o do algoritmo utilizado pelo pacote `seqinr` do R.\n\n[^aminoacid-3]: Expasy. https://web.expasy.org/compute_pi/\n\n```{r}\nlibrary(knitr)\nknitr::kable(pK, \"pipe\", caption = \"Tabela de valores de pKa para aminoácidos\n             a partir de diversas fontes, extraída do pacote seqinr.\")\n```\n\n|     Existem outros pacotes do R que analisam sequências de aminoácidos e nucleotídeos, incluindo o cálculo de pI, entre os quais vale mencionar o Peptides [^aminoacid-4].\n\n[^aminoacid-4]: pacote Peptides. https://cran.r-project.org/web/packages/Peptides/index.html\n","srcMarkdownNoYaml":"\n\n\n## Ponto isoelétrico & aminoácidos  {#secAAcido}\n\n|     De modo geral o ponto isoelétrico, ou *pI*, representa o valor de pH em que uma molécula adquire uma carga líquida nula sob campo elétrico, ou seja, suas cargas positivas anulam-se com as cargas negativas. Normalmente é experimentalmente obtido por medidas cinéticas, tais como *potencial Zeta, eletrofocalização ou eletroforese capilar*. De modo similar, o *ponto isoiônico* refere-se à mesma condição, no entanto na ausência de campo elétrico, podendo ser aferido por *titulação potenciométrica, viscosidade*, ou pela informação estrutural de uma sequência monomérica, tal como ocorre na *sequência primária de proteínas*.\n|   Como todos os 20 aminoácidos que participam da estrutura proteica possuem grupos ionizáveis, tanto em seu esqueleto carbônico como em sua cadeia lateral, é possível prever o ponto isoiônico de um aminoácido em função dos valores de *pKa* apresentados nesses grupos ionizáveis. O *pI* também é denominado comumente por *ponto isoelétrico*, embora essa definição encerre em si uma abrangência teórica mais complexa.\n\nExemplificando, o ácido glutâmico (Glu, E) apresenta um carboxilato ionizável em sua cadeia lateral, além dos grupos amina (-H$_2$N) e carboxilato do esqueleto carbônico @fig-glu:\n\n```{r, label=\"fig-glu\", echo=FALSE, fig.align =\"center\", out.width=\"20%\", fig.cap=\"Fórmula estrutural planar para o ácido glutâmico (Wikimedia).\"}\nknitr::include_graphics(\"figures/Glutamic_Acid.png\")\n```\n\n|     Dessa forma, sua *rede de carga líquida*, *qnet*, pode ser determinada a partir da soma da forma ácida (qa) e básica (qb) da molécula, de forma similar como a que foi apresentada a partir da equação \\eqref{eq-HHfosf}:\n\n$$\nqnet = qb + qa\n$$ {#eq-qnet}\n\n\n$$\nqnet = qb+\\frac{1}{1+10^{pH-pKa}}\n$$ {#eq-qnet2}\n\n\n|     Como trata-se um ácido poliprótico, a @eq-qnet2 torna-se:\n\n$$\nqnet = \\sum_{i=1}^{n} {(qb+\\frac{1}{1+10^{pH-pKi}})}\n$$ {#eq-qnet3}\n\n\n, com *pKi* como o enésimo valor de pKa. Dessa forma pode-se determinar programaticamente a curva de titulação do ácido glutâmico em função de sua carga, e não da fração ácida. Nessa linha, *qb* representa a forma do composto em base, o que para Glu apresentará os valores de *-1* para os dois carboxilatos, e de *0* para o grupo amina, sendo necessário compor um vetor adicional para *qb*.\n\n```{r, echo =TRUE, fig.cap=\"Curva de titulação para o ácido glutâmico. A curva intercepta a linha pontilhada no ponto isoiônico do Glu.\"}\n\n# Titulação de Glu\n\nqNet <- function(pH, qB, pKa) {\n  x <- 0\n  for (i in 1:length(qB)) {\n    x <- x + qB[i] + 1 / (1 + 10^(pH - pKa[i]))\n  }\n  return(x)\n}\nqB <- c(-1, 0, -1)\npKa <- c(2.2, 9.7, 4.3)\n\ncurve(qNet(x, qB, pKa), 1, 12, xlab = \"pH\", ylab = \"qNet\")\n\nabline(0, 0, lty = \"dotted\")\n```\n\n|     Manualmente é possível identificar o valor de *pI* para o ácido glutâmico por uma função do *R*, tal como `locator()` visto anteriormente. Mas também é possível acessar esse valor automaticamente, aplicando um comando que encontre a raíz dessa função, ou seja, o valor de pH que corresponda a um valor nulo para *qnet*. Para isto, exemplifica-se o uso de `uniroot`, no qual define-se a função matemática pretendida, bem como os limites inferior e superior para a busca pelo algoritmo, como segue:\n\n```{r}\n# Cálculo de pI\nf <- function(pH) {\n  qNet(pH, qB, pKa)\n}\nstr(uniroot(f, c(2, 5)))\n```\n\n|     Esse resultado traduz-se como um pI de 3,25 (`root`), em 4 iterações, com uma estimativa de precisão de 6,1x10$^{-5}$, e erro associado de -4,8x10$^{-6}$.\n|     Essa forma de se obter um valor empregando-se o cálculo numérico é por vezes denominada **solução numérica**. Por outro lado, pode-se obter o valor de pI para o Glu por um procedimento mais simples, normalmente encontrado nos livros-texto sobre o assunto, e que assume a forma abaixo:\n\n$$\npI = \\frac{pKa1+pKa2}{2}\n$$ {#eq-pIeq}\n\n|     No nosso exemplo, o pI envolverá os pKas dos dois carboxilatos, o que resultará em *(2,3+4,2)/2*, ou seja, *3,25* ! Nada mal para uma aproximação, não ? Esse procedimento envolvendo a solução de um problema matemático a partir de parâmetros do sistema é denominado método ou **solução analítica**. Essa solução também pode ser exemplificada pelo parâmetro obtido em função da observação do comportamento gráfico da titulação, como nas figuras acima.\n\n|    Agora, pra que nos serve um procedimento numérico mais complexo, se uma simples equação analítica já nos resolve o problema de se encontrar o valor de pI para o ácido glutâmico ? Bom, extamente pra isso, para solução de problemas mais complexos. Um pouco menos retórico, entretanto, pode-se afirmar que a *solução numérica* funciona melhor para sistemas onde a *solução analítica* por vezes não é suficiente ou torna-se mesmo impossível, como na solução de equações com dezenas de parâmetros.\n\n## Ponto isoiônico & biopolímeros\n\n|   Uma situção nesse tema pode ser ilustrada pela obtenção do valor de pI para uma proteína. Exemplificando, a lisozima humana, enzima de estrutura terciária composta por 130 resíduos de aminoácidos. Nesse caso, a *solução analítica* esbarra na complexidade em se identificar quais desses resíduos são ionizáveis em solução aquosa, e quais estariam envolvidos numa distribuição que resultasse numa carga líquida nula para a molécula.\n\n|   Para esse sistema mais complexo é necessário ampliar um pouco a função definida para o ácido glutâmico, computando-se no vetor de *qb* as cargas em base dos 7 aminoácidos com cadeias laterais ionizáveis, e atribuir um novo vetor para o quantitativo de cada resíduo ionizável presente na lisozima. O código abaixo exemplifica essa solução, calcula o pI da enzima, e elabora o gráfico de sua titulação, embora essa ordem não seja relevante, posto que o pI é calculado numericamente, e não graficamente.\n\n```{r, echo=TRUE, fig.cap=\"Curva de titulação para lisozima.\"}\n# Titulação de Lisozima e Determinação de pI\n\n# Define função para qNet\nqNet <- function(pH, qB, pKa, n) {\n  x <- 0\n  for (i in 1:length(qB)) {\n    x <- x + n[i] * qB[i] + n[i] / (1 + 10^(pH - pKa[i]))\n  }\n  return(x)\n}\n\n# Define pKas de aCOOH, aNH3 e as 7 cadeias laterais de AA\npKa <- c(2.2, 9.6, 3.9, 4.1, 6.0, 8.5, 10.1, 10.8, 12.5)\n\n# Define qB, as cargas de cada aminoácido na forma básica\nqB <- c(-1, 0, -1, -1, 0, -1, -1, 0, 0)\n\nionizavel <- c(\n  \"aCOOH\", \"aNH3\", \"Asp\", \"Glu\", \"His\", \"Cys\", \"Tyr\",\n  \"Lys\", \"Arg\"\n)\nn <- c(1, 1, 7, 3, 1, 8, 6, 5, 14) # Lista para quantidades de resíduos\n# ionizáveis na lisozima (cada elemento representa a quantidade \n# de aCOOH, aNH3, e determinado AA na enzima)\n\n# Cálculo de pI\nf <- function(pH) {\n  qNet(pH, qB, pKa, n)\n}\nstr(uniroot(f, c(1, 13))) # estimativa de pI entre 10 e 12\n\n# Gráfico de titulação\ncurve(qNet(x, qB, pKa, n), 1, 12, xlab = \"pH\", ylab = \"qNet\")\nabline(0, 0, lty = 3)\n```\n\n|    Observe que o valor encontrado para pI da lisozima foi de 9,46; ou seja, em pH 9,46 a enzima apresenta rede de carga líquida nula, como também pode ser verificado na representação gráfica.\n\n## Ponto isoiônico & bibliotecas do R\n\n|   Não obstante a precisão do cálculo de pI pela *solução numérica* realizada para a lisozima, uma das características mais fascinantes do programa reside no uso de bibliotecas (`packages`), não sendo diferente para determinção de propriedades de biopolímeros, tais como pI.\n|   Entre as bibliotecas existentes para propriedades físico-químicas de proteínas e ácidos nucleicos exemplifica-se o pacote `seqinr`, *Biological Sequences Retrieval and Analysis* [^aminoacid-1], de análise e visualização exploratória de biopolímeros. Para uso desse pacote, contudo, faz-se necessário a obtenção da sequência primária da proteína, representada em código de uma letra. Pode-se obter a sequência primária da lisozima pelo sítio do *National Center for Biotechnology Information*, NCBI [^aminoacid-2]. Um truque rápido envolve:\n\n[^aminoacid-1]: Pacote seqinr: https://cran.r-project.org/web/packages/seqinr/index.html\n\n[^aminoacid-2]: NCBI. https://www.ncbi.nlm.nih.gov/protein\n\n1)  digitar o nome da proteína;\n\n2)  selecionar entre as opções resultantes;\n\n3)  clicar em FASTA para obter a sequência primária de 1 letra.\n\n4)  copiar a sequência da proteína apresentada para o `seqinr`.\n\n|   Presupondo-se que a biblioteca `seqinr` esteja instalada, e que a sequência tenha sido obtida para a lisozima (busca por *CAA32175* ou *lysozyme \\[Homo sapiens\\]*), pode-se encontrar o valor do pI para a mesma pelo código que segue:\n\n```{r}\nlibrary(seqinr)\nlisozima <- s2c(\"KVFERCELARTLKRLGMDGYRGISLANWMCLAKWESGYNTRATNYNAGDR\n                STDYGIFQINSRYWCNDGKTPGAVNACHLSCSALLQDNIADAVACAKRVV\n                RDPQGIRAWVAWRNRCQNRDVRQYVQGCGV\") \n# converte sequência de string em vetor de caracteres\ncomputePI(lisozima)\n```\n\n|    Veja que o valor de pI pelo pacote, 9,28, foi bem próximo do encontrado pela *solução numérica* acima. Isto deve-se ao uso de algoritmos distintos para ambos, bem como o cômputo dos valores de pKa distintos para o `seqinr`. Exemplificando essa variação, o próprio `seqinr` apresenta valores de pKa diferentes, em função da base de dados buscada. Para verificar isso, digite o comando abaixo e visualize e variável *pK* resultante.\n\n```{r, echo=TRUE}\nlibrary(seqinr)\ndata(pK)\n```\n\n|     Complementarmente, pode-se também comparar o valor de pI da lisozima com o algoritmo utilizado pelo banco de dados no sítio [^aminoacid-3]. Para isto, basta colar a sequência de resíduos no campo disponível e clicar o cômputo de pI. Veja que o valor resultante de 9,28 coincide com o do algoritmo utilizado pelo pacote `seqinr` do R.\n\n[^aminoacid-3]: Expasy. https://web.expasy.org/compute_pi/\n\n```{r}\nlibrary(knitr)\nknitr::kable(pK, \"pipe\", caption = \"Tabela de valores de pKa para aminoácidos\n             a partir de diversas fontes, extraída do pacote seqinr.\")\n```\n\n|     Existem outros pacotes do R que analisam sequências de aminoácidos e nucleotídeos, incluindo o cálculo de pI, entre os quais vale mencionar o Peptides [^aminoacid-4].\n\n[^aminoacid-4]: pacote Peptides. https://cran.r-project.org/web/packages/Peptides/index.html\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"output-file":"aminoacid.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Ligações de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno do Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Descarregar código fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Share","tools-download":"Download","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de Palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.7.22","theme":{"light":"flatly"},"title":"Aminoácidos","bibliography":["referencias.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}