{"title":"Experimental design","markdown":{"yaml":{"title":"Experimental design","bibliography":"referencias.bib"},"headingText":"Matrix system","containsRefs":false,"markdown":"\n\n\n| Recalling a simple *matrix system*, as seen in the *Biothermodynamics* chapter:\n\n$$\na_{11}*x_1 + a_{12} * x_2 = b_1\n\\\\\na_{21}*x_1 + a_{22} * x_2 = b_2\n$$ {#eq-eqMatrix}\n\n| That is,\n\n$$\nA = \\begin{bmatrix}\na_{11} & a_{12}\\\\\na_{21} & a_{22}\n\\end{bmatrix} ,\n$$\n\n$$\nx = \\begin{bmatrix}\nb_1\\\\\nb_2\n\\end{bmatrix} ,\n$$\n\n$$\nb = \\begin{bmatrix}\nx_1\\\\\nx_2\n\\end{bmatrix}\n$$\n\n| Now solve for the values ​​of *x* (or $\\Delta$'s) linearly:\n\n$$\nA * x = b\n$$ {#eq-eqAxb}\n\n| Using *matrix algebra*, the @eq-eqAxb is solved for the values ​​of *x*:\n\n$$\nx = A^{-1} * b\n$$ {#eq-eqAm1xb}\n\n| Thus, the matrix solution, widely used in multivariate situations, such as *response surface methodology* and *factorial experiment*, can be obtained by the following @eq-linMatr:\n\n$$\n\\beta = (X^T \\; X)^{-1} \\; X^T*y\n$$ {#eq-linMatr}\n\n| Other examples are illustrated in @eq-eqsLineares:\n\n$$\ny = b_0+b_1*x, \\, linear\\ fit\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+...+b_n*x_n, \\, multilinear\\ fit\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+...+b_n*x_n, \\, linear\\ response\\ surface\\ methodology\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+b_{12}*x_1*x_2, \\, factorial\\ design\\, 2^2\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+b_3*x_3+b_{12}*x_1*x_2+,b_{13}*x_1*x_3+b_{23}*x_2*x_3+b_{123}*x_1*x_2*x3 \\, experiment \\, factorial \\, 2^3\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+b_{11}*x_1^2+b_{22}*x_2^2+b_{12}*x_1*x_2, \\, quadratic \\, response \\, surface \\, methodology\n\\\\\n$$ {#eq-eqsLineares}\n\n| As a rule, all applications listed in @eq-eqsLineares can be solved with the help of matrix relations of the equations @eq-linMatr (linear, multilinear and linear response surface adjustments) or @eq-eqAxb (factorial designs). Two situations of this nature are exemplified below.\n## Reaction Yield & Factorial Design 2$^{2}$\n\n| The simplest *factorial experiment* is the one that evaluates the *response* of an experiment (yield, for example) in which two *factors* (temperature and type of catalyst, for example) are varied at two *levels* each (low and high). The table prepared in the excerpt below from the data provided by Neto et al [@neto2010fazer] exemplifies this situation.\n\n```{r}\n# Factorial design\n\n# Experiment data\ntemp <- c(40, 60, 40, 60)\ncatalis <- c(\"A\", \"A\", \"B\", \"B\")\nrendim <- c(59, 90, 54, 68)\n\n# Factorial design table\n\ntab.fat <- data.frame(temp, catalis, rendim)\nknitr::kable(tab.fat, caption = \"Factorial experiment data (Neto et al., 2010).\", \"pipe\") # table\n```\n\n| To conduct matrix analysis of the data, it is necessary to convert the table of independent variables (predictors) into a *coded design matrix*, in which high values ​​(*upper level*) are represented by *+1* and low values ​​(*lower level*) by *-1*. In addition, it is also necessary to assign *+1* to the 1st. column, and produce a 4th column containing the product of the encoded predictors. For example, for temperature at 40 (-1) and catalyst B (+1), the row will contain the product -1. This final 4x4 matrix is ​​called the *contrast coefficient matrix*:\n\n$$\nX = \\begin{bmatrix}\n1 & -1 & -1 & 1 \\\\\n-1 & -1 & 1 & 1 \\\\\n-1 & 1 & -1 & 1 \\\\\n1 & 1 & 1 & 1 \\\\\n\\end{bmatrix}\n$$\n\n| In addition, it is necessary to divide the result of the matrix operation by a specific scalar vector. In short: the coded matrix X of the predictors is created, the matrix Y of the response is applied to @eq-eqAxb, and the result is divided by a characteristic vector of the factorial design 2$^{2}$ (*c(4,2,2,2)*). The code snippet below solves the problem raised:\n\n```{r}\n# Creation of the coded planning matrix\nX <- matrix(c(1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1),\nnrow = 4, byrow = TRUE)\n# Creation of the yield matrix\nY <- as.matrix(rendim)\n# Determination of the beta coefficients:\nbeta <- t(X) %*% Y / c(4, 2, 2, 2)\nbeta\n```\n\n| Thus, the result is interpreted as:\n\n$$\n\\begin{pmatrix}\nM \\\\\nT \\\\\nC \\\\\nTC \\\\\n\\end{pmatrix} =\n\\begin{pmatrix}\n67.75 \\\\\n22.50 \\\\\n-13.50 \\\\\n-8.50 \\\\\n\\end{pmatrix}\n$$ {#eq-factor22}\n\nWhere *M* represents the *overall mean* of the response, *T* and *C* the *main effects* (temperature and catalyst), and *TC* the *interaction effect*. In summary, the results suggest that 1) the temperature favored the yield, especially for catalyst A, 2) there is a reduction in yield when replacing catalyst A with B, and c) the highest yields are obtained with catalyst A at the highest temperature. Expressing these results in the multiple linear function:\n\n$$\ny=67.75+22.5*T-13.5*C-8.5*T*C\n$$ {#eq-eqFator}\n\n| Interestingly, we arrive at the same results if, instead of applying @eq-eqAxb, we use @eq-linMatr, followed by multiplication (and not division) by another vector (*c(1,2,2,2)*:\n\n```{r}\nbeta <- (solve(t(X) %*% X) %*% t(X) %*% Y) * c(1, 2, 2, 2)\nbeta\n```\n\n## Response Surface Methodology (RSM)\n\n| This multivariate statistical technique is also commonly used in modeling responses influenced by more than one factor, sometimes associated with factorial design, and with a view to optimizing a response without the need to evaluate all possible combinations. This can be particularly useful when one wants to optimize a test whose response depends, for example, on scalar predictors, such as the concentration range of a given reagent and the pH conditions.\n| For example, for a *linear response surface* [@neto2010fazer], in a test in which one wishes to verify the best yield (*rend, %*) of a reaction by varying 3 levels of reagent concentration (*conc, %*) and three magnetic stirring speeds (*agit, rpm*), one can, as before, prepare the *contrast matrix* from the information in the following table:\n\n```{r}\n# Data for response surface methodology\n\nconc <- c(45, 55, 45, 55, 50, 50, 50)\nagit <- c(90, 90, 110, 110, 100, 100, 100)\nx1 <- c(-1, 1, -1, 1, 0, 0, 0)\nx2 <- c(-1, -1, 1, 1, 0, 0, 0)\nyield <- c(69, 59, 78, 67, 68, 66, 69)\n\ntab.msr <- data.frame(conc, agit, x1, x2, yield)\nknitr::kable(tab.msr, caption = \"Experiment data of linear response surface methodology\n(Neto et al, 2010).\", \"pipe\") # table\n```\n\n```{r}\n\n# Criação da matriz de coeficientes de contraste\nX <- matrix(c(1, 1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 0, 0, 0, -1, -1, 1, \n              1, 0, 0, 0), nrow = 7, byrow = FALSE)\n\n# Criação da matriz de rendimento\nY <- as.matrix(rendim)\n\n# Determinação dos coeficientes beta:\nbeta <- solve(t(X) %*% X) %*% t(X) %*% Y\nbeta\n```\n\n| Thus, the linear function that expresses the response surface will be:\n\n$$\ny=68.00-5.25*conc+4.25*agit\n$$ {#eq-eqMsr}\n\n### Quadratic Response Surface\n\n| Sometimes the linear model may not fit the experimental design, which can be verified by an *Analysis of Variance (ANAVA)* of the experiment. In these cases, a *quadratic surface methodology* can be applied, which can be expressed as seen in @eq-eqsLineares. In these cases, a construction called *star planning* is common, which adds an identical one rotated by 45$^{o}$ to the initial planning, and whose new points are $\\sqrt{2}$ coded units away from the central point. The example below aims to illustrate this methodology.\n\n```{r}\n\n# Dados para superfície quadrática de resposta\n\nconc <- c(30, 40, 30, 40, 35, 35, 35, 28, 35, 42, 35)\nagit <- c(115, 115, 135, 135, 125, 125, 125, 125, 139, 125, 119)\nx1 <- c(-1, 1, -1, 1, 0, 0, 0, -sqrt(2), 0, sqrt(2), 0)\nx2 <- c(-1, -1, 1, 1, 0, 0, 0, 0, sqrt(2), 0, -sqrt(2))\nrendim <- c(86, 85, 78, 84, 90, 88, 89, 81, 80, 86, 87)\n\ntab.msr2 <- data.frame(conc, agit, x1, x2, rendim)\nknitr::kable(tab.msr2, caption = \"Dados de experimento de metodologia de \n             superfície quadrática de resposta (Neto e cols, 2010).\", \"pipe\")\n# tabela\n```\n\n| This time the *contrast coefficient matrix* expands to six columns as a function of the terms *x$_{1}^{2}$*, *x$_{2}^{2}$*, and *x$_{1}$x$_{2}$*, becoming:\n\n$$\n\\begin{pmatrix}\n1 & -1 & -1 & 1 & 1 & 1 \\\\\n1 & 1 & -1 & 1 & 1 & -1 \\\\\n1 & -1 & 1 & 1 & 1 & -1 \\\\\n1 & 1 & 1 & 1 & 1 \\\\\n1 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & -\\sqrt(2) & 0 & 2 & 0 & 0 \\\\\n 1 & 0 & \\sqrt(2) & 0 & 2 & 0 \\\\\n 1 & \\sqrt(2) & 0 & 2 & 0 & 0 \\\\\n 1 & 0 & -\\sqrt(2) & 0 & 2 & 0 \\\\\n\\end{pmatrix}\n$${#eq-msr2)\n\n\n| The procedure for the quadratic surface repeats the matrix operation performed with the linear one:\n\n```{r}\n\n# Creating the matrix of contrast coefficients for the quadratic surface\nX <- matrix(c(rep(1, 11), -1, 1, -1, 1, 0, 0, 0, -sqrt(2),\n0, sqrt(2), 0, -1, -1, 1, 1, 0, 0, 0, 0, sqrt(2),\n0, -sqrt(2), 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 1, 1,\n1, 1, 0, 0, 0, 0, 2, 0, 1, 1,\n1, 1, 0, 0, 0, 0, 2, 0, 2, 1, -1, -1, 1, 0, 0, 0, 0,\n0, 0, 0), nrow = 11, byrow = FALSE)\n\n# Creating the yield matrix\nY <- as.matrix(rendim)\n# Determining the beta coefficients:\nbeta <- solve(t(X) %*% X) %*% t(X) %*% Y\nbeta\n```\n\n| The result expresses the quadratic function of the surface found, as follows:\n\n$$\ny=89.00+1.51*x_1-2.36*x_2-2.81*x_1^2-2.81*x_2^2+1.75*x_1*x_2\n$$ {#eq-eqMsr2}\n\n| From the result above it is possible to predict the optimized conditions for the test. In this sense, `R` allows, for example, the construction of a three-dimensional graph that represents the function obtained, and without the need for an additional package: as follows:\n\n```{r, fig.cap = \"Quadratic surface described by the MSR equation with superposition of experimental values.\" }\n\n## Quadratic response surface (MSR)\n\nx <- seq(-1, 1, 0.1) # predictor x\ny <- seq(-1, 1, 0.1) # predictor y\nmrs <- function(x, y) {\n89.00 + 1.51 * x - 2.36 * y - 2.81 * x^2 - 2.81 * y^2 + 1.75 * x * y\n} # function applied to predictors\nz <- outer(x, y, mrs) # 3D plot output (response)\nres <- persp(x, y, z, xlab = \"x1\", ylab = \"x2\", zlab = \"z\",\nshade = 0.4, theta = 30, phi = 15, ticktype = \"detailed\")\n# surface plot of function z(x,y)\npoints <- trans3d(x1, x2, rendim, pmat = res) # command for adding experimental points\npoints(points, pch = 19, col = 1) # adding points\n```\n\n| However, there are some packages for `R` for three-dimensional representation of data and functions (`rgl`, `plot3D`, `scatterplot3d`), as well as for factorial design analysis (`agricolae`, `afex`, `FMC`), and response surface methodology (`rsm`). ","srcMarkdownNoYaml":"\n\n## Matrix system\n\n| Recalling a simple *matrix system*, as seen in the *Biothermodynamics* chapter:\n\n$$\na_{11}*x_1 + a_{12} * x_2 = b_1\n\\\\\na_{21}*x_1 + a_{22} * x_2 = b_2\n$$ {#eq-eqMatrix}\n\n| That is,\n\n$$\nA = \\begin{bmatrix}\na_{11} & a_{12}\\\\\na_{21} & a_{22}\n\\end{bmatrix} ,\n$$\n\n$$\nx = \\begin{bmatrix}\nb_1\\\\\nb_2\n\\end{bmatrix} ,\n$$\n\n$$\nb = \\begin{bmatrix}\nx_1\\\\\nx_2\n\\end{bmatrix}\n$$\n\n| Now solve for the values ​​of *x* (or $\\Delta$'s) linearly:\n\n$$\nA * x = b\n$$ {#eq-eqAxb}\n\n| Using *matrix algebra*, the @eq-eqAxb is solved for the values ​​of *x*:\n\n$$\nx = A^{-1} * b\n$$ {#eq-eqAm1xb}\n\n| Thus, the matrix solution, widely used in multivariate situations, such as *response surface methodology* and *factorial experiment*, can be obtained by the following @eq-linMatr:\n\n$$\n\\beta = (X^T \\; X)^{-1} \\; X^T*y\n$$ {#eq-linMatr}\n\n| Other examples are illustrated in @eq-eqsLineares:\n\n$$\ny = b_0+b_1*x, \\, linear\\ fit\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+...+b_n*x_n, \\, multilinear\\ fit\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+...+b_n*x_n, \\, linear\\ response\\ surface\\ methodology\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+b_{12}*x_1*x_2, \\, factorial\\ design\\, 2^2\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+b_3*x_3+b_{12}*x_1*x_2+,b_{13}*x_1*x_3+b_{23}*x_2*x_3+b_{123}*x_1*x_2*x3 \\, experiment \\, factorial \\, 2^3\n\\\\\ny = b_0+b_1*x_1+b_2*x_2+b_{11}*x_1^2+b_{22}*x_2^2+b_{12}*x_1*x_2, \\, quadratic \\, response \\, surface \\, methodology\n\\\\\n$$ {#eq-eqsLineares}\n\n| As a rule, all applications listed in @eq-eqsLineares can be solved with the help of matrix relations of the equations @eq-linMatr (linear, multilinear and linear response surface adjustments) or @eq-eqAxb (factorial designs). Two situations of this nature are exemplified below.\n## Reaction Yield & Factorial Design 2$^{2}$\n\n| The simplest *factorial experiment* is the one that evaluates the *response* of an experiment (yield, for example) in which two *factors* (temperature and type of catalyst, for example) are varied at two *levels* each (low and high). The table prepared in the excerpt below from the data provided by Neto et al [@neto2010fazer] exemplifies this situation.\n\n```{r}\n# Factorial design\n\n# Experiment data\ntemp <- c(40, 60, 40, 60)\ncatalis <- c(\"A\", \"A\", \"B\", \"B\")\nrendim <- c(59, 90, 54, 68)\n\n# Factorial design table\n\ntab.fat <- data.frame(temp, catalis, rendim)\nknitr::kable(tab.fat, caption = \"Factorial experiment data (Neto et al., 2010).\", \"pipe\") # table\n```\n\n| To conduct matrix analysis of the data, it is necessary to convert the table of independent variables (predictors) into a *coded design matrix*, in which high values ​​(*upper level*) are represented by *+1* and low values ​​(*lower level*) by *-1*. In addition, it is also necessary to assign *+1* to the 1st. column, and produce a 4th column containing the product of the encoded predictors. For example, for temperature at 40 (-1) and catalyst B (+1), the row will contain the product -1. This final 4x4 matrix is ​​called the *contrast coefficient matrix*:\n\n$$\nX = \\begin{bmatrix}\n1 & -1 & -1 & 1 \\\\\n-1 & -1 & 1 & 1 \\\\\n-1 & 1 & -1 & 1 \\\\\n1 & 1 & 1 & 1 \\\\\n\\end{bmatrix}\n$$\n\n| In addition, it is necessary to divide the result of the matrix operation by a specific scalar vector. In short: the coded matrix X of the predictors is created, the matrix Y of the response is applied to @eq-eqAxb, and the result is divided by a characteristic vector of the factorial design 2$^{2}$ (*c(4,2,2,2)*). The code snippet below solves the problem raised:\n\n```{r}\n# Creation of the coded planning matrix\nX <- matrix(c(1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1),\nnrow = 4, byrow = TRUE)\n# Creation of the yield matrix\nY <- as.matrix(rendim)\n# Determination of the beta coefficients:\nbeta <- t(X) %*% Y / c(4, 2, 2, 2)\nbeta\n```\n\n| Thus, the result is interpreted as:\n\n$$\n\\begin{pmatrix}\nM \\\\\nT \\\\\nC \\\\\nTC \\\\\n\\end{pmatrix} =\n\\begin{pmatrix}\n67.75 \\\\\n22.50 \\\\\n-13.50 \\\\\n-8.50 \\\\\n\\end{pmatrix}\n$$ {#eq-factor22}\n\nWhere *M* represents the *overall mean* of the response, *T* and *C* the *main effects* (temperature and catalyst), and *TC* the *interaction effect*. In summary, the results suggest that 1) the temperature favored the yield, especially for catalyst A, 2) there is a reduction in yield when replacing catalyst A with B, and c) the highest yields are obtained with catalyst A at the highest temperature. Expressing these results in the multiple linear function:\n\n$$\ny=67.75+22.5*T-13.5*C-8.5*T*C\n$$ {#eq-eqFator}\n\n| Interestingly, we arrive at the same results if, instead of applying @eq-eqAxb, we use @eq-linMatr, followed by multiplication (and not division) by another vector (*c(1,2,2,2)*:\n\n```{r}\nbeta <- (solve(t(X) %*% X) %*% t(X) %*% Y) * c(1, 2, 2, 2)\nbeta\n```\n\n## Response Surface Methodology (RSM)\n\n| This multivariate statistical technique is also commonly used in modeling responses influenced by more than one factor, sometimes associated with factorial design, and with a view to optimizing a response without the need to evaluate all possible combinations. This can be particularly useful when one wants to optimize a test whose response depends, for example, on scalar predictors, such as the concentration range of a given reagent and the pH conditions.\n| For example, for a *linear response surface* [@neto2010fazer], in a test in which one wishes to verify the best yield (*rend, %*) of a reaction by varying 3 levels of reagent concentration (*conc, %*) and three magnetic stirring speeds (*agit, rpm*), one can, as before, prepare the *contrast matrix* from the information in the following table:\n\n```{r}\n# Data for response surface methodology\n\nconc <- c(45, 55, 45, 55, 50, 50, 50)\nagit <- c(90, 90, 110, 110, 100, 100, 100)\nx1 <- c(-1, 1, -1, 1, 0, 0, 0)\nx2 <- c(-1, -1, 1, 1, 0, 0, 0)\nyield <- c(69, 59, 78, 67, 68, 66, 69)\n\ntab.msr <- data.frame(conc, agit, x1, x2, yield)\nknitr::kable(tab.msr, caption = \"Experiment data of linear response surface methodology\n(Neto et al, 2010).\", \"pipe\") # table\n```\n\n```{r}\n\n# Criação da matriz de coeficientes de contraste\nX <- matrix(c(1, 1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 0, 0, 0, -1, -1, 1, \n              1, 0, 0, 0), nrow = 7, byrow = FALSE)\n\n# Criação da matriz de rendimento\nY <- as.matrix(rendim)\n\n# Determinação dos coeficientes beta:\nbeta <- solve(t(X) %*% X) %*% t(X) %*% Y\nbeta\n```\n\n| Thus, the linear function that expresses the response surface will be:\n\n$$\ny=68.00-5.25*conc+4.25*agit\n$$ {#eq-eqMsr}\n\n### Quadratic Response Surface\n\n| Sometimes the linear model may not fit the experimental design, which can be verified by an *Analysis of Variance (ANAVA)* of the experiment. In these cases, a *quadratic surface methodology* can be applied, which can be expressed as seen in @eq-eqsLineares. In these cases, a construction called *star planning* is common, which adds an identical one rotated by 45$^{o}$ to the initial planning, and whose new points are $\\sqrt{2}$ coded units away from the central point. The example below aims to illustrate this methodology.\n\n```{r}\n\n# Dados para superfície quadrática de resposta\n\nconc <- c(30, 40, 30, 40, 35, 35, 35, 28, 35, 42, 35)\nagit <- c(115, 115, 135, 135, 125, 125, 125, 125, 139, 125, 119)\nx1 <- c(-1, 1, -1, 1, 0, 0, 0, -sqrt(2), 0, sqrt(2), 0)\nx2 <- c(-1, -1, 1, 1, 0, 0, 0, 0, sqrt(2), 0, -sqrt(2))\nrendim <- c(86, 85, 78, 84, 90, 88, 89, 81, 80, 86, 87)\n\ntab.msr2 <- data.frame(conc, agit, x1, x2, rendim)\nknitr::kable(tab.msr2, caption = \"Dados de experimento de metodologia de \n             superfície quadrática de resposta (Neto e cols, 2010).\", \"pipe\")\n# tabela\n```\n\n| This time the *contrast coefficient matrix* expands to six columns as a function of the terms *x$_{1}^{2}$*, *x$_{2}^{2}$*, and *x$_{1}$x$_{2}$*, becoming:\n\n$$\n\\begin{pmatrix}\n1 & -1 & -1 & 1 & 1 & 1 \\\\\n1 & 1 & -1 & 1 & 1 & -1 \\\\\n1 & -1 & 1 & 1 & 1 & -1 \\\\\n1 & 1 & 1 & 1 & 1 \\\\\n1 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & 0 & 0 & 0 & 0 & 0 \\\\\n1 & -\\sqrt(2) & 0 & 2 & 0 & 0 \\\\\n 1 & 0 & \\sqrt(2) & 0 & 2 & 0 \\\\\n 1 & \\sqrt(2) & 0 & 2 & 0 & 0 \\\\\n 1 & 0 & -\\sqrt(2) & 0 & 2 & 0 \\\\\n\\end{pmatrix}\n$${#eq-msr2)\n\n\n| The procedure for the quadratic surface repeats the matrix operation performed with the linear one:\n\n```{r}\n\n# Creating the matrix of contrast coefficients for the quadratic surface\nX <- matrix(c(rep(1, 11), -1, 1, -1, 1, 0, 0, 0, -sqrt(2),\n0, sqrt(2), 0, -1, -1, 1, 1, 0, 0, 0, 0, sqrt(2),\n0, -sqrt(2), 1, 1, 1, 0, 0, 0, 2, 0, 2, 0, 1, 1,\n1, 1, 0, 0, 0, 0, 2, 0, 1, 1,\n1, 1, 0, 0, 0, 0, 2, 0, 2, 1, -1, -1, 1, 0, 0, 0, 0,\n0, 0, 0), nrow = 11, byrow = FALSE)\n\n# Creating the yield matrix\nY <- as.matrix(rendim)\n# Determining the beta coefficients:\nbeta <- solve(t(X) %*% X) %*% t(X) %*% Y\nbeta\n```\n\n| The result expresses the quadratic function of the surface found, as follows:\n\n$$\ny=89.00+1.51*x_1-2.36*x_2-2.81*x_1^2-2.81*x_2^2+1.75*x_1*x_2\n$$ {#eq-eqMsr2}\n\n| From the result above it is possible to predict the optimized conditions for the test. In this sense, `R` allows, for example, the construction of a three-dimensional graph that represents the function obtained, and without the need for an additional package: as follows:\n\n```{r, fig.cap = \"Quadratic surface described by the MSR equation with superposition of experimental values.\" }\n\n## Quadratic response surface (MSR)\n\nx <- seq(-1, 1, 0.1) # predictor x\ny <- seq(-1, 1, 0.1) # predictor y\nmrs <- function(x, y) {\n89.00 + 1.51 * x - 2.36 * y - 2.81 * x^2 - 2.81 * y^2 + 1.75 * x * y\n} # function applied to predictors\nz <- outer(x, y, mrs) # 3D plot output (response)\nres <- persp(x, y, z, xlab = \"x1\", ylab = \"x2\", zlab = \"z\",\nshade = 0.4, theta = 30, phi = 15, ticktype = \"detailed\")\n# surface plot of function z(x,y)\npoints <- trans3d(x1, x2, rendim, pmat = res) # command for adding experimental points\npoints(points, pch = 19, col = 1) # adding points\n```\n\n| However, there are some packages for `R` for three-dimensional representation of data and functions (`rgl`, `plot3D`, `scatterplot3d`), as well as for factorial design analysis (`agricolae`, `afex`, `FMC`), and response surface methodology (`rsm`). "},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"output-file":"planejExper_en.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":{"light":"flatly"},"title":"Experimental design","bibliography":["referencias.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}