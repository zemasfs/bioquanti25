{"title":"Geography","markdown":{"yaml":{"title":"Geography","number-sections":true,"toc":true,"lang":"en","class":"fundo-basico"},"headingText":"Some socioeconomic data of Brazilian municipalities (EM13CHS402, EM13CHS302, EM13CHS304)","containsRefs":false,"markdown":"\n\n<!-- ############# SOCIOECONOMIC DATA - MAP ################# --->\n\n<div class=\"geo-fundo\"> <!--modifies for each area-->\n\n\n<!-- ::: {.grid} -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, echo=FALSE}\n\nlibrary(plotly)\n\n# Fictitious data of Brazilian states\ndados_estados <- data.frame(\nState = c(\"São Paulo\", \"Rio de Janeiro\", \"Minas Gerais\", \"Bahia\", \"Paraná\"),\nAcronym = c(\"SP\", \"RJ\", \"MG\", \"BA\", \"PR\"),\nPopulation = c(46289333, 17366189, 21411923, 14930634, 11947904),\nCapital = c(\"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"Salvador\", \"Curitiba\"),\nHDI = c(0.783, 0.761, 0.731, 0.714, 0.749),\nIDEB = c(4.9, 4.6, 4.7, 4.2, 4.8),\nlat = c(-23.55, -22.91, -19.92, -12.97, -25.42),\nlon = c(-46.63, -43.20, -43.94, -38.52, -49.27)\n)\n\n# Interactive map with information on mouseover\nfig <- plot_ly(\ndata = dados_estados,\ntype = 'scattergeo',\nmode = 'markers',\nlat = ~lat,\nlon = ~lon,\ntext = ~paste(\n\"<b>State:</b>\", State, \"<br>\",\n\"<b>Capital:</b>\", Capital, \"<br>\",\n\"<b>Population:</b>\", Population, \"<br>\",\n\"<b>HDI:</b>\", HDI, \"<br>\",\n\"<b>IDEB:</b>\", IDEB\n),\nhoverinfo = 'text',\nmarker = list(size = 10, color = 'blue', opacity = 0.7)\n) %>% layout(\ntitle = \"Interactive Map of Brazil - Information by State\",\ngeo = list(\nscope = 'south america',\nresolution = 50,\nshowland = TRUE,\nshowcountries = TRUE,\ncountrycolor = \"gray\",\nshowlakes = TRUE,\nlakecolor = \"lightblue\",\nshowsubunits = TRUE,\nsubunitcolor = \"white\"\n)\n)\n\nfig\n```\n<!-- ::: -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, eval=FALSE, message=FALSE, warning=FALSE}\nlibrary(plotly)\n\n# Fictitious data of the states of Brazil\ndados_estados <- data.frame(\nState = c(\"São Paulo\", \"Rio de Janeiro\", \"Minas Gerais\", \"Bahia\", \"Paraná\"),\nAcronym = c(\"SP\", \"RJ\", \"MG\", \"BA\", \"PR\"),\nPopulation = c(46289333, 17366189, 21411923, 14930634, 11947904),\nCapital = c(\"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"Salvador\", \"Curitiba\"),\nHDI = c(0.783, 0.761, 0.731, 0.714, 0.749),\nIDEB = c(4.9, 4.6, 4.7, 4.2, 4.8),\nlat = c(-23.55, -22.91, -19.92, -12.97, -25.42),\nlon = c(-46.63, -43.20, -43.94, -38.52, -49.27)\n)\n\n# Interactive map with information when hovering the mouse\nfig <- plot_ly(\ndata = dados_estados,\ntype = 'scattergeo',\nmode = 'markers',\nlat = ~lat,\nlon = ~lon,\ntext = ~paste(\n\"<b>State:</b>\", State, \"<br>\",\n\"<b>Capital:</b>\", Capital, \"<br>\",\n\"<b>Population:</b>\", Population, \"<br>\",\n\"<b>HDI:</b>\", HDI, \"<br>\",\n\"<b>IDEB:</b>\", IDEB\n),\nhoverinfo = 'text',\nmarker = list(size = 10, color = 'blue', opacity = 0.7)\n) %>%\nlayout(\ntitle = \"Interactive Map of Brazil - Information by State\",\ngeo = list( \nscope = 'south america',\n resolution = 50,\n showland = TRUE,\n showcountries = TRUE,\n countrycolor = \"gray\",\n showlakes = TRUE,\n lakecolor = \"lightblue\",\n showssubunits = TRUE,\n subunitcolor = \"white\"\n )\n )\n\nfig\n```\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n</div>\n\n<div class=\"geo-fundo2\"> <!--modifies for each area-->\n\n**Suggestions:**\n\n| Try modifying the graph, using/replacing the commands below in the code snippet:\n\n```{r, eval = FALSE}\n# Add after line with hoverinfo\n\nmarker = list(\nsize = 15,\ncolor = ~IDH,\ncolorscale = \"Viridis\", # Color scale that varies according to the IDH\ncolorbar = list(title = \"IDH\"), # Add a legend for the color scale\nopacity = 0.8\n\n```\n\n</div>\n\n\\\n<!-- ############# BRAZILIAN AREA AND POPULATION ################ --->\n\n<div class=\"geo-fundo\"> <!--modify for each area-->\n\n## Relationship between area and population in Brazilian municipalities (EM13MAT405, EM13MAT407, EM13CHS101, EM13CHS104, EM13CNT301)\n\n<!-- ::: {.grid} -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, echo=FALSE}\nurl <- \"https://raw.githubusercontent.com/turicas/rows/refs/heads/develop/examples/data/brazilian-cities.csv\" # defines the link to the data\ndata <- read.csv(url) # read the data file\n\nlibrary(plotly)\nplot_ly(data, x = ~area, y = ~inhabitants,\ntype = \"scatter\",\nmode = 'markers',\nmarker = list(line = list(width = 1)),\ntext = ~paste(\"City: \", city, \"<br>State: \", state), # Text on hover\nhoverinfo = 'text', # Show only the defined text\nframe = ~state)%>%\nlayout(\ntitle = \"Area and population distribution in Brazilian cities\",\nxaxis = list(title = \"States\", type = \"log\"),\nyaxis = list(title = \"Population\", type = \"log\"),\nshowlegend = FALSE\n) %>%\nanimation_opts(\nframe = 500, # Animation speed\ntransition = 0,\nredraw = FALSE\n)\n```\n<!-- ::: -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, eval=FALSE, message=FALSE, warning=FALSE}\nurl <- \"https://raw.githubusercontent.com/turicas/rows/refs/heads/develop/examples/data/brazilian-cities.csv\" # define the link to the data\ndata <- read.csv(url) # read the data file\n\nlibrary(plotly)\nplot_ly(data, x = ~area, y = ~inhabitants,\ntype = \"scatter\",\nmode = 'markers',\nmarker = list(line = list(width = 1)),\ntext = ~paste(\"City: \", city, \"<br>State: \", state), # Text on hover\nhoverinfo = 'text', # Show only the defined text\nframe = ~state)%>%\nlayout(\ntitle = \"Area and population distribution in Brazilian cities\",\nxaxis = list(title = \"States\", type = \"log\"),\nyaxis = list(title = \"Population\", type = \"log\"),\nshowlegend = FALSE\n) %>%\nanimation_opts(\nframe = 500, # Animation speed\ntransition = 0,\nredraw = FALSE\n)\n```\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n</div>\n\n<div class=\"geo-fundo2\"> <!--modifies for each area-->\n\n**Suggestions:**\n\n| Try modifying the graph, using/replacing alternatively the commands below in the code snippet:\n\n```{r, eval = FALSE}\ncolor = ~state, # Added to vary the color according to the state\n\n```\n\n</div>\n\n\\\n<!-- ############# WORLD ENERGY MATRICES - MAP ################ --->\n\n<div class=\"geo-fundo\"> <!--modifies for each area area-->\n\n## Data on world energy matrices over the years (EM13CHS106, EM13CHS302, EM13CNT309)\n\n<!-- ::: {.grid} -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, echo=FALSE}\nlibrary(plotly)\n\n# Fictitious data on world energy matrices (percentages per year)\ndata <- data.frame(\nYear = rep(2000:2020, each = 4),\nSource = rep(c(\"Renewable\", \"Coal\", \"Oil\", \"Natural Gas\"), times = 21),\nPercentage = c(\n# Fictitious data that simulate the evolution of energy sources\nseq(20, 40, length.out = 21), # Renewable\nseq(40, 30, length.out = 21), # Coal\nseq(30, 20, length.out = 21), # Oil\nseq(10, 10, length.out = 21) # Natural Gas\n)\n)\n\n# Interactive graph\nfig <- plot_ly(\ndata = data,\nx = ~Year,\ny = ~Percentage,\ncolor = ~Source,\ntype = 'bar',\ncolors = c(\"green\", \"black\", \"brown\", \"blue\")\n) %>%\nlayout(\ntitle = \"Evolution of World Energy Matrices\",\nbarmode = \"stack\",\nxaxis = list(title = \"Year\"),\nyaxis = list(title = \"Percentage (%)\"),\nlegend = list(title = list(text = \"Energy Source\"))\n)\n\nfig\n```\n<!-- ::: -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, eval=FALSE, message=FALSE, warning=FALSE}\nlibrary(plotly)\n\n# Fictitious data on world energy matrices (percentages per year)\ndata <- data.frame(\nYear = rep(2000:2020, each = 4),\nSource = rep(c(\"Renewable\", \"Coal\", \"Oil\", \"Natural Gas\"), times = 21),\nPercentage = c(\n# Fictitious data that simulates the evolution of energy sources\nseq(20, 40, length.out = 21), # Renewable\nseq(40, 30, length.out = 21), # Coal\nseq(30, 20, length.out = 21), # Oil\nseq(10, 10, length.out = 21) # Natural Gas\n)\n)\n\n# Interactive graph\nfig <- plot_ly(\ndata = data,\nx = ~Year,\ny = ~Percentage,\ncolor = ~Source,\ntype = 'bar',\ncolors = c(\"green\", \"black\", \"brown\", \"blue\")\n) %>%\nlayout(\ntitle = \"Evolution of World Energy Matrices\",\nbarmode = \"stack\",\nxaxis = list(title = \"Year\"),\nyaxis = list(title = \"Percentage (%)\"),\nlegend = list(title = list(text = \"Energy Source\"))\n)\n\nfig\n```\n\n<!-- ::: -->\n\n</div>\n\n<div class=\"geo-fundo2\"> <!--modify for each area-->\n\n**Suggestions:**\n\n| Try modifying the graph, using/replacing the commands below in the code snippet:\n\n```{r, eval = FALSE}\nopacity = 0.8 # Changed the opacity of the bars\n\n```\n\n</div>\n\n\\\n\n","srcMarkdownNoYaml":"\n\n<!-- ############# SOCIOECONOMIC DATA - MAP ################# --->\n\n<div class=\"geo-fundo\"> <!--modifies for each area-->\n\n## Some socioeconomic data of Brazilian municipalities (EM13CHS402, EM13CHS302, EM13CHS304)\n\n<!-- ::: {.grid} -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, echo=FALSE}\n\nlibrary(plotly)\n\n# Fictitious data of Brazilian states\ndados_estados <- data.frame(\nState = c(\"São Paulo\", \"Rio de Janeiro\", \"Minas Gerais\", \"Bahia\", \"Paraná\"),\nAcronym = c(\"SP\", \"RJ\", \"MG\", \"BA\", \"PR\"),\nPopulation = c(46289333, 17366189, 21411923, 14930634, 11947904),\nCapital = c(\"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"Salvador\", \"Curitiba\"),\nHDI = c(0.783, 0.761, 0.731, 0.714, 0.749),\nIDEB = c(4.9, 4.6, 4.7, 4.2, 4.8),\nlat = c(-23.55, -22.91, -19.92, -12.97, -25.42),\nlon = c(-46.63, -43.20, -43.94, -38.52, -49.27)\n)\n\n# Interactive map with information on mouseover\nfig <- plot_ly(\ndata = dados_estados,\ntype = 'scattergeo',\nmode = 'markers',\nlat = ~lat,\nlon = ~lon,\ntext = ~paste(\n\"<b>State:</b>\", State, \"<br>\",\n\"<b>Capital:</b>\", Capital, \"<br>\",\n\"<b>Population:</b>\", Population, \"<br>\",\n\"<b>HDI:</b>\", HDI, \"<br>\",\n\"<b>IDEB:</b>\", IDEB\n),\nhoverinfo = 'text',\nmarker = list(size = 10, color = 'blue', opacity = 0.7)\n) %>% layout(\ntitle = \"Interactive Map of Brazil - Information by State\",\ngeo = list(\nscope = 'south america',\nresolution = 50,\nshowland = TRUE,\nshowcountries = TRUE,\ncountrycolor = \"gray\",\nshowlakes = TRUE,\nlakecolor = \"lightblue\",\nshowsubunits = TRUE,\nsubunitcolor = \"white\"\n)\n)\n\nfig\n```\n<!-- ::: -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, eval=FALSE, message=FALSE, warning=FALSE}\nlibrary(plotly)\n\n# Fictitious data of the states of Brazil\ndados_estados <- data.frame(\nState = c(\"São Paulo\", \"Rio de Janeiro\", \"Minas Gerais\", \"Bahia\", \"Paraná\"),\nAcronym = c(\"SP\", \"RJ\", \"MG\", \"BA\", \"PR\"),\nPopulation = c(46289333, 17366189, 21411923, 14930634, 11947904),\nCapital = c(\"São Paulo\", \"Rio de Janeiro\", \"Belo Horizonte\", \"Salvador\", \"Curitiba\"),\nHDI = c(0.783, 0.761, 0.731, 0.714, 0.749),\nIDEB = c(4.9, 4.6, 4.7, 4.2, 4.8),\nlat = c(-23.55, -22.91, -19.92, -12.97, -25.42),\nlon = c(-46.63, -43.20, -43.94, -38.52, -49.27)\n)\n\n# Interactive map with information when hovering the mouse\nfig <- plot_ly(\ndata = dados_estados,\ntype = 'scattergeo',\nmode = 'markers',\nlat = ~lat,\nlon = ~lon,\ntext = ~paste(\n\"<b>State:</b>\", State, \"<br>\",\n\"<b>Capital:</b>\", Capital, \"<br>\",\n\"<b>Population:</b>\", Population, \"<br>\",\n\"<b>HDI:</b>\", HDI, \"<br>\",\n\"<b>IDEB:</b>\", IDEB\n),\nhoverinfo = 'text',\nmarker = list(size = 10, color = 'blue', opacity = 0.7)\n) %>%\nlayout(\ntitle = \"Interactive Map of Brazil - Information by State\",\ngeo = list( \nscope = 'south america',\n resolution = 50,\n showland = TRUE,\n showcountries = TRUE,\n countrycolor = \"gray\",\n showlakes = TRUE,\n lakecolor = \"lightblue\",\n showssubunits = TRUE,\n subunitcolor = \"white\"\n )\n )\n\nfig\n```\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n</div>\n\n<div class=\"geo-fundo2\"> <!--modifies for each area-->\n\n**Suggestions:**\n\n| Try modifying the graph, using/replacing the commands below in the code snippet:\n\n```{r, eval = FALSE}\n# Add after line with hoverinfo\n\nmarker = list(\nsize = 15,\ncolor = ~IDH,\ncolorscale = \"Viridis\", # Color scale that varies according to the IDH\ncolorbar = list(title = \"IDH\"), # Add a legend for the color scale\nopacity = 0.8\n\n```\n\n</div>\n\n\\\n<!-- ############# BRAZILIAN AREA AND POPULATION ################ --->\n\n<div class=\"geo-fundo\"> <!--modify for each area-->\n\n## Relationship between area and population in Brazilian municipalities (EM13MAT405, EM13MAT407, EM13CHS101, EM13CHS104, EM13CNT301)\n\n<!-- ::: {.grid} -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, echo=FALSE}\nurl <- \"https://raw.githubusercontent.com/turicas/rows/refs/heads/develop/examples/data/brazilian-cities.csv\" # defines the link to the data\ndata <- read.csv(url) # read the data file\n\nlibrary(plotly)\nplot_ly(data, x = ~area, y = ~inhabitants,\ntype = \"scatter\",\nmode = 'markers',\nmarker = list(line = list(width = 1)),\ntext = ~paste(\"City: \", city, \"<br>State: \", state), # Text on hover\nhoverinfo = 'text', # Show only the defined text\nframe = ~state)%>%\nlayout(\ntitle = \"Area and population distribution in Brazilian cities\",\nxaxis = list(title = \"States\", type = \"log\"),\nyaxis = list(title = \"Population\", type = \"log\"),\nshowlegend = FALSE\n) %>%\nanimation_opts(\nframe = 500, # Animation speed\ntransition = 0,\nredraw = FALSE\n)\n```\n<!-- ::: -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, eval=FALSE, message=FALSE, warning=FALSE}\nurl <- \"https://raw.githubusercontent.com/turicas/rows/refs/heads/develop/examples/data/brazilian-cities.csv\" # define the link to the data\ndata <- read.csv(url) # read the data file\n\nlibrary(plotly)\nplot_ly(data, x = ~area, y = ~inhabitants,\ntype = \"scatter\",\nmode = 'markers',\nmarker = list(line = list(width = 1)),\ntext = ~paste(\"City: \", city, \"<br>State: \", state), # Text on hover\nhoverinfo = 'text', # Show only the defined text\nframe = ~state)%>%\nlayout(\ntitle = \"Area and population distribution in Brazilian cities\",\nxaxis = list(title = \"States\", type = \"log\"),\nyaxis = list(title = \"Population\", type = \"log\"),\nshowlegend = FALSE\n) %>%\nanimation_opts(\nframe = 500, # Animation speed\ntransition = 0,\nredraw = FALSE\n)\n```\n\n<!-- ::: -->\n\n<!-- ::: -->\n\n</div>\n\n<div class=\"geo-fundo2\"> <!--modifies for each area-->\n\n**Suggestions:**\n\n| Try modifying the graph, using/replacing alternatively the commands below in the code snippet:\n\n```{r, eval = FALSE}\ncolor = ~state, # Added to vary the color according to the state\n\n```\n\n</div>\n\n\\\n<!-- ############# WORLD ENERGY MATRICES - MAP ################ --->\n\n<div class=\"geo-fundo\"> <!--modifies for each area area-->\n\n## Data on world energy matrices over the years (EM13CHS106, EM13CHS302, EM13CNT309)\n\n<!-- ::: {.grid} -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, echo=FALSE}\nlibrary(plotly)\n\n# Fictitious data on world energy matrices (percentages per year)\ndata <- data.frame(\nYear = rep(2000:2020, each = 4),\nSource = rep(c(\"Renewable\", \"Coal\", \"Oil\", \"Natural Gas\"), times = 21),\nPercentage = c(\n# Fictitious data that simulate the evolution of energy sources\nseq(20, 40, length.out = 21), # Renewable\nseq(40, 30, length.out = 21), # Coal\nseq(30, 20, length.out = 21), # Oil\nseq(10, 10, length.out = 21) # Natural Gas\n)\n)\n\n# Interactive graph\nfig <- plot_ly(\ndata = data,\nx = ~Year,\ny = ~Percentage,\ncolor = ~Source,\ntype = 'bar',\ncolors = c(\"green\", \"black\", \"brown\", \"blue\")\n) %>%\nlayout(\ntitle = \"Evolution of World Energy Matrices\",\nbarmode = \"stack\",\nxaxis = list(title = \"Year\"),\nyaxis = list(title = \"Percentage (%)\"),\nlegend = list(title = list(text = \"Energy Source\"))\n)\n\nfig\n```\n<!-- ::: -->\n\n<!-- ::: {.g-col-6} -->\n\n```{r, eval=FALSE, message=FALSE, warning=FALSE}\nlibrary(plotly)\n\n# Fictitious data on world energy matrices (percentages per year)\ndata <- data.frame(\nYear = rep(2000:2020, each = 4),\nSource = rep(c(\"Renewable\", \"Coal\", \"Oil\", \"Natural Gas\"), times = 21),\nPercentage = c(\n# Fictitious data that simulates the evolution of energy sources\nseq(20, 40, length.out = 21), # Renewable\nseq(40, 30, length.out = 21), # Coal\nseq(30, 20, length.out = 21), # Oil\nseq(10, 10, length.out = 21) # Natural Gas\n)\n)\n\n# Interactive graph\nfig <- plot_ly(\ndata = data,\nx = ~Year,\ny = ~Percentage,\ncolor = ~Source,\ntype = 'bar',\ncolors = c(\"green\", \"black\", \"brown\", \"blue\")\n) %>%\nlayout(\ntitle = \"Evolution of World Energy Matrices\",\nbarmode = \"stack\",\nxaxis = list(title = \"Year\"),\nyaxis = list(title = \"Percentage (%)\"),\nlegend = list(title = list(text = \"Energy Source\"))\n)\n\nfig\n```\n\n<!-- ::: -->\n\n</div>\n\n<div class=\"geo-fundo2\"> <!--modify for each area-->\n\n**Suggestions:**\n\n| Try modifying the graph, using/replacing the commands below in the code snippet:\n\n```{r, eval = FALSE}\nopacity = 0.8 # Changed the opacity of the bars\n\n```\n\n</div>\n\n\\\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"number-sections":true,"toc":true,"output-file":"geografia_en.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.29","theme":{"light":"flatly"},"title":"Geography","class":"fundo-basico"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}