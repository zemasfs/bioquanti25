{"title":"6 - Graphic animations","markdown":{"yaml":{"title":"6 - Graphic animations","format":"html","toc":true,"number-sections":true,"lang":"en"},"headingText":"Rise in the Earth's average temperature","containsRefs":false,"markdown":"\n\n\n<div class = \"reminder-objetivos\">\nObjectives:\\\n1. Understand the potential of \"plotly\" for creating interactive animations\\\n2. Create animated graphics by importing data from a database\n</div>\n\n\n| In addition to the purely interactive aspect of graphics created with plotly, which is already a major advantage when preparing illustrative materials for educational content, the library can also run animations with the graphics!\n\\\n\n| The animation occurs through transitions from one image to another in a graph when you want to observe what happens when a variable (numerical or categorical) is changed. The key command for this is frame. Animation in plotly also works for the three types of data input, namely: *equations, vectors, imported datasets*. \n\\\n\n\n\n| Needless to say, climate change caused by human activity has had a huge impact on the planet, including a rise in the Earth's average surface temperature due to factors such as the greenhouse effect. \n\\\n\n![Climate change on the planet due to gas emissions and average temperature rise. Source: MAPA: high school - Human sciences and their technologies. 1st semester. 2nd year, p.99.](temp_mapa.png)\n\\\n\n```{r}\n\nlibrary(plotly)\nlibrary(magrittr) # necessary libraries\n\n# 1) Obtaining data from the internet\n\nurl <- \"https://raw.githubusercontent.com/datasets/global-temp/refs/heads/main/data/annual.csv\" # defines the link to the data\ndata <- read.csv(url) # reads the data file\n\n# 2) Building the animated graph \n\nplot_ly(data, x = ~Year, y = ~Mean,\ntype = \"bar\",\nmarker = list(line = list(width = 10)),\nframe = ~Year) %>%\nanimation_opts(\nframe = 150, # Animation speed\ntransition = 0,\nredraw = TRUE) %>%\nlayout(\ntitle = \"Global temperature fluctuation\",\nxaxis = list(title = \"Years\"),\nyaxis = list(title = \"Temperature difference, C\"))\n```\n\\\n\n| To see the graph better, click on *Zoom* to open a larger window. Now for the \"*fancy*\" part: click on *PLAY* and see what happens. You can also select any period for display by using the graph's scroll bar.\n\\\n\n## Life expectancy & Gross Domestic Product\n\n\n| A very interesting use of `plot_ly` in graphic animation is when we need to present various data on a given topic. This is called *multivariate data*. To illustrate this situation, let's say we want to provide various information in a graph showing the relationship between a country's gross domestic product and the life expectancy of its inhabitants over time. \n\\\n\n\n![Some economic indicators associated with life expectancy in 2001. Source: MAPA: high school - Human sciences and their technologies. 1st semester, 2nd year, p.101.](expectativa_mapa.png)\n\n| To illustrate the interactive richness that can be obtained by `plotly` on the influence of *gross domestic product - GDP* on life expectancy, we can import a data set from the internet and create a graph on this relationship, see:\n\\\n\n```{r}\nlibrary(plotly)\n\n# Obtaining data from the internet\nurl <- read.csv(\"https://raw.githubusercontent.com/kirenz/datasets/refs/heads/master/gapminder.csv\")\n\ndadosExpVida <- url # assigning the data to an `R` object\n\n# Creating the interactive graph\nplot_ly(\ndadosExpVida, # data converted from the internet\nx = ~gdpPercap, # name of the per capita income column in the data\ny = ~lifeExp, # name of the life expectancy column in the data\ntype = 'scatter', # graph type (scatter)\nmode = 'markers' # scatter type (points)\n)\n```\n\\\n\n| Done! Simple, straightforward, and interactive code. If you hover your mouse over the points, you will see the coordinates of GDP and life expectancy. However, it is not possible to tell from this graph who is who, i.e., which country has which GDP, as well as other information contained in the original spreadsheet downloaded from the internet. To give you an idea, *this spreadsheet contains, in addition to GDP and life expectancy values, the country and its population, the continent to which it belongs, as well as the year the data was measured*. \n\\\n\n| Thus, we are faced with a set of *multivariate data*, which is very common in various databases, such as [IBGE](https://www.ibge.gov.br/) or [DATASUS](https://datasus.saude.gov.br). \n\\\n\n| How about if we could present everything at once, i.e., GDP, life expectancy, the country, the size of the population, the continent, and the year in which all of this was measured, i.e., **six** variables, including *numerical* and *categorical* (classes) variables?\n\\\n\n| Impossible?! Not for `R`!! Here is a snippet of code for that, with the proposed result. Don't worry about the size or details. If you want to **reproduce** this code, you know what to do... just copy, paste, and run the code in an `R` script.\n\\\n\n\n```{r}\nlibrary(plotly)\n\n# Obtendo os dados na internet\nurl <- read.csv(\"https://raw.githubusercontent.com/kirenz/datasets/refs/heads/master/gapminder.csv\")\n\ndadosExpVida <- url  # atribuindo os dados a um objeto do `R`\n\n# Criando o gráfico interativo com animação\nplot_ly(\n  dadosExpVida, # dados convertidos da internet\n  x = ~gdpPercap, # renda per capita\n  y = ~lifeExp, # expectativa de vida\n  size = ~pop, # tamanho dos pontos em função da população\n  color = ~country, # cor dos pontos em função do país\n  frame = ~year,    # Frame para a animação por ano de coleta dos dados\n  text = ~continent,  # País como informação ao passar o mouse\n  hoverinfo = \"text\",\n  type = 'scatter', # tipo de gráfico\n  mode = 'markers',\n  marker = list(sizemode = 'diameter', opacity = 0.7)\n) %>%\n  layout(  # atribuição de título e etiquetas dos eixos\n    title = \"Produto interno bruto X Expectativa de vida\",\n    xaxis = list(title = \"PIB (log), US$\", type = \"log\"),\n    yaxis = list(title = \"Expectativa de Vida, anos\"),\n    showlegend = TRUE # possibilidade ou não de aparecer a legenda\n  ) %>%\n  animation_opts(\n    frame = 1000,           # Velocidade da animação\n    transition = 0,\n    redraw = TRUE\n  )\n```\n\\\n\n| To go to the \"*playground*\" now, click *PLAY* and observe the temporal transition of life expectancy as a function of countries' GDP. And note that all other data is there, separated by point size (population), color (country), continent (*hover*, *mouse* over), and year (animation frame or *frame*)! \n\\\n\n| One more detail! If you look at the legend, you will see that it is also *sliding*, identifying each country by color. Want to know where Brazil is in this crazy graph of GDP and life expectancy? Easy. Find Brazil in the legend, double-click, and notice that now only that point is highlighted.\n","srcMarkdownNoYaml":"\n\n\n<div class = \"reminder-objetivos\">\nObjectives:\\\n1. Understand the potential of \"plotly\" for creating interactive animations\\\n2. Create animated graphics by importing data from a database\n</div>\n\n\n| In addition to the purely interactive aspect of graphics created with plotly, which is already a major advantage when preparing illustrative materials for educational content, the library can also run animations with the graphics!\n\\\n\n| The animation occurs through transitions from one image to another in a graph when you want to observe what happens when a variable (numerical or categorical) is changed. The key command for this is frame. Animation in plotly also works for the three types of data input, namely: *equations, vectors, imported datasets*. \n\\\n\n## Rise in the Earth's average temperature\n\n\n| Needless to say, climate change caused by human activity has had a huge impact on the planet, including a rise in the Earth's average surface temperature due to factors such as the greenhouse effect. \n\\\n\n![Climate change on the planet due to gas emissions and average temperature rise. Source: MAPA: high school - Human sciences and their technologies. 1st semester. 2nd year, p.99.](temp_mapa.png)\n\\\n\n```{r}\n\nlibrary(plotly)\nlibrary(magrittr) # necessary libraries\n\n# 1) Obtaining data from the internet\n\nurl <- \"https://raw.githubusercontent.com/datasets/global-temp/refs/heads/main/data/annual.csv\" # defines the link to the data\ndata <- read.csv(url) # reads the data file\n\n# 2) Building the animated graph \n\nplot_ly(data, x = ~Year, y = ~Mean,\ntype = \"bar\",\nmarker = list(line = list(width = 10)),\nframe = ~Year) %>%\nanimation_opts(\nframe = 150, # Animation speed\ntransition = 0,\nredraw = TRUE) %>%\nlayout(\ntitle = \"Global temperature fluctuation\",\nxaxis = list(title = \"Years\"),\nyaxis = list(title = \"Temperature difference, C\"))\n```\n\\\n\n| To see the graph better, click on *Zoom* to open a larger window. Now for the \"*fancy*\" part: click on *PLAY* and see what happens. You can also select any period for display by using the graph's scroll bar.\n\\\n\n## Life expectancy & Gross Domestic Product\n\n\n| A very interesting use of `plot_ly` in graphic animation is when we need to present various data on a given topic. This is called *multivariate data*. To illustrate this situation, let's say we want to provide various information in a graph showing the relationship between a country's gross domestic product and the life expectancy of its inhabitants over time. \n\\\n\n\n![Some economic indicators associated with life expectancy in 2001. Source: MAPA: high school - Human sciences and their technologies. 1st semester, 2nd year, p.101.](expectativa_mapa.png)\n\n| To illustrate the interactive richness that can be obtained by `plotly` on the influence of *gross domestic product - GDP* on life expectancy, we can import a data set from the internet and create a graph on this relationship, see:\n\\\n\n```{r}\nlibrary(plotly)\n\n# Obtaining data from the internet\nurl <- read.csv(\"https://raw.githubusercontent.com/kirenz/datasets/refs/heads/master/gapminder.csv\")\n\ndadosExpVida <- url # assigning the data to an `R` object\n\n# Creating the interactive graph\nplot_ly(\ndadosExpVida, # data converted from the internet\nx = ~gdpPercap, # name of the per capita income column in the data\ny = ~lifeExp, # name of the life expectancy column in the data\ntype = 'scatter', # graph type (scatter)\nmode = 'markers' # scatter type (points)\n)\n```\n\\\n\n| Done! Simple, straightforward, and interactive code. If you hover your mouse over the points, you will see the coordinates of GDP and life expectancy. However, it is not possible to tell from this graph who is who, i.e., which country has which GDP, as well as other information contained in the original spreadsheet downloaded from the internet. To give you an idea, *this spreadsheet contains, in addition to GDP and life expectancy values, the country and its population, the continent to which it belongs, as well as the year the data was measured*. \n\\\n\n| Thus, we are faced with a set of *multivariate data*, which is very common in various databases, such as [IBGE](https://www.ibge.gov.br/) or [DATASUS](https://datasus.saude.gov.br). \n\\\n\n| How about if we could present everything at once, i.e., GDP, life expectancy, the country, the size of the population, the continent, and the year in which all of this was measured, i.e., **six** variables, including *numerical* and *categorical* (classes) variables?\n\\\n\n| Impossible?! Not for `R`!! Here is a snippet of code for that, with the proposed result. Don't worry about the size or details. If you want to **reproduce** this code, you know what to do... just copy, paste, and run the code in an `R` script.\n\\\n\n\n```{r}\nlibrary(plotly)\n\n# Obtendo os dados na internet\nurl <- read.csv(\"https://raw.githubusercontent.com/kirenz/datasets/refs/heads/master/gapminder.csv\")\n\ndadosExpVida <- url  # atribuindo os dados a um objeto do `R`\n\n# Criando o gráfico interativo com animação\nplot_ly(\n  dadosExpVida, # dados convertidos da internet\n  x = ~gdpPercap, # renda per capita\n  y = ~lifeExp, # expectativa de vida\n  size = ~pop, # tamanho dos pontos em função da população\n  color = ~country, # cor dos pontos em função do país\n  frame = ~year,    # Frame para a animação por ano de coleta dos dados\n  text = ~continent,  # País como informação ao passar o mouse\n  hoverinfo = \"text\",\n  type = 'scatter', # tipo de gráfico\n  mode = 'markers',\n  marker = list(sizemode = 'diameter', opacity = 0.7)\n) %>%\n  layout(  # atribuição de título e etiquetas dos eixos\n    title = \"Produto interno bruto X Expectativa de vida\",\n    xaxis = list(title = \"PIB (log), US$\", type = \"log\"),\n    yaxis = list(title = \"Expectativa de Vida, anos\"),\n    showlegend = TRUE # possibilidade ou não de aparecer a legenda\n  ) %>%\n  animation_opts(\n    frame = 1000,           # Velocidade da animação\n    transition = 0,\n    redraw = TRUE\n  )\n```\n\\\n\n| To go to the \"*playground*\" now, click *PLAY* and observe the temporal transition of life expectancy as a function of countries' GDP. And note that all other data is there, separated by point size (population), color (country), continent (*hover*, *mouse* over), and year (animation frame or *frame*)! \n\\\n\n| One more detail! If you look at the legend, you will see that it is also *sliding*, identifying each country by color. Want to know where Brazil is in this crazy graph of GDP and life expectancy? Easy. Find Brazil in the legend, double-click, and notice that now only that point is highlighted.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"number-sections":true,"output-file":"r_anim_en.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.29","theme":{"light":"flatly"},"title":"6 - Graphic animations"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}