{"title":"4 - Interactive graphs with `plotly`","markdown":{"yaml":{"title":"4 - Interactive graphs with `plotly`","format":"html","toc":true,"number-sections":true,"lang":"en"},"headingText":"Creating an interactive graph","containsRefs":false,"markdown":"\n\n<div class = \"reminder-objetivos\">\nObjectives:\\\n1. Understand what \"plotly\" is used for and its interactive potential for teaching and learning\\\n2. Use \"plotly\" scripts to build interactive graphs\\\n3. Check the interactivity of the graphs created\\\n</div>\n\n\n\n| The `plotly` library is one of the richest in `R` for interactive graphics. Among other things, it allows *zoom* effects on the graph, as well as *mouse over*, where simply passing the mouse over an element of the graph opens the information for that point. In addition, it allows user-controlled animations, the insertion of selectors, sliders, menus, and buttons.\n\\\n\n| In addition, because it allows integration with a modern language called JavaScript, the library is also used in some data dashboards, such as Microsoft's Power Bi (https://www.microsoft.com/pt-br/power-platform/products/power-bi), a collection of connected applications for data visualization. In fact, it is the `plotlyjs` library itself, written in *JavaScript*, external to `R` and *RStudio*, that is incorporated into `R`.\n\n\n| Creating graphs with `plotly` requires a few simple commands. And the good news is that the graph produced is already interactive, with features such as zoom in/out, data shifting on axes, and mouseover effects, saving as a PNG image, among others. To build any graph, you need data. There are basically three ways to obtain data:\n\n```{r, eval=FALSE}\n* Creating the data ;\n* Creating an equation that will generate the data ;\n* Importing the data (from a spreadsheet, for example)\n```\n\n\\\n\n\n\n| Let's start by creating the data from an equation applied to a *vector.* To do this, we need...the vector! Think of a vector as a column (or row) in Excel. In `R`, vectors are created by *concatenating* values separated by *commas*, as follows:\n\n```{r}\nx = c(1,2,3,4,5) # a vector; the \"c\" indicates \"concatenation\"\n# assigns values from 1 to 5 to the variable \"x\"\n\n# Alternatively,\n\nx = 1:5 # also assigns values from 1 to 5 to the variable \"x\"\n```\n\n| To create the interactive graph, let's illustrate the *vertical launch* equation below. This image, as well as the others used to illustrate the potential use of *R & RStudio* in basic education, were extracted from the notebooks of [MAPA (Educational Support Material for Learning in Minas Gerais](https://seliga.educacao.mg.gov.br/cadernos-mapa-2025).\n\n\n![Vertical launch equations for the ascent and descent of a projectile, and related exercise. Source: MAPA: high school - 2nd semester, 1st year. Mathematics and its technologies, p.27.](lancamentoVert_mapa.png)\n\\\n\n\n\n| Now we will make an interactive graph from this data. But first, of course, you need to install the `plotly` package in `R`. You can install it from the *Packages* tab in *RStudio*, if you haven't already, and as explained in the previous section on *Packages*.\n\\\n\n\n| Final step... build a *scatter plot* of the vertical rise function. \n\n\n| To do this, simply copy the snippet below and paste it into a new `R` script. Then run it in any of the ways mentioned in the previous section.\n\\\n\n```{r}\n# Data:\nt = 1:20 # defines the time vector\nVo = 100 # initial velocity, 100 m/s\ng = 9.8 # acceleration due to gravity, m/s^2\n\n# Equation (vertical rise):\n\nH = Vo*t-1/2*g*t^2\n\n# Interactive graph:\nlibrary(plotly)\nplot_ly(x = ~t, y = ~H)\n\n# Note:\n# Plotly syntax: ~variable, to assign a variable (x or y)\n# type: to assign a graph type\n```\n\n\n| R usually displays some messages (*Warnings*) after running the commands. These are not errors, but additional information, such as in the reproduction of the previous graph. In this case, the information is that the type of graph is missing, a scatter plot:\n\n\n```{r, eval=FALSE}\nplot_ly(x = t, y = H, type = 'scatter')\n```\n\n\n\n| Now observe how much interactivity has emerged with the simple command above, by moving the *mouse* over the points on the graph, or by clicking on the icons that appeared above the graph. Test this interactivity:\n\n* Hovering the mouse over the points on the graph will give you the coordinates of each point;\n* Using the mouse scroll wheel will zoom in or out on the graph\n* Left-clicking anywhere on the graph and drawing a rectangle will zoom in on that area;\n* Double-clicking after zooming in will return you to the original graph;\n* Positioning the mouse pointer between the values of an axis and dragging the mouse will cause the selected axis to shift;\n* By selecting an icon in the upper right corner of the graph, you can, in sequence from the left, download the plot as an image, zoom in, move the axes, select points within a box or within a loop, zoom in, zoom out, scale to the original size, realign the axes to those of the original plot, view the coordinates (x and y), view only the y coordinate, and return to the beginning.\n\n\n## Saving the graph\n\n| Now a <span style=\"color:orange;\">**very interesting feature of `plotly`: you can save the graph while maintaining all its interactivity in an HTML file**. This way, anyone will be able to open your graph in an internet browser (Firefox, Chrome, Edge, for example), allowing them to observe the details and interactive action on any computer, notebook, tablet, or smartphone!!!\n\n\n| And saving **your first interactive graph** is very simple:\n\n```{r, eval=FALSE}\n\n1. After creating the graph, click \"Export\" just above the graph in the `Plots` tab;\n2. Click \"Save As Web Page\"\n3. Choose a name for the graph and save it\n```\n\n\n| Now just locate the file on your computer, open the file automatically in a browser, and check that its interactivity has been maintained. **And to share it, if you wish, just send the interactive graph file to someone or display it on a multimedia projector**.\n\n## Working with mathematical relationships in variables\n\n| When constructing a graph, it is sometimes useful to be able to perform a calculation on a variable without having to create a new vector. Let's illustrate this with an *isothermal transformation in the study of gases (Boyle-Mariotte's law)*, as follows:\n\n\n![Relationship between pressure and volume in an isothermal transformation. Source: MAPA: high school - Natural sciences and their technologies. 2nd semester. 3rd year, p.28.](gases_mapa.png)\n\n\n| For example, if you are working in a spreadsheet (e.g., Excel) and want to build a graph of the above relationship, say V versus p, you will have to set up a column with this operation. In plotly, as in R as a whole, this is not necessary, since p can be considered as a constant 1/V. In fact, this *constant* is represented by the *general constant of ideal gases, R*, of known value.\n\n\n| Solving for the above situation:\n\n```{r}\n# Data:\nR = 8.314 # J/(mol*K), general constant of ideal gases\nV = seq(0.224, length.out=50) # vector of \"Volume\" (in liters), with 50 points\nT = 298 # K, absolute temperature\n\n\n# Equation\n# pV = RT; p = RT/V\np = R*T/V\n\n# Graph:\nlibrary(plotly)\nplot_ly(x = V, y = ~R*T/V, type = 'scatter', mode='lines')\n```\n\n\n| Now, if you want to name the *axis labels* and give the graph a *title* to better convey the physical meaning of the quantities involved, just add the `layout` command as follows:\n\n```{r, eval=TRUE}\nlibrary(plotly)\nlibrary(magrittr) # library for the pipe operator \"%>%\"\nplot_ly(x = V, y = ~R*T/V, type = \"scatter\", mode=\"lines\") %>%\nlayout(\ntitle = \"Isothermal Transformation of a Gas\",\nxaxis = list(title = \"Volume V, L\"),\nyaxis = list(title = \"Pressure p, bar\")\n)\n```\n\n\n\n<div class=\"reminder-markdown\">\n\n**Now it's your turn:**\n\nOpen a new script and build a graph that shows any relationship between variables, as suggested below:\n\n1. Create the values of the independent variable (e.g., x = 1:10); \\\n2. Load the `plotly` library - `library(plotly)` ; \\\n3. Enter a general command line for the graph: \\\n`plot_ly(x = ~x, y = ~sqrt(x), type = \"scatter\") ` \\\n4. Select these lines, press Ctrl+Enter, and observe the output (i.e., the graph, in the `plots` tab; \\\n5. Modify the \"y\" variable, replacing the value of \"x\" with some other relationship, such as: `~exp(x)` - exponential, `~sin(10*x)` - sine, ~sqrt(x)` - square root; \\\n\n</div>\n\\\n","srcMarkdownNoYaml":"\n\n<div class = \"reminder-objetivos\">\nObjectives:\\\n1. Understand what \"plotly\" is used for and its interactive potential for teaching and learning\\\n2. Use \"plotly\" scripts to build interactive graphs\\\n3. Check the interactivity of the graphs created\\\n</div>\n\n\n\n| The `plotly` library is one of the richest in `R` for interactive graphics. Among other things, it allows *zoom* effects on the graph, as well as *mouse over*, where simply passing the mouse over an element of the graph opens the information for that point. In addition, it allows user-controlled animations, the insertion of selectors, sliders, menus, and buttons.\n\\\n\n| In addition, because it allows integration with a modern language called JavaScript, the library is also used in some data dashboards, such as Microsoft's Power Bi (https://www.microsoft.com/pt-br/power-platform/products/power-bi), a collection of connected applications for data visualization. In fact, it is the `plotlyjs` library itself, written in *JavaScript*, external to `R` and *RStudio*, that is incorporated into `R`.\n\n\n| Creating graphs with `plotly` requires a few simple commands. And the good news is that the graph produced is already interactive, with features such as zoom in/out, data shifting on axes, and mouseover effects, saving as a PNG image, among others. To build any graph, you need data. There are basically three ways to obtain data:\n\n```{r, eval=FALSE}\n* Creating the data ;\n* Creating an equation that will generate the data ;\n* Importing the data (from a spreadsheet, for example)\n```\n\n\\\n\n\n## Creating an interactive graph\n\n| Let's start by creating the data from an equation applied to a *vector.* To do this, we need...the vector! Think of a vector as a column (or row) in Excel. In `R`, vectors are created by *concatenating* values separated by *commas*, as follows:\n\n```{r}\nx = c(1,2,3,4,5) # a vector; the \"c\" indicates \"concatenation\"\n# assigns values from 1 to 5 to the variable \"x\"\n\n# Alternatively,\n\nx = 1:5 # also assigns values from 1 to 5 to the variable \"x\"\n```\n\n| To create the interactive graph, let's illustrate the *vertical launch* equation below. This image, as well as the others used to illustrate the potential use of *R & RStudio* in basic education, were extracted from the notebooks of [MAPA (Educational Support Material for Learning in Minas Gerais](https://seliga.educacao.mg.gov.br/cadernos-mapa-2025).\n\n\n![Vertical launch equations for the ascent and descent of a projectile, and related exercise. Source: MAPA: high school - 2nd semester, 1st year. Mathematics and its technologies, p.27.](lancamentoVert_mapa.png)\n\\\n\n\n\n| Now we will make an interactive graph from this data. But first, of course, you need to install the `plotly` package in `R`. You can install it from the *Packages* tab in *RStudio*, if you haven't already, and as explained in the previous section on *Packages*.\n\\\n\n\n| Final step... build a *scatter plot* of the vertical rise function. \n\n\n| To do this, simply copy the snippet below and paste it into a new `R` script. Then run it in any of the ways mentioned in the previous section.\n\\\n\n```{r}\n# Data:\nt = 1:20 # defines the time vector\nVo = 100 # initial velocity, 100 m/s\ng = 9.8 # acceleration due to gravity, m/s^2\n\n# Equation (vertical rise):\n\nH = Vo*t-1/2*g*t^2\n\n# Interactive graph:\nlibrary(plotly)\nplot_ly(x = ~t, y = ~H)\n\n# Note:\n# Plotly syntax: ~variable, to assign a variable (x or y)\n# type: to assign a graph type\n```\n\n\n| R usually displays some messages (*Warnings*) after running the commands. These are not errors, but additional information, such as in the reproduction of the previous graph. In this case, the information is that the type of graph is missing, a scatter plot:\n\n\n```{r, eval=FALSE}\nplot_ly(x = t, y = H, type = 'scatter')\n```\n\n\n\n| Now observe how much interactivity has emerged with the simple command above, by moving the *mouse* over the points on the graph, or by clicking on the icons that appeared above the graph. Test this interactivity:\n\n* Hovering the mouse over the points on the graph will give you the coordinates of each point;\n* Using the mouse scroll wheel will zoom in or out on the graph\n* Left-clicking anywhere on the graph and drawing a rectangle will zoom in on that area;\n* Double-clicking after zooming in will return you to the original graph;\n* Positioning the mouse pointer between the values of an axis and dragging the mouse will cause the selected axis to shift;\n* By selecting an icon in the upper right corner of the graph, you can, in sequence from the left, download the plot as an image, zoom in, move the axes, select points within a box or within a loop, zoom in, zoom out, scale to the original size, realign the axes to those of the original plot, view the coordinates (x and y), view only the y coordinate, and return to the beginning.\n\n\n## Saving the graph\n\n| Now a <span style=\"color:orange;\">**very interesting feature of `plotly`: you can save the graph while maintaining all its interactivity in an HTML file**. This way, anyone will be able to open your graph in an internet browser (Firefox, Chrome, Edge, for example), allowing them to observe the details and interactive action on any computer, notebook, tablet, or smartphone!!!\n\n\n| And saving **your first interactive graph** is very simple:\n\n```{r, eval=FALSE}\n\n1. After creating the graph, click \"Export\" just above the graph in the `Plots` tab;\n2. Click \"Save As Web Page\"\n3. Choose a name for the graph and save it\n```\n\n\n| Now just locate the file on your computer, open the file automatically in a browser, and check that its interactivity has been maintained. **And to share it, if you wish, just send the interactive graph file to someone or display it on a multimedia projector**.\n\n## Working with mathematical relationships in variables\n\n| When constructing a graph, it is sometimes useful to be able to perform a calculation on a variable without having to create a new vector. Let's illustrate this with an *isothermal transformation in the study of gases (Boyle-Mariotte's law)*, as follows:\n\n\n![Relationship between pressure and volume in an isothermal transformation. Source: MAPA: high school - Natural sciences and their technologies. 2nd semester. 3rd year, p.28.](gases_mapa.png)\n\n\n| For example, if you are working in a spreadsheet (e.g., Excel) and want to build a graph of the above relationship, say V versus p, you will have to set up a column with this operation. In plotly, as in R as a whole, this is not necessary, since p can be considered as a constant 1/V. In fact, this *constant* is represented by the *general constant of ideal gases, R*, of known value.\n\n\n| Solving for the above situation:\n\n```{r}\n# Data:\nR = 8.314 # J/(mol*K), general constant of ideal gases\nV = seq(0.224, length.out=50) # vector of \"Volume\" (in liters), with 50 points\nT = 298 # K, absolute temperature\n\n\n# Equation\n# pV = RT; p = RT/V\np = R*T/V\n\n# Graph:\nlibrary(plotly)\nplot_ly(x = V, y = ~R*T/V, type = 'scatter', mode='lines')\n```\n\n\n| Now, if you want to name the *axis labels* and give the graph a *title* to better convey the physical meaning of the quantities involved, just add the `layout` command as follows:\n\n```{r, eval=TRUE}\nlibrary(plotly)\nlibrary(magrittr) # library for the pipe operator \"%>%\"\nplot_ly(x = V, y = ~R*T/V, type = \"scatter\", mode=\"lines\") %>%\nlayout(\ntitle = \"Isothermal Transformation of a Gas\",\nxaxis = list(title = \"Volume V, L\"),\nyaxis = list(title = \"Pressure p, bar\")\n)\n```\n\n\n\n<div class=\"reminder-markdown\">\n\n**Now it's your turn:**\n\nOpen a new script and build a graph that shows any relationship between variables, as suggested below:\n\n1. Create the values of the independent variable (e.g., x = 1:10); \\\n2. Load the `plotly` library - `library(plotly)` ; \\\n3. Enter a general command line for the graph: \\\n`plot_ly(x = ~x, y = ~sqrt(x), type = \"scatter\") ` \\\n4. Select these lines, press Ctrl+Enter, and observe the output (i.e., the graph, in the `plots` tab; \\\n5. Modify the \"y\" variable, replacing the value of \"x\" with some other relationship, such as: `~exp(x)` - exponential, `~sin(10*x)` - sine, ~sqrt(x)` - square root; \\\n\n</div>\n\\\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"number-sections":true,"output-file":"r_plotly_en.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.29","theme":{"light":"flatly"},"title":"4 - Interactive graphs with `plotly`"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}