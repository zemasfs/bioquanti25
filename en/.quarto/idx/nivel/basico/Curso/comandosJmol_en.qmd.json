{"title":"Some commands to venture into flying molecules","markdown":{"yaml":{"title":"Some commands to venture into flying molecules","format":"html","toc":true,"number-sections":true,"lang":"en"},"headingText":"How to load a molecule into JSmol","containsRefs":false,"markdown":"\n\n<div class=\"reminder-objetivos\">\n\nObjectives:\\\n1. Load a molecule into Jmol in an alternative way\\\n2. Use the Console for some commands\\\n\n</div>\n\n\n| *JSmol* is nothing more than *Jmol* itself, only developed for use in an internet browser, and which uses *JavaScript* among its languages (hence the *S* in *JSmol*). \n\n| Assuming that you have already opened the window for the *JSmol* *applet* in your browser but, contrary to what was done before (molecule name at the end of the *site* [PubChem](https://pubchem.ncbi.nlm.nih.gov/)), you want to:\n\n* load a molecule from another database;\n* load a molecule whose file is already on your computer\n\n| Well, in that case you can use the *mouse* or a *command line*, whichever you prefer.\n\n### Loading the molecule with the *mouse*\n\n| To do this, simply right-click on the screen, as before, and select *File--\\>Load*. The options that appear are:\n\n\n```{r, eval=FALSE}\n* Open local file # opens a window to search for the model file on your computer;\n* Open URL # opens a window to search for the internet address that has the file\n* Get PDB file # opens a window to enter a macromolecule code from the website of the same name (mainly proteins and nucleic acids)\n* Get MOL file # opens a window to search for a *.mol file\n* Open script # opens a window to search for a piece of code on the computer\n```\n\n\n| The first option is self-explanatory (`Open local file`), the second option (`Open URL`) depends on the correct address for a given molecular model, the third (`Get PDB file`) refers to the [Protein Data Brookhaven](https://www.rcsb.org) database for biopolymers, the fourth (`Get MOL file`) involves searching *online* in a specific database for small molecules, and the last (`Open script`), searching for a file containing lines of *Jmol* code for a set of actions.\n\n| As textbooks cover small molecular structures, usually associated with functional groups in *Inorganic and Organic Chemistry*, as well as specific examples in areas such as *Health, Biotechnology, and Industry*, including *some macromolecule models*, it can be concluded that you are more likely to use remote search for small molecules (*Get MOL file*), molecules contained on your computer (*Open local file*), and/or biomacromolecules (*Get PDB file*).\n\n| Loading small molecules is *identical* to what was tried by adding the model name to the end of the [JSmol](https://chemapps.stolaf.edu/jmol/jmol.php?model=water) address. Remote loading for protein, enzyme, and nucleic acid models requires knowledge of their *PDB code* or a keyword search on the [Protein Data Brookhaven](https://www.rcsb.org) website.\n\n| Loading molecules saved on your PC involves a few steps, namely:\n\n1. Obtain the molecule model from the internet, or build it yourself;\n2. Download the file corresponding to the model (usually with an attribute \\*.mol, \\*.cif, \\*.cml, \\*.sdf, among more than 60 formats);\n3. Load it onto the [JSmol](https://chemapps.stolaf.edu/jmol/jmol.php?model=water) page in one of two ways:\n\n```{r, eval=FALSE}\n1. By clicking: File --> Load --> Open local file ;\n2. By dragging the file from the folder where it is located to the JSmol tab in the browser.\n```\n\n<!---insert some links to download molecules...there are several--->\n\n| For example, let's say you want to view the structure of *aspirin* downloaded to your computer.\n\n<div class=\"reminder-markdown\">\n\n**Now it's up to you:**\n\n1. Go to the Pubchem website: https://pubchem.ncbi.nlm.nih.gov/\n1. Type `aspirin` in the field and click on the 3D image that appears;\n1. Download the model by clicking on `Download Coordinates`, and then on the `SDF` option;\n3. Click on the first link to open the information about aspirin\nDownload the structural model of aspirin from PubChem;\n1. Open the JSmol Console in your browser (right-click on the screen and select \"Console\");\n1. Alternatively:\na. Locate the file on your PC by going to \"File-->Load-->Open local file,\" then click \"Load\" to load it;\nb. Click on the downloaded file (\"aspirin.sdf\", for example) and drag it directly into the JSmol window. \n\n</div>\n\\\n\n![Example of the aspirin model for download from PubChem.](aspirin.png)\n\\\n### Loading the molecule via command line\n\n| Loading a particular model via command line is restricted to searching for it on the internet, in databases, or on web pages. To do this, open the *Console* as explained above. The upper part is used to display the results of the commands, and the lower part is used to type them. In this case, click on the lower box of the *Console* and type the loading command, shown here as an example for an *alkane*:\n\n```{r, eval=FALSE}\nload $alkane\n```\n\n| The *Jmol* *Console*, although it is a command programming language in its own right, has an interesting advantage over other programming languages: *commands can be entered in the Console using either upper or lower case letters, and in both singular and plural forms.*\n\n| You can try with other molecules, such as *aspirin*, *cholesterol*, *phenol*, etc. (names in English, due to the database). To retrieve a command line that was written previously, simply *navigate between the commands that were used with the up and down arrows on the keyboard (command history)*.\n\nMolecular models are loaded from the database [Cactus - CADD Group Chemoinformatics Tools and User Services](https://cactus.nci.nih.gov/chemical/structure)\n\n\n### Building the molecule using SMILES\n\n| No, it is not a literal translation of *“smiles”*, but rather a coding of structures for text. In this format, you can load a molecule using *SMILES* codes, and the system fills in the complementary hydrogen atoms. \n\n\n| Try this formatting at the address below. \n\n```{r, eval=FALSE}\nhttps://chemapps.stolaf.edu/jmol/jmol.php?model=C\n```\n\n\n| Then replace the *model* of the *link*, *“model=”* with the following *SMILES* codes, alternatively:\n```{r, eval=FALSE}\n\n1. Single bond: CC, CN, CO\n2. Double bond: C=C, C=N, C=O\n3. Triple bond: N%23N, CC%23C\n\nNote: Although it seems strange (and it is!), the code for the triple bond is intended to circumvent the *SMILES* command, *“#”*, which is interpreted differently in internet addresses.\n```\n\n\n\n### Loading biopolymers (proteins, enzymes, nucleic acids) via command line\n\n| As mentioned above, biological macromolecules are loaded by identifying an alphanumeric code from the [PDB-Protein Data Bank](https://www.rcsb.org/) database. After obtaining this code, you can load the biopolymer via the *online link* or the *Console*. But be aware that the instructions are different (and don't ask me why?!):\n\n\n```{r, eval=FALSE}\nThrough the Console:\nload=XXXX # where XXXX is the macromolecule code\n# Note: Note that the \"$\" sign is replaced by \"=\" for the PDB\n\nThrough the online link:\npdbid=XXXX\n# Note: As the link is more complicated, here is a complete example for bungarotoxin, a snake protein toxin:\n# https://chemapps.stolaf.edu/jmol/jmol.php?&pdbid=1ik8\n```\n\n\n| This can be illustrated by remotely loading the spike protein from the SARS-CoV-2 virus, as follows:\n\n\n```{r, eval=FALSE}\n1. Go to the PDB-Protein Data Bank website - https://www.rcsb.org/ ;\n2. In the search field, type \"spike sars-cov-2\" ;\n3. Select the first option (the website will direct you to several structures of the spike protein);\n4. Memorize the code of the first option (although any of them will work), i.e., \"7FCD\";\n5. Enter the line to load the protein: \"load=7FCD\" (upper or lower case letters are acceptable)\n```\n\n\n\n| The default representation for proteins in *Jmol* is wireframe. To view the virus protein in a more \"friendly\" way, similar to how it appears in texts or on the internet, enter the commands below, your **first sequence in programming language**.\n\n```{r, eval=FALSE}\ncartoon only # exclusive representation of the biopolymer structure\ncolor chain # coloring by protein \"chains\"\n```\n\n\n![Representation of the *spike* protein of the Sars-Cov-2 virus (coloring by number of chains).](spike.png)\n\n\n| Proteins, enzymes, nucleic acids, and macromolecular associations are more relevant to the study of structural *Biochemistry*. In this regard, I invite you to visit a section of the *website* that has detailed descriptions and representations of [Biochemistry](../../superior/jmol/index_jmol_en.html) structures with the help of *Jmol*.\n","srcMarkdownNoYaml":"\n\n<div class=\"reminder-objetivos\">\n\nObjectives:\\\n1. Load a molecule into Jmol in an alternative way\\\n2. Use the Console for some commands\\\n\n</div>\n\n## How to load a molecule into JSmol\n\n| *JSmol* is nothing more than *Jmol* itself, only developed for use in an internet browser, and which uses *JavaScript* among its languages (hence the *S* in *JSmol*). \n\n| Assuming that you have already opened the window for the *JSmol* *applet* in your browser but, contrary to what was done before (molecule name at the end of the *site* [PubChem](https://pubchem.ncbi.nlm.nih.gov/)), you want to:\n\n* load a molecule from another database;\n* load a molecule whose file is already on your computer\n\n| Well, in that case you can use the *mouse* or a *command line*, whichever you prefer.\n\n### Loading the molecule with the *mouse*\n\n| To do this, simply right-click on the screen, as before, and select *File--\\>Load*. The options that appear are:\n\n\n```{r, eval=FALSE}\n* Open local file # opens a window to search for the model file on your computer;\n* Open URL # opens a window to search for the internet address that has the file\n* Get PDB file # opens a window to enter a macromolecule code from the website of the same name (mainly proteins and nucleic acids)\n* Get MOL file # opens a window to search for a *.mol file\n* Open script # opens a window to search for a piece of code on the computer\n```\n\n\n| The first option is self-explanatory (`Open local file`), the second option (`Open URL`) depends on the correct address for a given molecular model, the third (`Get PDB file`) refers to the [Protein Data Brookhaven](https://www.rcsb.org) database for biopolymers, the fourth (`Get MOL file`) involves searching *online* in a specific database for small molecules, and the last (`Open script`), searching for a file containing lines of *Jmol* code for a set of actions.\n\n| As textbooks cover small molecular structures, usually associated with functional groups in *Inorganic and Organic Chemistry*, as well as specific examples in areas such as *Health, Biotechnology, and Industry*, including *some macromolecule models*, it can be concluded that you are more likely to use remote search for small molecules (*Get MOL file*), molecules contained on your computer (*Open local file*), and/or biomacromolecules (*Get PDB file*).\n\n| Loading small molecules is *identical* to what was tried by adding the model name to the end of the [JSmol](https://chemapps.stolaf.edu/jmol/jmol.php?model=water) address. Remote loading for protein, enzyme, and nucleic acid models requires knowledge of their *PDB code* or a keyword search on the [Protein Data Brookhaven](https://www.rcsb.org) website.\n\n| Loading molecules saved on your PC involves a few steps, namely:\n\n1. Obtain the molecule model from the internet, or build it yourself;\n2. Download the file corresponding to the model (usually with an attribute \\*.mol, \\*.cif, \\*.cml, \\*.sdf, among more than 60 formats);\n3. Load it onto the [JSmol](https://chemapps.stolaf.edu/jmol/jmol.php?model=water) page in one of two ways:\n\n```{r, eval=FALSE}\n1. By clicking: File --> Load --> Open local file ;\n2. By dragging the file from the folder where it is located to the JSmol tab in the browser.\n```\n\n<!---insert some links to download molecules...there are several--->\n\n| For example, let's say you want to view the structure of *aspirin* downloaded to your computer.\n\n<div class=\"reminder-markdown\">\n\n**Now it's up to you:**\n\n1. Go to the Pubchem website: https://pubchem.ncbi.nlm.nih.gov/\n1. Type `aspirin` in the field and click on the 3D image that appears;\n1. Download the model by clicking on `Download Coordinates`, and then on the `SDF` option;\n3. Click on the first link to open the information about aspirin\nDownload the structural model of aspirin from PubChem;\n1. Open the JSmol Console in your browser (right-click on the screen and select \"Console\");\n1. Alternatively:\na. Locate the file on your PC by going to \"File-->Load-->Open local file,\" then click \"Load\" to load it;\nb. Click on the downloaded file (\"aspirin.sdf\", for example) and drag it directly into the JSmol window. \n\n</div>\n\\\n\n![Example of the aspirin model for download from PubChem.](aspirin.png)\n\\\n### Loading the molecule via command line\n\n| Loading a particular model via command line is restricted to searching for it on the internet, in databases, or on web pages. To do this, open the *Console* as explained above. The upper part is used to display the results of the commands, and the lower part is used to type them. In this case, click on the lower box of the *Console* and type the loading command, shown here as an example for an *alkane*:\n\n```{r, eval=FALSE}\nload $alkane\n```\n\n| The *Jmol* *Console*, although it is a command programming language in its own right, has an interesting advantage over other programming languages: *commands can be entered in the Console using either upper or lower case letters, and in both singular and plural forms.*\n\n| You can try with other molecules, such as *aspirin*, *cholesterol*, *phenol*, etc. (names in English, due to the database). To retrieve a command line that was written previously, simply *navigate between the commands that were used with the up and down arrows on the keyboard (command history)*.\n\nMolecular models are loaded from the database [Cactus - CADD Group Chemoinformatics Tools and User Services](https://cactus.nci.nih.gov/chemical/structure)\n\n\n### Building the molecule using SMILES\n\n| No, it is not a literal translation of *“smiles”*, but rather a coding of structures for text. In this format, you can load a molecule using *SMILES* codes, and the system fills in the complementary hydrogen atoms. \n\n\n| Try this formatting at the address below. \n\n```{r, eval=FALSE}\nhttps://chemapps.stolaf.edu/jmol/jmol.php?model=C\n```\n\n\n| Then replace the *model* of the *link*, *“model=”* with the following *SMILES* codes, alternatively:\n```{r, eval=FALSE}\n\n1. Single bond: CC, CN, CO\n2. Double bond: C=C, C=N, C=O\n3. Triple bond: N%23N, CC%23C\n\nNote: Although it seems strange (and it is!), the code for the triple bond is intended to circumvent the *SMILES* command, *“#”*, which is interpreted differently in internet addresses.\n```\n\n\n\n### Loading biopolymers (proteins, enzymes, nucleic acids) via command line\n\n| As mentioned above, biological macromolecules are loaded by identifying an alphanumeric code from the [PDB-Protein Data Bank](https://www.rcsb.org/) database. After obtaining this code, you can load the biopolymer via the *online link* or the *Console*. But be aware that the instructions are different (and don't ask me why?!):\n\n\n```{r, eval=FALSE}\nThrough the Console:\nload=XXXX # where XXXX is the macromolecule code\n# Note: Note that the \"$\" sign is replaced by \"=\" for the PDB\n\nThrough the online link:\npdbid=XXXX\n# Note: As the link is more complicated, here is a complete example for bungarotoxin, a snake protein toxin:\n# https://chemapps.stolaf.edu/jmol/jmol.php?&pdbid=1ik8\n```\n\n\n| This can be illustrated by remotely loading the spike protein from the SARS-CoV-2 virus, as follows:\n\n\n```{r, eval=FALSE}\n1. Go to the PDB-Protein Data Bank website - https://www.rcsb.org/ ;\n2. In the search field, type \"spike sars-cov-2\" ;\n3. Select the first option (the website will direct you to several structures of the spike protein);\n4. Memorize the code of the first option (although any of them will work), i.e., \"7FCD\";\n5. Enter the line to load the protein: \"load=7FCD\" (upper or lower case letters are acceptable)\n```\n\n\n\n| The default representation for proteins in *Jmol* is wireframe. To view the virus protein in a more \"friendly\" way, similar to how it appears in texts or on the internet, enter the commands below, your **first sequence in programming language**.\n\n```{r, eval=FALSE}\ncartoon only # exclusive representation of the biopolymer structure\ncolor chain # coloring by protein \"chains\"\n```\n\n\n![Representation of the *spike* protein of the Sars-Cov-2 virus (coloring by number of chains).](spike.png)\n\n\n| Proteins, enzymes, nucleic acids, and macromolecular associations are more relevant to the study of structural *Biochemistry*. In this regard, I invite you to visit a section of the *website* that has detailed descriptions and representations of [Biochemistry](../../superior/jmol/index_jmol_en.html) structures with the help of *Jmol*.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"number-sections":true,"output-file":"comandosJmol_en.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.22","theme":{"light":"flatly"},"title":"Some commands to venture into flying molecules"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}