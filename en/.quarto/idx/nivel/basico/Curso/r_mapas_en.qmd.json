{"title":"7 - Interactive maps with `plotly`","markdown":{"yaml":{"title":"7 - Interactive maps with `plotly`","format":"html","toc":true,"number-sections":true,"lang":"en"},"headingText":"Create sample data with coordinates of some cities","containsRefs":false,"markdown":"\n\n<div class = \"reminder-objetivos\">\nObjectives:\\\n1. Learn about the potential of \"plotly\" for creating interactive maps\\\n2. Create an interactive map with inserted data\\\n3. Create an interactive map with imported data \\\n</div>\n\n\n| Finally, we leave this last part of our course to introduce you to another *\"really cool\"* potential of `plotly` for teaching and learning: the construction of interactive maps. \n\n| Interactive maps allow you to view information by hovering your mouse over the data or by clicking on a map containing that data. Because it is a map, the information is obtained in specific geographic coordinates. This feature therefore makes it essential to have the longitude and latitude coordinates related to the geographic points you want to display.\n\n| Here is a simple example, locating the three municipalities in southern Minas Gerais where the campuses of the Federal University of Alfenas (UNIFAL-MG) are located.\n\n```{r}\nlibrary(plotly)\n\ncities <- data.frame(\nname = c(\"Alfenas\", \"Varginha\", \"Poços de Caldas\"),\nlat = c(-21.42943530, -21.539957, -21.783731), # Latitude\nlon = c(-45.95948212, -45.433960, -46.564178) # Longitude\n)\n\n# Create the interactive map\nplot_ly(\ndata = cities,\nlat = ~lat,\nlon = ~lon,\ntype = 'scattergeo',\nmode = 'markers+text',\ntext = ~name,\nmarker = list(size = 10, color = 'blue', opacity = 0.7),\ntextposition = \"top center\") %>%\nlayout(\ntitle = \"Municipalities of UNIFAL-MG campuses\",\ngeo = list(\nscope = 'south america',\nshowland = TRUE\n)\n)\n```\n\n\n| To view the municipalities, zoom in on the image with your mouse. Note that the map starts in South America, a condition inserted in the code to facilitate the search for cities. Try placing a comment (*#*) to the left of the section \"*scope = ...\"*, and the information will start from the *mundi* map. Now notice that when you hover your mouse over the municipalities, the proposed geographic coordinates are identified.\n\\\n\n<div class=\"reminder-markdown\">\n\n**Now it's your turn:**\n\n1. Locate the geographic coordinates (longitude and latitude) of your hometown or that of a loved one. To do this, search the internet;\n2. Copy the code above and paste it into a new script; \n3. Replace the attributes *\"name\"*, *\"lat\"*, and *\"lon\"* in the `data.frame` of the code with the ones you found.\n4. Run the script and observe the selected municipality on the interactive map.\nTip: if you selected a city outside South America, put a *\"#\"* before the line \"*scope = ...\"*.\n\n</div>\n\n\n## World oil production\n\n\n| Now imagine that instead of entering the data one by one, you can *import the data from an online repository* to build the map, as was done in the previous step. To illustrate this, let's import a spreadsheet on global oil production. This category includes crude oil, shale oil, tar sands, condensates, and natural gas liquids (ethane, LPG, and naphtha separated from natural gas production).\n\nAt the same time, we will filter the imported data for the year 2014, as found in the [Our World In Data](https://github.com/owid/owid-datasets/tree/master/datasets) database. \n\n\n![World oil production. Source: MAPA: secondary education - Human sciences and their technologies. 3rd term. 2nd year, p.81.](petroleo_mapa.png)\n\n\n```{r}\nlibrary(plotly)\n\n# Example of dataframe with fictitious values\ndf <- read.csv(\"https://raw.githubusercontent.com/owid/owid-datasets/refs/heads/master/datasets/Oil%20production%20-%20Etemad%20%26%20Luciana/Oil%20production%20-%20Etemad%20%26%20Luciana.csv\")\n\n# Renaming columns to facilitate interpretation and plotting\n\nnames(df) <- c(\"Country\", \"Year\", \"Production.TeraWatt\")\n\n# Filtering data for the last year (2014)\ndf <- subset(df, Year == \"2014\")\n\nhead(df)\n\n\n# Creating the choropleth map with the color scale adjusted\nlibrary(plotly)\nplot_ly(\ndata = df,\nlocations = ~Country,\nlocationmode = \"country names\",\nz = ~Production.TeraWatt, # Variable that determines the colors\ntype = \"choropleth\",\ncolorscale = \"RdBu\") # other scales: # other scales: Viridis, Inferno, Blues, Cividis, Greens, ...\n```\n\n\n| Following the same logic as the previous map, if you hover your mouse over the countries, you will see the consumption identified in each one. Note that there is a sidebar showing the legend about the production quantity, in Note also that the \"type\" of the graph is now choropleth (and not scattergeo). In its simplest version, it only needs the standardized names of the countries. But it can also be done with a database that only has the geographical coordinates of latitude and longitude.\n\n| To help with this, here are two useful links to geographic coordinate files, accessible via `R`:\n\n* [Coordinates of Brazilian municipalities](https://raw.githubusercontent.com/kelvins/municipios-brasileiros/refs/heads/main/csv/municipios.csv)\n* [Coordinates of world capitals](https://raw.githubusercontent.com/bahar/WorldCityLocations/refs/heads/master/World_Cities_Location_table.csv)\n\n| In this case, any database on this subject would be welcome. In practice, this means being able to illustrate any educational content interactively on a map (e.g., production/export of raw materials, clinical observations, historical landmarks, etc.).\n","srcMarkdownNoYaml":"\n\n<div class = \"reminder-objetivos\">\nObjectives:\\\n1. Learn about the potential of \"plotly\" for creating interactive maps\\\n2. Create an interactive map with inserted data\\\n3. Create an interactive map with imported data \\\n</div>\n\n\n| Finally, we leave this last part of our course to introduce you to another *\"really cool\"* potential of `plotly` for teaching and learning: the construction of interactive maps. \n\n| Interactive maps allow you to view information by hovering your mouse over the data or by clicking on a map containing that data. Because it is a map, the information is obtained in specific geographic coordinates. This feature therefore makes it essential to have the longitude and latitude coordinates related to the geographic points you want to display.\n\n| Here is a simple example, locating the three municipalities in southern Minas Gerais where the campuses of the Federal University of Alfenas (UNIFAL-MG) are located.\n\n```{r}\nlibrary(plotly)\n\n# Create sample data with coordinates of some cities\ncities <- data.frame(\nname = c(\"Alfenas\", \"Varginha\", \"Poços de Caldas\"),\nlat = c(-21.42943530, -21.539957, -21.783731), # Latitude\nlon = c(-45.95948212, -45.433960, -46.564178) # Longitude\n)\n\n# Create the interactive map\nplot_ly(\ndata = cities,\nlat = ~lat,\nlon = ~lon,\ntype = 'scattergeo',\nmode = 'markers+text',\ntext = ~name,\nmarker = list(size = 10, color = 'blue', opacity = 0.7),\ntextposition = \"top center\") %>%\nlayout(\ntitle = \"Municipalities of UNIFAL-MG campuses\",\ngeo = list(\nscope = 'south america',\nshowland = TRUE\n)\n)\n```\n\n\n| To view the municipalities, zoom in on the image with your mouse. Note that the map starts in South America, a condition inserted in the code to facilitate the search for cities. Try placing a comment (*#*) to the left of the section \"*scope = ...\"*, and the information will start from the *mundi* map. Now notice that when you hover your mouse over the municipalities, the proposed geographic coordinates are identified.\n\\\n\n<div class=\"reminder-markdown\">\n\n**Now it's your turn:**\n\n1. Locate the geographic coordinates (longitude and latitude) of your hometown or that of a loved one. To do this, search the internet;\n2. Copy the code above and paste it into a new script; \n3. Replace the attributes *\"name\"*, *\"lat\"*, and *\"lon\"* in the `data.frame` of the code with the ones you found.\n4. Run the script and observe the selected municipality on the interactive map.\nTip: if you selected a city outside South America, put a *\"#\"* before the line \"*scope = ...\"*.\n\n</div>\n\n\n## World oil production\n\n\n| Now imagine that instead of entering the data one by one, you can *import the data from an online repository* to build the map, as was done in the previous step. To illustrate this, let's import a spreadsheet on global oil production. This category includes crude oil, shale oil, tar sands, condensates, and natural gas liquids (ethane, LPG, and naphtha separated from natural gas production).\n\nAt the same time, we will filter the imported data for the year 2014, as found in the [Our World In Data](https://github.com/owid/owid-datasets/tree/master/datasets) database. \n\n\n![World oil production. Source: MAPA: secondary education - Human sciences and their technologies. 3rd term. 2nd year, p.81.](petroleo_mapa.png)\n\n\n```{r}\nlibrary(plotly)\n\n# Example of dataframe with fictitious values\ndf <- read.csv(\"https://raw.githubusercontent.com/owid/owid-datasets/refs/heads/master/datasets/Oil%20production%20-%20Etemad%20%26%20Luciana/Oil%20production%20-%20Etemad%20%26%20Luciana.csv\")\n\n# Renaming columns to facilitate interpretation and plotting\n\nnames(df) <- c(\"Country\", \"Year\", \"Production.TeraWatt\")\n\n# Filtering data for the last year (2014)\ndf <- subset(df, Year == \"2014\")\n\nhead(df)\n\n\n# Creating the choropleth map with the color scale adjusted\nlibrary(plotly)\nplot_ly(\ndata = df,\nlocations = ~Country,\nlocationmode = \"country names\",\nz = ~Production.TeraWatt, # Variable that determines the colors\ntype = \"choropleth\",\ncolorscale = \"RdBu\") # other scales: # other scales: Viridis, Inferno, Blues, Cividis, Greens, ...\n```\n\n\n| Following the same logic as the previous map, if you hover your mouse over the countries, you will see the consumption identified in each one. Note that there is a sidebar showing the legend about the production quantity, in Note also that the \"type\" of the graph is now choropleth (and not scattergeo). In its simplest version, it only needs the standardized names of the countries. But it can also be done with a database that only has the geographical coordinates of latitude and longitude.\n\n| To help with this, here are two useful links to geographic coordinate files, accessible via `R`:\n\n* [Coordinates of Brazilian municipalities](https://raw.githubusercontent.com/kelvins/municipios-brasileiros/refs/heads/main/csv/municipios.csv)\n* [Coordinates of world capitals](https://raw.githubusercontent.com/bahar/WorldCityLocations/refs/heads/master/World_Cities_Location_table.csv)\n\n| In this case, any database on this subject would be welcome. In practice, this means being able to illustrate any educational content interactively on a map (e.g., production/export of raw materials, clinical observations, historical landmarks, etc.).\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"number-sections":true,"output-file":"r_mapas_en.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.22","theme":{"light":"flatly"},"title":"7 - Interactive maps with `plotly`"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}