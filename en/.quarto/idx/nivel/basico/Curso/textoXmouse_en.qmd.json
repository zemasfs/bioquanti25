{"title":"2 - Mouse clicks *versus* command text","markdown":{"yaml":{"title":"2 - Mouse clicks *versus* command text","format":"html","toc":true,"number-sections":true,"lang":"en"},"headingText":"Mouse clicks","containsRefs":false,"markdown":"\n\n<div class=\"reminder-objetivos\">\n\nObjectives:\\\n1. Observe that there are two ways to perform actions in some programs: using the mouse or using text commands\\\n2. Observe the characteristics of each method\\\n3. Learn some principles for \"Reproducible Teaching\" and the advantages of using command lines instead of mouse movements\\\n</div>\n\n\n\n\n| Any computer program you have ever used, even on mobile devices, has its *usability* centered on the ease of use of clicks and drags with a *mouse*, *touchpad*, and even your fingers (capacitive screens). This greatly facilitates the intended quick actions. For example, in text editors, it is common to click on a formatting icon (italics, bold, etc.) or even type its shortcut to complete what you want in the text.\n\n\n| Simple, practical, and fast. In the same way, you can use *Jmol*, both in the version downloaded to your computer and in the *online* version. For the downloaded version, just look at the range of menu items and submenus. For the browser version, note that there is no menu!\n\n\n\n| However, the online version allows you to view the same information, albeit with a different formatting, by simply right-clicking anywhere on the screen (a fancy name for the screen containing some information, the molecule, in this case).\n\n\n## Command lines {#sec-linhasComando}\n\n\n| As with mouse clicks, you can also access a text field to enter *Jmol* commands, both in the downloaded version (*standalone*) and in the browser version (*JSmol applet*). For the former, click on *File--\\>Console*, and a window will appear for entering text. In the online version, right-click anywhere on the screen and choose *Console*.\n\n\n## Mouse clicks *versus* command lines\n\n\n| Although it is possible to use *Jmol* with both mouse clicks and text commands, *which is better?*\n\n\n| To help answer this question, let's use an electronic spreadsheet, such as *Excel* from the MS-Office suite, *Calc* from the *Libreoffice* suite, or *Spreadsheets* from the Google suite. Suppose you want to make a simple graph, taking two columns, each for a variable (independent or *x*, and dependent, or *y*). The usual thing would be to click on a menu item for graphs, select the desired columns in specific fields of the window that opens, select the type of graph, click on *next* or a similar term, select other characteristics (labels or names on the *x* and *y* axes, for example), and finally click on *finish* (or *OK*, or a term with a similar meaning). Simple, fast, and practical.\n\n\n| But (there's always a \"but\")...what if, in addition to constructing the graph, you needed to perform additional actions, such as obtaining the linear fit of the data, displaying the resulting line with a specific color and style, inserting the line equation at a specific point on the graph, adding a title, and changing the symbol of the points, including the type, size, and color. Phew!!!\n\n| No problem, either... as long as you have a good tutorial at hand, of course! Or that you are already familiar with the spreadsheet program, menus, and actions relevant to the various mouse clicks that will be necessary to obtain a nice linear regression graph at the end.\n\n| Now... one more small variable to add to the example above: suppose that you are not the one constructing the graph, but a student in your class, and that they have not been trained in the use of the spreadsheet or in the intended calculations!\n\n| Notice that now there will be some discomfort, since:\n\n\n1. The student has no prior knowledge of how to use the spreadsheet;\n2. The student has no prior knowledge of the intended calculations;\n3. You will have to train the student or provide them with a related training *guide*;\n4. If training has already taken place but the *guide* is not available, both you and the student will depend on your *memory retention* to successfully complete the task.\n\n| Now, what if the instructions for executing the final product were not in a *guide* for repeating *mouse* clicks, but rather in a short text containing both the commands in sequence and explanatory comments for each individual action, and that when inserted into the program, it generated the graph already fully formatted, colored, and with the linear adjustment and result parameters?\n\n## Advantages of using command lines over mouse clicks\n\n| In the hypothetical example above, note that a short text containing the command lines in sequence and comments referring to them allows:\n\n* the final product to be **reproducible** and error-free;\nthe final product to be produced without prior knowledge by the student; simply execute the code in the program;\n* the final product to be produced independently of the memory of those involved (sequence of clicks, for example);\n* a virtually infinite number of sequential actions, without the need to memorize the order of mouse clicks;\n* the learning of each command used in human language, since there are comments from the author for each line;\n* the product can be modified to generate a different object at the end (change of color, axis labels, another title, for example)\n* the same graph can be **reproduced**, but with another set of data (*x* and *y*);\n* that the learner can try other commands to add different formatting and/or calculations to the product;\n* that you or the student can **reproduce** the product without resorting to memory, even centuries later, if predictions of mass extinction do not come true;\n* that anyone can *reproduce* the object, regardless of their level of technical training or the program's operability;\n* finally, that it is possible to teach certain content in a reproducible way...or...**Reproducible Teaching**.\n\n| Thus, this course intends to use only *command lines* to materialize the advantages described above, tangential to an active methodology focused, albeit incipient, on *Reproducible Teaching*, both for the *Jmol* tool and for the *R & RStudio* tool.\n\n| Regarding *Jmol*, therefore, the sequential actions for three-dimensional visualization of molecular models will be performed by the *Console* accessible as per item @sec-commandLines above.\n\n## *Scripts*\n\n| Put in the above form, when you have any set of sequential command lines, allowing you to act on an object such as a molecular model, and for a multitude of things, you then have a *script*. Technically speaking, a *script* is a block of sequential instructions in text for compilation into a program.\n\n| *Scripts* can be created in *Jmol* in a *browser* in two ways:\n\n```{r, eval=FALSE}\n1. Separating commands with \";\" - e.g., \"cpk only; color blue\"\n2. Separating commands by lines - e.g.,\n\"cpk only\ncolor blue\"\n```\n\n\n\n| If you want the model to perform a few commands, the best option is to separate them with semicolons (\";\"). But if you want something more \"sophisticated,\" we suggest separating them by lines. And more... commented lines written in a notepad or any text editor!\n\n\n### Advantages of using a notepad or text editor for serial commands\n\n| Imagine a more significant transformation to the original molecule loaded, such as magnification, coloring, representation, and movement effects. It is easy to see that a set of commented lines arranged in sequence facilitates both the observation of what is intended with the model and the identification of errors and adjustments.\n\n| This is also inherited from the concepts of *Reproducible Teaching*, as it facilitates the visualization of the code (*human readable format*) and its debugging (*code debug*). See the example below, reflect on its interpretation, copy it to a *notepad*, and test it in the *Console* of *Jmol*.\n\n![Structure of nicotine. Source: MAPA: high school - 2nd semester, 3rd year, p.61. Natural sciences and their technologies.](nicotine_mapa.png)\n\n```{r, eval = FALSE}\nload $nicotine\nbackground black # black background color\nspin 80 # rotates the molecule\ndelay 3 # wait 1 second\nspin off # stop rotation\ncpk # render as fill pattern\n```\n\n\n<div class=\"reminder-markdown\">\n\n**Now it's up to you**:\n\n1. Copy the code snippet above into a notepad.\n1. Change the lines of code randomly, copy and run again in the Console. \n1. Suggestions for changes (one or two... or all!): \n\\\nspin 300\n\\\ndelay 1\n\\\nbackground magenta\n</div>\n\n","srcMarkdownNoYaml":"\n\n<div class=\"reminder-objetivos\">\n\nObjectives:\\\n1. Observe that there are two ways to perform actions in some programs: using the mouse or using text commands\\\n2. Observe the characteristics of each method\\\n3. Learn some principles for \"Reproducible Teaching\" and the advantages of using command lines instead of mouse movements\\\n</div>\n\n\n\n## Mouse clicks\n\n| Any computer program you have ever used, even on mobile devices, has its *usability* centered on the ease of use of clicks and drags with a *mouse*, *touchpad*, and even your fingers (capacitive screens). This greatly facilitates the intended quick actions. For example, in text editors, it is common to click on a formatting icon (italics, bold, etc.) or even type its shortcut to complete what you want in the text.\n\n\n| Simple, practical, and fast. In the same way, you can use *Jmol*, both in the version downloaded to your computer and in the *online* version. For the downloaded version, just look at the range of menu items and submenus. For the browser version, note that there is no menu!\n\n\n\n| However, the online version allows you to view the same information, albeit with a different formatting, by simply right-clicking anywhere on the screen (a fancy name for the screen containing some information, the molecule, in this case).\n\n\n## Command lines {#sec-linhasComando}\n\n\n| As with mouse clicks, you can also access a text field to enter *Jmol* commands, both in the downloaded version (*standalone*) and in the browser version (*JSmol applet*). For the former, click on *File--\\>Console*, and a window will appear for entering text. In the online version, right-click anywhere on the screen and choose *Console*.\n\n\n## Mouse clicks *versus* command lines\n\n\n| Although it is possible to use *Jmol* with both mouse clicks and text commands, *which is better?*\n\n\n| To help answer this question, let's use an electronic spreadsheet, such as *Excel* from the MS-Office suite, *Calc* from the *Libreoffice* suite, or *Spreadsheets* from the Google suite. Suppose you want to make a simple graph, taking two columns, each for a variable (independent or *x*, and dependent, or *y*). The usual thing would be to click on a menu item for graphs, select the desired columns in specific fields of the window that opens, select the type of graph, click on *next* or a similar term, select other characteristics (labels or names on the *x* and *y* axes, for example), and finally click on *finish* (or *OK*, or a term with a similar meaning). Simple, fast, and practical.\n\n\n| But (there's always a \"but\")...what if, in addition to constructing the graph, you needed to perform additional actions, such as obtaining the linear fit of the data, displaying the resulting line with a specific color and style, inserting the line equation at a specific point on the graph, adding a title, and changing the symbol of the points, including the type, size, and color. Phew!!!\n\n| No problem, either... as long as you have a good tutorial at hand, of course! Or that you are already familiar with the spreadsheet program, menus, and actions relevant to the various mouse clicks that will be necessary to obtain a nice linear regression graph at the end.\n\n| Now... one more small variable to add to the example above: suppose that you are not the one constructing the graph, but a student in your class, and that they have not been trained in the use of the spreadsheet or in the intended calculations!\n\n| Notice that now there will be some discomfort, since:\n\n\n1. The student has no prior knowledge of how to use the spreadsheet;\n2. The student has no prior knowledge of the intended calculations;\n3. You will have to train the student or provide them with a related training *guide*;\n4. If training has already taken place but the *guide* is not available, both you and the student will depend on your *memory retention* to successfully complete the task.\n\n| Now, what if the instructions for executing the final product were not in a *guide* for repeating *mouse* clicks, but rather in a short text containing both the commands in sequence and explanatory comments for each individual action, and that when inserted into the program, it generated the graph already fully formatted, colored, and with the linear adjustment and result parameters?\n\n## Advantages of using command lines over mouse clicks\n\n| In the hypothetical example above, note that a short text containing the command lines in sequence and comments referring to them allows:\n\n* the final product to be **reproducible** and error-free;\nthe final product to be produced without prior knowledge by the student; simply execute the code in the program;\n* the final product to be produced independently of the memory of those involved (sequence of clicks, for example);\n* a virtually infinite number of sequential actions, without the need to memorize the order of mouse clicks;\n* the learning of each command used in human language, since there are comments from the author for each line;\n* the product can be modified to generate a different object at the end (change of color, axis labels, another title, for example)\n* the same graph can be **reproduced**, but with another set of data (*x* and *y*);\n* that the learner can try other commands to add different formatting and/or calculations to the product;\n* that you or the student can **reproduce** the product without resorting to memory, even centuries later, if predictions of mass extinction do not come true;\n* that anyone can *reproduce* the object, regardless of their level of technical training or the program's operability;\n* finally, that it is possible to teach certain content in a reproducible way...or...**Reproducible Teaching**.\n\n| Thus, this course intends to use only *command lines* to materialize the advantages described above, tangential to an active methodology focused, albeit incipient, on *Reproducible Teaching*, both for the *Jmol* tool and for the *R & RStudio* tool.\n\n| Regarding *Jmol*, therefore, the sequential actions for three-dimensional visualization of molecular models will be performed by the *Console* accessible as per item @sec-commandLines above.\n\n## *Scripts*\n\n| Put in the above form, when you have any set of sequential command lines, allowing you to act on an object such as a molecular model, and for a multitude of things, you then have a *script*. Technically speaking, a *script* is a block of sequential instructions in text for compilation into a program.\n\n| *Scripts* can be created in *Jmol* in a *browser* in two ways:\n\n```{r, eval=FALSE}\n1. Separating commands with \";\" - e.g., \"cpk only; color blue\"\n2. Separating commands by lines - e.g.,\n\"cpk only\ncolor blue\"\n```\n\n\n\n| If you want the model to perform a few commands, the best option is to separate them with semicolons (\";\"). But if you want something more \"sophisticated,\" we suggest separating them by lines. And more... commented lines written in a notepad or any text editor!\n\n\n### Advantages of using a notepad or text editor for serial commands\n\n| Imagine a more significant transformation to the original molecule loaded, such as magnification, coloring, representation, and movement effects. It is easy to see that a set of commented lines arranged in sequence facilitates both the observation of what is intended with the model and the identification of errors and adjustments.\n\n| This is also inherited from the concepts of *Reproducible Teaching*, as it facilitates the visualization of the code (*human readable format*) and its debugging (*code debug*). See the example below, reflect on its interpretation, copy it to a *notepad*, and test it in the *Console* of *Jmol*.\n\n![Structure of nicotine. Source: MAPA: high school - 2nd semester, 3rd year, p.61. Natural sciences and their technologies.](nicotine_mapa.png)\n\n```{r, eval = FALSE}\nload $nicotine\nbackground black # black background color\nspin 80 # rotates the molecule\ndelay 3 # wait 1 second\nspin off # stop rotation\ncpk # render as fill pattern\n```\n\n\n<div class=\"reminder-markdown\">\n\n**Now it's up to you**:\n\n1. Copy the code snippet above into a notepad.\n1. Change the lines of code randomly, copy and run again in the Console. \n1. Suggestions for changes (one or two... or all!): \n\\\nspin 300\n\\\ndelay 1\n\\\nbackground magenta\n</div>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"number-sections":true,"output-file":"textoXmouse_en.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.29","theme":{"light":"flatly"},"title":"2 - Mouse clicks *versus* command text"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}